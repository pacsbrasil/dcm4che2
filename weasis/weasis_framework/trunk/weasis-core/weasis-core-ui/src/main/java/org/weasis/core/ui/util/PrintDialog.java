package org.weasis.core.ui.util;

/*
 * @copyright Copyright (c) 2009 Animati Sistemas de Inform√°tica Ltda. (http://www.animati.com.br)
 */

/*
 * PrintDialog.java
 *
 * Created on 17/11/2011, 09:54:28
 */
import java.awt.event.ActionEvent;
import java.awt.event.KeyEvent;

import javax.swing.AbstractAction;
import javax.swing.ActionMap;
import javax.swing.InputMap;
import javax.swing.JComponent;
import javax.swing.KeyStroke;

import org.weasis.core.api.media.data.ImageElement;
import org.weasis.core.ui.editor.image.ExportImage;
import org.weasis.core.ui.editor.image.ImageViewerEventManager;

/**
 * 
 * @author Marcelo Porto (marcelo@animati.com.br)
 */
public class PrintDialog extends javax.swing.JDialog {

    /** A return status code - returned if Cancel button has been pressed */
    public static final int RET_CANCEL = 0;
    /** A return status code - returned if OK button has been pressed */
    public static final int RET_OK = 1;

    /** Creates new form PrintDialog */
    public PrintDialog(java.awt.Frame parent, boolean modal, ImageViewerEventManager eventManager) {
        super(parent, modal);
        initComponents();

        this.eventManager = eventManager;

        // Close the dialog when Esc is pressed
        String cancelName = "cancel";
        InputMap inputMap = getRootPane().getInputMap(JComponent.WHEN_ANCESTOR_OF_FOCUSED_COMPONENT);
        inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_ESCAPE, 0), cancelName);
        ActionMap actionMap = getRootPane().getActionMap();
        actionMap.put(cancelName, new AbstractAction() {

            @Override
            public void actionPerformed(ActionEvent e) {
                doClose(RET_CANCEL);
            }
        });
        setVisible(true);
    }

    /** @return the return status of this dialog - one of RET_OK or RET_CANCEL */
    public int getReturnStatus() {
        return returnStatus;
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The
     * content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        orientationRadioButtons = new javax.swing.ButtonGroup();
        printButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();
        paperSizeLabel = new javax.swing.JLabel();
        paperSizeComboBox = new javax.swing.JComboBox();
        imageSizeLabel = new javax.swing.JLabel();
        imageSizeSlider = new javax.swing.JSlider();
        sliderValue = new javax.swing.JLabel();
        orientationLabel = new javax.swing.JLabel();
        portraitRadioButton = new javax.swing.JRadioButton();
        landscapeRadioButton = new javax.swing.JRadioButton();
        positionLabel = new javax.swing.JLabel();
        positionComboBox = new javax.swing.JComboBox();
        annotationsCheckBox = new javax.swing.JCheckBox();
        fontSizeLabel = new javax.swing.JLabel();
        fontSizeSpinner = new javax.swing.JSpinner();

        jLabel1.setText("jLabel1");

        addWindowListener(new java.awt.event.WindowAdapter() {
            @Override
            public void windowClosing(java.awt.event.WindowEvent evt) {
                closeDialog(evt);
            }
        });

        printButton.setText("Print");
        printButton.addActionListener(new java.awt.event.ActionListener() {
            @Override
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                printButtonActionPerformed(evt);
            }
        });

        cancelButton.setText("Cancel");
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            @Override
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        paperSizeLabel.setText("Paper:");

        paperSizeComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "A4" }));

        imageSizeLabel.setText("Image size:");

        imageSizeSlider.addChangeListener(new javax.swing.event.ChangeListener() {
            @Override
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                imageSizeSliderStateChanged(evt);
            }
        });

        sliderValue.setText("50%");

        orientationLabel.setText("Orientation:");

        portraitRadioButton.setText("Portrait");
        orientationRadioButtons.add(portraitRadioButton);

        landscapeRadioButton.setText("Landscape");
        orientationRadioButtons.add(landscapeRadioButton);

        positionLabel.setText("Image position:");

        positionComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Centralized", "Top-left" }));

        annotationsCheckBox.setText("Print image with annotations");

        fontSizeLabel.setText("Annotations font size:");

        fontSizeSpinner.setValue(36);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(layout
            .createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(
                javax.swing.GroupLayout.Alignment.TRAILING,
                layout
                    .createSequentialGroup()
                    .addContainerGap(285, Short.MAX_VALUE)
                    .addComponent(printButton, javax.swing.GroupLayout.PREFERRED_SIZE, 67,
                        javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(cancelButton)
                    .addContainerGap())
            .addGroup(
                layout
                    .createSequentialGroup()
                    .addContainerGap()
                    .addComponent(paperSizeLabel)
                    .addGap(36, 36, 36)
                    .addComponent(paperSizeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE,
                        javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(329, Short.MAX_VALUE))
            .addGroup(
                layout
                    .createSequentialGroup()
                    .addContainerGap()
                    .addGroup(
                        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(imageSizeLabel).addComponent(orientationLabel).addComponent(positionLabel))
                    .addGap(26, 26, 26)
                    .addGroup(
                        layout
                            .createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(positionComboBox, javax.swing.GroupLayout.PREFERRED_SIZE,
                                javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(
                                layout.createSequentialGroup().addComponent(portraitRadioButton)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(landscapeRadioButton))
                            .addGroup(
                                layout
                                    .createSequentialGroup()
                                    .addComponent(imageSizeSlider, javax.swing.GroupLayout.PREFERRED_SIZE,
                                        javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(sliderValue))).addContainerGap(98, Short.MAX_VALUE))
            .addGroup(
                layout.createSequentialGroup().addContainerGap().addComponent(annotationsCheckBox)
                    .addContainerGap(268, Short.MAX_VALUE))
            .addGroup(
                layout
                    .createSequentialGroup()
                    .addContainerGap()
                    .addComponent(fontSizeLabel)
                    .addGap(18, 18, 18)
                    .addComponent(fontSizeSpinner, javax.swing.GroupLayout.PREFERRED_SIZE,
                        javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(272, Short.MAX_VALUE)));

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] { cancelButton, printButton });

        layout.setVerticalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(
            layout
                .createSequentialGroup()
                .addContainerGap()
                .addGroup(
                    layout
                        .createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(paperSizeLabel)
                        .addComponent(paperSizeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE,
                            javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(
                    layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(orientationLabel).addComponent(portraitRadioButton)
                        .addComponent(landscapeRadioButton))
                .addGap(18, 18, 18)
                .addGroup(
                    layout
                        .createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(imageSizeSlider, javax.swing.GroupLayout.PREFERRED_SIZE,
                            javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(sliderValue).addComponent(imageSizeLabel))
                .addGap(18, 18, 18)
                .addGroup(
                    layout
                        .createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(positionLabel)
                        .addComponent(positionComboBox, javax.swing.GroupLayout.PREFERRED_SIZE,
                            javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(annotationsCheckBox)
                .addGap(18, 18, 18)
                .addGroup(
                    layout
                        .createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(fontSizeLabel)
                        .addComponent(fontSizeSpinner, javax.swing.GroupLayout.PREFERRED_SIZE,
                            javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(35, 35, 35)
                .addGroup(
                    layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(cancelButton)
                        .addComponent(printButton)).addContainerGap()));

        getRootPane().setDefaultButton(printButton);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void printButtonActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_printButtonActionPerformed
        Float imageScale = (float) imageSizeSlider.getValue() / 100;
        PrintOptions printOptions =
            new PrintOptions(annotationsCheckBox.isSelected(), (Integer) fontSizeSpinner.getValue(), imageScale);
        ExportImage<ImageElement> exportImage = new ExportImage<ImageElement>(eventManager.getSelectedViewPane());
        ImagePrint print = new ImagePrint(exportImage, printOptions);
        print.print();
        doClose(RET_OK);

    }// GEN-LAST:event_printButtonActionPerformed

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_cancelButtonActionPerformed
        doClose(RET_CANCEL);
    }// GEN-LAST:event_cancelButtonActionPerformed

    /** Closes the dialog */
    private void closeDialog(java.awt.event.WindowEvent evt) {// GEN-FIRST:event_closeDialog
        doClose(RET_CANCEL);
    }// GEN-LAST:event_closeDialog

    private void imageSizeSliderStateChanged(javax.swing.event.ChangeEvent evt) {// GEN-FIRST:event_imageSizeSliderStateChanged
        if (!imageSizeSlider.getValueIsAdjusting()) {
            // Get new value
            int value = imageSizeSlider.getValue();
            sliderValue.setText(value + "%");
        }
    }// GEN-LAST:event_imageSizeSliderStateChanged

    private void doClose(int retStatus) {
        returnStatus = retStatus;
        setVisible(false);
        dispose();
    }

    /**
     * @param args
     *            the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        // <editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PrintDialog.class.getName()).log(java.util.logging.Level.SEVERE, null,
                ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PrintDialog.class.getName()).log(java.util.logging.Level.SEVERE, null,
                ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PrintDialog.class.getName()).log(java.util.logging.Level.SEVERE, null,
                ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PrintDialog.class.getName()).log(java.util.logging.Level.SEVERE, null,
                ex);
        }
        // </editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {

            @Override
            public void run() {
                PrintDialog dialog = new PrintDialog(new javax.swing.JFrame(), true, null);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {

                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox annotationsCheckBox;
    private javax.swing.JButton cancelButton;
    private javax.swing.JLabel fontSizeLabel;
    private javax.swing.JSpinner fontSizeSpinner;
    private javax.swing.JLabel imageSizeLabel;
    private javax.swing.JSlider imageSizeSlider;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JRadioButton landscapeRadioButton;
    private javax.swing.JLabel orientationLabel;
    private javax.swing.ButtonGroup orientationRadioButtons;
    private javax.swing.JComboBox paperSizeComboBox;
    private javax.swing.JLabel paperSizeLabel;
    private javax.swing.JRadioButton portraitRadioButton;
    private javax.swing.JComboBox positionComboBox;
    private javax.swing.JLabel positionLabel;
    private javax.swing.JButton printButton;
    private javax.swing.JLabel sliderValue;
    // End of variables declaration//GEN-END:variables
    private int returnStatus = RET_CANCEL;
    private ImageViewerEventManager eventManager;
}
