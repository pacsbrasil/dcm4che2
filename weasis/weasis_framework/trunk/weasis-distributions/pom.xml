<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>org.weasis</groupId>
	<artifactId>weasis-distributions</artifactId>
	<packaging>pom</packaging>
	<name>Weasis Distributions (WEB, portable, standalone)</name>
	<version>1.1.2-SNAPSHOT</version>
	<properties>
		<!-- dollar property to avoid replacing some variables when filtering resources files (ex. ${user.home} 
			in config.properties) -->
		<dollar>$</dollar>
		<tmp.dir>${project.build.directory}/tmp</tmp.dir>

		<tmp.bundle.dir>${project.build.directory}/tmp/bundle</tmp.bundle.dir>

		<pack200.ext></pack200.ext>

		<felix.framework.version>4.0.2</felix.framework.version>
		<felix.gogo.version>0.10.0</felix.gogo.version>
		<felix.gogo.command.version>0.12.0</felix.gogo.command.version>

		<felix.servlet.version>1.0.0</felix.servlet.version>
		<felix.bundlerepository.version>1.6.6</felix.bundlerepository.version>
		<felix.configadmin.version>1.2.8</felix.configadmin.version>
		<felix.prefs.version>1.0.4</felix.prefs.version>
		<felix.scr.version>1.6.0</felix.scr.version>
		<sling.commons.log.version>2.1.2</sling.commons.log.version>

		<weasis.launcher.version>0.5.9-SNAPSHOT</weasis.launcher.version>
		<weasis.core.version>0.5.9-SNAPSHOT</weasis.core.version>
		<weasis.imageio.version>0.7.7-SNAPSHOT</weasis.imageio.version>
		<weasis.jmc.version>0.5.9-SNAPSHOT</weasis.jmc.version>
		<weasis.base.version>0.5.9-SNAPSHOT</weasis.base.version>
		<weasis.dicom.version>0.5.9-SNAPSHOT</weasis.dicom.version>

		<mydoggy.version>1.5.0-b05</mydoggy.version>
		<substance.version>7.0.0</substance.version>
		<jai.version>1.1.4-b03</jai.version>
		<weasis.imageio.native.version>1.2-b04</weasis.imageio.native.version>
		<!-- <weasis.imageioext.kakadu.native.version>6.4.0</weasis.imageioext.kakadu.native.version> -->
		<com.sun.media.j3d.version>1.5.2</com.sun.media.j3d.version>
		<tilecachetool.version>1.0.2</tilecachetool.version>
	</properties>
	<repositories>
		<repository>
			<id>weasis</id>
			<url>http://dicom.vital-it.ch:8087/nexus/content/groups/public</url>
		</repository>
	</repositories>
	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<version>2.3</version>
				<executions>
					<execution>
						<id>copy-bundles</id>
						<phase>process-resources</phase>
						<goals>
							<goal>copy</goal>
						</goals>
						<configuration>
							<artifactItems>

								<!-- ===================================== -->
								<!-- OSGI Framework and Launcher -->
								<!-- (only one version, referenced in JNLP) -->
								<!-- ===================================== -->
								<artifactItem>
									<groupId>org.apache.felix</groupId>
									<artifactId>org.apache.felix.framework</artifactId>
									<version>${felix.framework.version}</version>
									<outputDirectory>${tmp.dir}</outputDirectory>
									<destFileName>felix.jar</destFileName>
								</artifactItem>
								<artifactItem>
									<groupId>org.weasis.launcher</groupId>
									<artifactId>weasis-launcher</artifactId>
									<version>${weasis.launcher.version}</version>
									<outputDirectory>${tmp.dir}</outputDirectory>
									<destFileName>weasis-launcher.jar</destFileName>
								</artifactItem>
								<artifactItem>
									<groupId>org.weasis.thirdparty</groupId>
									<artifactId>substance</artifactId>
									<version>${substance.version}</version>
									<outputDirectory>${tmp.dir}</outputDirectory>
									<destFileName>substance.jar</destFileName>
								</artifactItem>

								<!-- ===================================== -->
								<!-- Felix bundles -->
								<!-- ===================================== -->
								<artifactItem>
									<groupId>org.apache.sling</groupId>
									<artifactId>org.apache.sling.commons.log</artifactId>
									<version>${sling.commons.log.version}</version>
									<outputDirectory>${tmp.bundle.dir}</outputDirectory>
								</artifactItem>
								<artifactItem>
									<groupId>org.apache.felix</groupId>
									<artifactId>org.apache.felix.gogo.runtime</artifactId>
									<version>${felix.gogo.version}</version>
									<outputDirectory>${tmp.bundle.dir}</outputDirectory>
								</artifactItem>
								<artifactItem>
									<groupId>org.apache.felix</groupId>
									<artifactId>org.apache.felix.gogo.shell</artifactId>
									<version>${felix.gogo.version}</version>
									<outputDirectory>${tmp.bundle.dir}</outputDirectory>
								</artifactItem>
								<artifactItem>
									<groupId>org.apache.felix</groupId>
									<artifactId>org.apache.felix.gogo.command</artifactId>
									<version>${felix.gogo.command.version}</version>
									<outputDirectory>${tmp.bundle.dir}</outputDirectory>
								</artifactItem>
								<artifactItem>
									<groupId>org.apache.felix</groupId>
									<artifactId>org.apache.felix.scr</artifactId>
									<version>${felix.scr.version}</version>
									<outputDirectory>${tmp.bundle.dir}</outputDirectory>
								</artifactItem>
								<artifactItem>
									<groupId>org.apache.felix</groupId>
									<artifactId>javax.servlet</artifactId>
									<version>${felix.servlet.version}</version>
									<outputDirectory>${tmp.bundle.dir}</outputDirectory>
								</artifactItem>
								<artifactItem>
									<groupId>org.apache.felix</groupId>
									<artifactId>org.apache.felix.prefs</artifactId>
									<version>${felix.prefs.version}</version>
									<outputDirectory>${tmp.bundle.dir}</outputDirectory>
								</artifactItem>
								<artifactItem>
									<groupId>org.apache.felix</groupId>
									<artifactId>org.apache.felix.bundlerepository</artifactId>
									<version>${felix.bundlerepository.version}</version>
									<outputDirectory>${tmp.bundle.dir}</outputDirectory>
								</artifactItem>
								<artifactItem>
									<groupId>org.apache.felix</groupId>
									<artifactId>org.apache.felix.configadmin</artifactId>
									<version>${felix.configadmin.version}</version>
									<outputDirectory>${tmp.bundle.dir}</outputDirectory>
								</artifactItem>

								<!-- ===================================== -->
								<!-- Other required bundles -->
								<!-- ===================================== -->
								<artifactItem>
									<groupId>org.weasis.thirdparty</groupId>
									<artifactId>mydoggy</artifactId>
									<version>${mydoggy.version}</version>
									<outputDirectory>${tmp.bundle.dir}</outputDirectory>
								</artifactItem>
								<artifactItem>
									<groupId>org.weasis.thirdparty.com.sun.media</groupId>
									<artifactId>jai-lib</artifactId>
									<version>${jai.version}</version>
									<outputDirectory>${tmp.bundle.dir}</outputDirectory>
								</artifactItem>
								<artifactItem>
									<groupId>org.weasis.thirdparty.com.sun.media</groupId>
									<artifactId>jai-lib-linux-x86</artifactId>
									<version>${jai.version}</version>
									<outputDirectory>${tmp.bundle.dir}</outputDirectory>
								</artifactItem>
								<artifactItem>
									<groupId>org.weasis.thirdparty.com.sun.media</groupId>
									<artifactId>jai-lib-linux-x86-64</artifactId>
									<version>${jai.version}</version>
									<outputDirectory>${tmp.bundle.dir}</outputDirectory>
								</artifactItem>
								<artifactItem>
									<groupId>org.weasis.thirdparty.com.sun.media</groupId>
									<artifactId>jai-lib-windows-x86</artifactId>
									<version>${jai.version}</version>
									<outputDirectory>${tmp.bundle.dir}</outputDirectory>
								</artifactItem>
								<artifactItem>
									<groupId>org.weasis.thirdparty.com.sun.media</groupId>
									<artifactId>vecmath</artifactId>
									<version>${com.sun.media.j3d.version}</version>
									<outputDirectory>${tmp.bundle.dir}</outputDirectory>
								</artifactItem>

								<!-- ===================================== -->
								<!-- Weasis Core bundles -->
								<!-- ===================================== -->
								<artifactItem>
									<groupId>org.weasis.core</groupId>
									<artifactId>weasis-core-api</artifactId>
									<version>${weasis.core.version}</version>
									<outputDirectory>${tmp.bundle.dir}</outputDirectory>
								</artifactItem>
								<artifactItem>
									<groupId>org.weasis.core</groupId>
									<artifactId>weasis-core-ui</artifactId>
									<version>${weasis.core.version}</version>
									<outputDirectory>${tmp.bundle.dir}</outputDirectory>
								</artifactItem>


								<!-- ===================================== -->
								<!-- Weasis Imageio bundles -->
								<!-- ===================================== -->
								<artifactItem>
									<groupId>org.weasis.imageio</groupId>
									<artifactId>weasis-imageio-codec</artifactId>
									<version>${weasis.imageio.version}</version>
									<outputDirectory>${tmp.bundle.dir}</outputDirectory>
								</artifactItem>
								<artifactItem>
									<groupId>org.weasis.imageio</groupId>
									<artifactId>weasis-imageio-codec-linux-x86</artifactId>
									<version>${weasis.imageio.native.version}</version>
									<outputDirectory>${tmp.bundle.dir}</outputDirectory>
								</artifactItem>
								<artifactItem>
									<groupId>org.weasis.imageio</groupId>
									<artifactId>weasis-imageio-codec-linux-x86-64</artifactId>
									<version>${weasis.imageio.native.version}</version>
									<outputDirectory>${tmp.bundle.dir}</outputDirectory>
								</artifactItem>
								<artifactItem>
									<groupId>org.weasis.imageio</groupId>
									<artifactId>weasis-imageio-codec-windows-x86</artifactId>
									<version>${weasis.imageio.native.version}</version>
									<outputDirectory>${tmp.bundle.dir}</outputDirectory>
								</artifactItem>

								<!-- ===================================== -->
								<!-- Weasis Base bundles -->
								<!-- ===================================== -->
								<artifactItem>
									<groupId>org.weasis.base</groupId>
									<artifactId>weasis-base-ui</artifactId>
									<version>${weasis.base.version}</version>
									<outputDirectory>${tmp.bundle.dir}</outputDirectory>
								</artifactItem>

								<!-- ===================================== -->
								<!-- Weasis DICOM bundles -->
								<!-- ===================================== -->
								<artifactItem>
									<groupId>org.weasis.dicom</groupId>
									<artifactId>weasis-dicom-codec</artifactId>
									<version>${weasis.dicom.version}</version>
									<outputDirectory>${tmp.bundle.dir}</outputDirectory>
								</artifactItem>
								<artifactItem>
									<groupId>org.weasis.dicom</groupId>
									<artifactId>weasis-dicom-explorer</artifactId>
									<version>${weasis.dicom.version}</version>
									<outputDirectory>${tmp.bundle.dir}</outputDirectory>
								</artifactItem>
								<artifactItem>
									<groupId>org.weasis.dicom</groupId>
									<artifactId>weasis-dicom-viewer2d</artifactId>
									<version>${weasis.dicom.version}</version>
									<outputDirectory>${tmp.bundle.dir}</outputDirectory>
								</artifactItem>
							</artifactItems>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-antrun-plugin</artifactId>
				<version>1.6</version>
				<executions>
					<execution>
						<id>bindex</id>
						<phase>package</phase>
						<goals>
							<goal>run</goal>
						</goals>
						<configuration>
							<target>
								<!-- Bindex Task helps to generate the repository.xml -->
								<taskdef name="bindex" classname="org.osgi.impl.bundle.bindex.ant.BindexTask"
									classpath="${basedir}/lib/bindex.jar" />
								<bindex repositoryfile="${tmp.bundle.dir}/repository.xml" description="Weasis Bundle Repository"
									licenseurl="http://www.eclipse.org/legal/epl-v10.html" quiet="true" root="${tmp.bundle.dir}"
									name="Weasis Bundle Repository">
									<fileset dir="${tmp.bundle.dir}" includes="*.jar" />
								</bindex>
							</target>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-assembly-plugin</artifactId>
				<version>2.2.1</version>
				<executions>
					<execution>
						<id>web</id>
						<phase>package</phase>
						<goals>
							<goal>attached</goal>
						</goals>
						<configuration>
							<finalName>weasis</finalName>
							<appendAssemblyId>false</appendAssemblyId>
							<outputDirectory>${project.build.directory}/web-dist</outputDirectory>
							<descriptors>
								<descriptor>src/assembly/web-dist.xml</descriptor>
							</descriptors>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
	<profiles>
		<profile>
			<id>pack200</id>
			<properties>
				<pack200.ext>.pack.gz</pack200.ext>
			</properties>
			<build>
				<plugins>
					<plugin>
						<!-- normalize jar before signing -->
						<groupId>org.openxdata.plugins</groupId>
						<artifactId>maven-pack200-plugin</artifactId>
						<version>1.0.1</version>
						<executions>
							<execution>
								<id>sign</id>
								<phase>process-resources</phase>
								<goals>
									<goal>packFiles</goal>
								</goals>
								<configuration>
									<!-- packing requires removing all the old signatures, so if jarsigner.alias is not null jars 
										are normalized -->
									<signed>jarsigner.alias</signed>
									<normalizeOnly>true</normalizeOnly>
									<archiveDirectory>${tmp.dir}</archiveDirectory>
									<includes>
										<include>**/*.jar</include>
									</includes>
									<excludes>
										<exclude>**/*-windows-*.jar</exclude>
										<exclude>**/*-linux-*.jar</exclude>
										<exclude>**/*-macosx-*.jar</exclude>
										<exclude>**/*-solaris-*.jar</exclude>
									</excludes>
								</configuration>
							</execution>
							<execution>
								<id>pack</id>
								<phase>compile</phase>
								<goals>
									<goal>packFiles</goal>
								</goals>
								<configuration>
									<archiveDirectory>${tmp.dir}</archiveDirectory>
									<includes>
										<include>**/*.jar</include>
									</includes>
									<excludes>
										<exclude>**/*.original.jar</exclude>
										<exclude>**/*-windows-*.jar</exclude>
										<exclude>**/*-linux-*.jar</exclude>
										<exclude>**/*-macosx-*.jar</exclude>
										<exclude>**/*-solaris-*.jar</exclude>
									</excludes>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>jar.signer</id>
			<activation>
				<!-- Use your own certificate either: mvn package -Djarsigner.alias="alias" -Djarsigner.storepass="storepass" 
					-Djarsigner.keystore="/etc/cert_keystore" or : add properties in setting.xml (<jarsigner.alias>alias</jarsigner.alias>) -->
				<property>
					<name>jarsigner.alias</name>
				</property>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-jarsigner-plugin</artifactId>
						<version>1.2</version>
						<executions>
							<execution>
								<inherited>false</inherited>
								<id>sign</id>
								<phase>process-resources</phase>
								<goals>
									<goal>sign</goal>
								</goals>
								<configuration>
									<removeExistingSignatures>true</removeExistingSignatures>
									<archiveDirectory>${tmp.dir}</archiveDirectory>
									<includes>
										<include>**/*.jar</include>
									</includes>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>portable.builder</id>
			<activation>
				<!-- Build Portable Version -->
				<property>
					<name>portable</name>
					<value>true</value>
				</property>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>org.bluestemsoftware.open.maven.plugin</groupId>
						<artifactId>launch4j-plugin</artifactId>
						<version>1.5.0.0</version>
						<executions>
							<execution>
								<id>l4j-clui</id>
								<phase>package</phase>
								<goals>
									<goal>launch4j</goal>
								</goals>
								<configuration>
									<headerType>gui</headerType>
									<dontWrapJar>true</dontWrapJar>
									<outfile>${project.build.directory}/tmp/weasis-win32.exe</outfile>
									<jar>weasis/weasis-launcher.jar</jar>
									<errTitle>weasis</errTitle>
									<icon>etc/weasis.ico</icon>
									<!-- Setting it to . will change the current dir to the same directory as the executable -->
									<cmdLine>$dicom:get --portable</cmdLine>
									<chdir>.</chdir>
									<classPath>
										<mainClass>org.weasis.launcher.WeasisLauncher</mainClass>
										<addDependencies>false</addDependencies>
										<preCp>weasis\felix.jar;weasis\substance.jar</preCp>
									</classPath>
									<jre>
										<minVersion>1.6.0</minVersion>
										<initialHeapSize>64</initialHeapSize>
										<maxHeapSize>512</maxHeapSize>
										<opts>
											<opt>-Dweasis.portable.dir=&quot;%EXEDIR%&quot;</opt>
										</opts>
									</jre>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-assembly-plugin</artifactId>
						<version>2.2.1</version>
						<executions>
							<execution>
								<id>portable</id>
								<phase>package</phase>
								<goals>
									<goal>attached</goal>
								</goals>
								<configuration>
									<finalName>weasis-portable</finalName>
									<appendAssemblyId>false</appendAssemblyId>
									<outputDirectory>${project.build.directory}/portable-dist</outputDirectory>
									<descriptors>
										<descriptor>src/assembly/portable-dist.xml</descriptor>
									</descriptors>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>standalone.builder</id>
			<activation>
				<!-- Build Standalone Version -->
				<property>
					<name>standalone</name>
					<value>true</value>
				</property>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>com.bah.maven</groupId>
						<artifactId>maven-installjammer-plugin</artifactId>
						<version>1.2</version>
						<executions>
							<execution>
								<id>installer</id>
								<phase>package</phase>
								<goals>
									<goal>build-installer</goal>
								</goals>
								<configuration>
									<appName>Weasis</appName>
									<version>${project.version}</version>
									<installVersion>${project.version}</installVersion>
									<projectFile>/home/nicolas/InstallJammerProjects/Weasis/Weasis.mpi</projectFile>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
</project>
