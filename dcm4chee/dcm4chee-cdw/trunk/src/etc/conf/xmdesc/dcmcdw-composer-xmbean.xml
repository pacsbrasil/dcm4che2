<?xml version="1.0" encoding="UTF-8"?>

<!-- $Id$ -->

<!DOCTYPE mbean PUBLIC
   "-//JBoss//DTD JBOSS XMBEAN 1.1//EN"
   "http://www.jboss.org/j2ee/dtd/jboss_xmbean_1_1.dtd">

<mbean>
   <description>Media Composer
   </description>

   <descriptors>
      <persistence persistPolicy="OnUpdate"/>
      <persistence-manager value="org.jboss.mx.persistence.DelegatingPersistenceManager" />
   </descriptors>

   <class>org.dcm4chex.cdw.mbean.MediaComposer</class>

   <constructor>
      <description>The default constructor</description>
      <name>MediaComposer</name>
   </constructor>

   <!-- Attributes -->
   <attribute access="read-write"
      getMethod="getMediaCapacity"
      setMethod="setMediaCapacity">
      <description>Media Capacity. Format: ##.#GB|##.#MB. 
      1MB = 1000000 Bytes, 1GB = 1000MB.
      </description>
      <name>MediaCapacity</name>
      <type>java.lang.String</type>      
      <descriptors>
         <value value="700MB" />
      </descriptors>
   </attribute>
   <attribute access="read-write"
      getMethod="getLabelFileFormat"
      setMethod="setLabelFileFormat">
      <description>Defines Format of created Label file. 
      NO(=no Label File), PDF or PS(=Postscript).
      </description>
      <name>LableFileFormat</name>
      <type>java.lang.String</type>      
      <descriptors>
         <value value="NO" />
      </descriptors>
   </attribute>
   <attribute access="read-write"
      getMethod="getFileSetDescriptorFile"
      setMethod="setFileSetDescriptorFile">
      <description>File-set Descriptor File (a "README" file).
      "NO"= no File-set Descriptor File.
      </description>
      <name>FileSetDescriptorFilename</name>
      <type>java.lang.String</type>      
      <descriptors>
         <value value="NO" />
      </descriptors>
   </attribute>
   <attribute access="read-write"
      getMethod="getCharsetOfFileSetDescriptorFile"
      setMethod="setCharsetOfFileSetDescriptorFile">
      <description>Character set used in the File-set Descriptor File.
      </description>
      <name>CharsetOfFileSetDescriptorFile</name>
      <type>java.lang.String</type>      
      <descriptors>
         <value value="ISO_IR 100" />
      </descriptors>
   </attribute>
   <attribute access="read-write"
      getMethod="getValuesForIndexFile"
      setMethod="setValuesForIndexFile">
      <description>Comma separated list of values of flag
      "Include Non-DICOM Objects" (2200,0008), to include
      INDEX.HTM in root directory on media.
      </description>
      <name>ValuesForIndexFile</name>
      <type>[Ljava.lang.String;</type>      
      <descriptors>
         <value value="NO,FOR_PHYSICIAN,FOR_PATIENT,FOR_TEACHING,FOR_RESEARCH" />
      </descriptors>
   </attribute>
   <attribute access="read-write"
      getMethod="getValuesForCreateIcons"
      setMethod="setValuesForCreateIcons">
      <description>Comma separated list of values of flag
      "Include Non-DICOM Objects" (2200,0008), to create
      icons for DICOMDIR, if no icon is provided in the
      Media Creation Request.
      </description>
      <name>ValuesForCreateIcons</name>
      <type>[Ljava.lang.String;</type>      
      <descriptors>
         <value value="NO,FOR_PHYSICIAN,FOR_PATIENT,FOR_TEACHING,FOR_RESEARCH" />
      </descriptors>
   </attribute>
   <attribute access="read-write"
      getMethod="getIconWidth"
      setMethod="setIconWidth">
      <description>Maximal Width of generated icons.
      </description>
      <name>IconWidth</name>
      <type>int</type>      
      <descriptors>
         <value value="64" />
      </descriptors>
   </attribute>
   <attribute access="read-write"
      getMethod="getIconHeight"
      setMethod="setIconHeight">
      <description>Maximal Height of generated icons.
      </description>
      <name>IconHeight</name>
      <type>int</type>      
      <descriptors>
         <value value="64" />
      </descriptors>
   </attribute>
   <attribute access="read-write"
      getMethod="getValuesForIncludeMd5Sums"
      setMethod="setValuesForIncludeMd5Sums">
      <description>Comma separated list of values of flag
      "Include Non-DICOM Objects" (2200,0008), to include
      MD5 checksums.
      </description>
      <name>ValuesForIncludeMd5Sums</name>
      <type>[Ljava.lang.String;</type>      
      <descriptors>
         <value value="MD5_SUMS" />
      </descriptors>
   </attribute>
   <attribute access="read-write"
      getMethod="getValuesForIncludeWeb"
      setMethod="setValuesForIncludeWeb">
      <description>Comma separated list of values of flag
      "Include Non-DICOM Objects" (2200,0008), to include
      Web presentations.
      </description>
      <name>ValuesForIncludeWeb</name>
      <type>[Ljava.lang.String;</type>      
      <descriptors>
         <value value="FOR_PHYSICIAN,FOR_PATIENT,FOR_TEACHING,FOR_RESEARCH" />
      </descriptors>
   </attribute>
   <attribute access="read-write"
      getMethod="getJpegWidth"
      setMethod="setJpegWidth">
      <description>Maximal Width of generated JPEG images for web representation.
      </description>
      <name>JpegWidth</name>
      <type>int</type>      
      <descriptors>
         <value value="512" />
      </descriptors>
   </attribute>
   <attribute access="read-write"
      getMethod="getJpegHeight"
      setMethod="setJpegHeight">
      <description>Maximal Height of generated JPEG images for web representation.
      </description>
      <name>JpegHeight</name>
      <type>int</type>      
      <descriptors>
         <value value="512" />
      </descriptors>
   </attribute>
   <attribute access="read-write"
      getMethod="isIncludeDisplayApplicationOnAllMedia"
      setMethod="setIncludeDisplayApplicationOnAllMedia">
      <description>Controls if in the case of Media Splitting an
      included Display Application is only burned on the first 
      media or on all.
      </description>
      <name>IncludeDisplayApplicationOnAllMedia</name>
      <type>boolean</type>      
      <descriptors>
         <value value="true" />
      </descriptors>
   </attribute>
   <attribute access="read-write"
      getMethod="isMakeIsoImage"
      setMethod="setMakeIsoImage">
      <description>Activates creation of ISO 9660 image file before the
      media creation request is processed by the Media Writer Service.
      </description>
      <name>MakeIsoImage</name>
      <type>boolean</type>      
      <descriptors>
         <value value="true" />
      </descriptors>
   </attribute>
   <attribute access="read-write"
      getMethod="isKeepSpoolFiles"
      setMethod="setKeepSpoolFiles">
      <description>Keep spool files (for debugging) in failure case.
      </description>
      <name>KeepSpoolFiles</name>
      <type>boolean</type>
      <descriptors>
         <value value="false" />
      </descriptors>
   </attribute>
   <attribute access="read-write"
      getMethod="isLogXml"
      setMethod="setLogXml">
      <description>Log XML representation of DICOMDIR to 
      server/dcmcdw/log/dicomdir.xml. 
      </description>
      <name>LogXml</name>
      <type>boolean</type>      
      <descriptors>
         <value value="false" />
      </descriptors>
   </attribute>
   <attribute access="read-write"
      getMethod="getBufferSize"
      setMethod="setBufferSize">
      <description>Size of buffer used to copy files.
      No need to change default value: 512.
      </description>
      <name>BufferSize</name>
      <type>int</type>
      <descriptors>
         <value value="512" />
      </descriptors>
   </attribute>      
   <attribute access="read-write"
      getMethod="getSpoolDirName"
      setMethod="setSpoolDirName">
      <description>Used internally - do NOT modify.
      </description>
      <name>SpoolDirName</name>
      <type>javax.management.ObjectName</type>      
      <descriptors>
         <value value="tiani.dcmcdw:service=SpoolDir" />
      </descriptors>
   </attribute>
	&defaultAttributes;
   
   <!-- Operations -->
   &defaultOperations;
</mbean>
