<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE server>
<!-- $Id$ -->

<!-- ===================================================================== -->
<!--                                                                       -->
<!--  User Service Configuration                                           -->
<!--                                                                       -->
<!-- ===================================================================== -->

<server>

  <classpath codebase="lib" archives="@ARCHIVES@"/>

  <!--
     | Add custom MBeans here.  MBeans should be registered under the
     | 'user' JMX domain, or a domain specific to the component application.
     |
     | Do not place user components in the 'jboss' domain or any sub-domain.
   -->
 
  <!-- Example Service Configuration  

  <mbean code="my.company.MyService" 
         name="user:service=MyService">
    <attribute name="MyAttribute">AttributeValue</attribute>
  </mbean>
  
  -->

  <mbean code="org.dcm4chex.service.DcmServerService" 
         name="dcm4chex:service=DcmServer,name=DCMSRV">
    <depends optional-attribute-name="AuditLogger">
      dcm4chex:service=AuditLogger,name=AUDITLOG
    </depends>
         
    <!--
    Set maximal number of simultaneously conncected DICOM clients.
    -->
    <attribute name="MaxClients">10</attribute>
    
    <!--
    Specifies if server running in tls mode:
    dicom           native dicom
    dicom-tls       dicom over TLS
    dicom-tls.3des  dicom over TLS with triple DES EDE CBC encryption
    dicom-tls.nodes dicom over TLS without encryption
    -->
    <attribute name="ProtocolName">dicom</attribute>
    
    <!--
    Specifies TCP port on which the DICOM server is listening.
    -->
    <attribute name="Port">6104</attribute>
    
    <!--
    Specifies Called AETs, which the DICOM server shall accept.
    Multiple values can be specified, must be separated by 
    '\' characters. Use the single value "any" to accept any Called AET
    in the A-ASSOCIATE RQ.    
    -->
    <attribute name="CalledAETs">any</attribute>
    
    <!--
    Specifies Calling AETs, which the DICOM server shall accept.
    Multiple values can be specified, must be separated by 
    '\' characters. Use the single value "any" to accept any Calling AET
    in the A-ASSOCIATE RQ.    
    -->
    <attribute name="CallingAETs">any</attribute>
    
    <!--
    Specifies Timeout in ms, the DICOM server will wait after accepting the
    TCP connect for the A-ASSOCIATE RQ. "0" means, there is no Timeout,
    so the server would wait as long the TCP connection will not be closed from
    the peer application.
    -->
    <attribute name="RqTimeout">5000</attribute>
    
    <!--
    Specifies Timeout in ms, the DICOM server will wait after the receive of
    DIMSE message on an established association. "0" means, there is no Timeout.
    -->
    <attribute name="DimseTimeout">60000</attribute>
    
    <!--
    Specifies Timeout in ms, the DICOM server will wait after sending
    a A-RELEASE RSP or an A-ABORT RQ for DIMSE message on an established
    association.  "0" means, there is no Timeout.
    -->
    <attribute name="SoCloseDelay">500</attribute>
    
    <!--
    Specifies maximal PDU package length for receiving PDUs.
    -->
    <attribute name="MaxPDULength">16352</attribute>
    
    <!--
    Specifies if Command and Data PDVs can be packed in one PDU.
    Warning: well-known bugs of some DICOM implementions in support
    of this performance improving DICOM feature
    -->
    <attribute name="PackPDVs">false</attribute>
    
    <!--
    Defines file containing key used in SSL handshake, when running in TLS mode.
    Relative path names are resolved using jboss server directory as base directory.
    -->
    <attribute name="KeyFile">conf/tls/test_sys_2.p12</attribute>
    
    <!--
    Defines password for access to key file, specified by attribute KeyFile 
    -->
    <attribute name="KeyPasswd">iheihe</attribute>
    
   <!--
    Defines file containing accepted certificates, when running in TLS mode
    Relative path names are resolved using jboss server directory as base directory.
    -->
    <attribute name="CacertsFile">conf/tls/cacerts.jks</attribute>
    
    <!--
    Defines password for access to cacerts file, specified by attribute CacertsFile 
    -->
    <attribute name="CacertsPasswd">iheihe</attribute>
  </mbean>

</server>

