<?xml version="1.0" encoding="UTF-8"?>

<project basedir="." default="main" name="prnscp">

  <!-- Allow override from local properties file -->
  <property file=".ant.properties" />

  <property name="name" value="prnscp"/>
  <property name="version" value="1.0.0"/>
  <property name="javac.debug" value="on"/>
  <property name="javac.optimize" value="off"/>

  <!-- Override with your JBoss/Web server bundle dist location -->
  <property name="jboss.dist" value="${user.home}/jboss-3.0.3"/>
  <property name="jboss.lib" value="${jboss.dist}/lib"/>
  <property name="jboss.conf" value="default"/>
  <property name="jboss.server" value="${jboss.dist}/server/${jboss.conf}"/>
  <property name="jboss.server.deploy" value="${jboss.server}/deploy"/>
  <property name="jboss.server.lib" value="${jboss.server}/lib"/>
  <property name="jboss.server.conf" value="${jboss.server}/conf"/>

  <property name="lib.dir" value="${basedir}/lib"/>
  <property name="src.dir" value="${basedir}/src"/>
  <property name="src.java" value="${src.dir}/java"/>
  <property name="src.conf" value="${src.dir}/conf"/>
  <property name="build.dir" value="${basedir}/build"/>

  <property name="build.classes.dir" value="${build.dir}/classes"/>
  <property name="build.deploy.dir" value="${build.dir}/deploy"/>
  <property name="build.lib.dir" value="${build.dir}/lib"/>

  <property name="dist.name" value="${name}-${version}"/>
  <property name="dist.dir" value="${build.dir}/${dist.name}"/>

  <path id="build.path">
    <pathelement location="${lib.dir}/dcm4che.jar"/>
    <pathelement location="${jboss.lib}/jboss-common.jar"/>
    <pathelement location="${jboss.lib}/jboss-system.jar"/>
    <pathelement location="${jboss.lib}/jboss-jmx.jar"/>
    <pathelement location="${build.classes.dir}"/>
  </path>

  <!-- Validate the jboss.dist value by looking for a the lib/jboss-system.jar jar -->
  <target name="validate">
    <available property="classpath_id"
               value="build.path"
               file="${jboss.lib}/jboss-system.jar" />
  </target>

  <target name="fail_if_not_valid" unless="classpath_id">
    <fail message="jboss.dist=${jboss.dist} is not a valid JBoss dist directory"/>
  </target>

  <target name="fetch"
          description="Get the latest source from the CVS tree">
    <cvs command="update -APd"/>
  </target>

  <target name="init" depends="validate,fail_if_not_valid">
    <echo message="user.home = ${user.home}"/>
    <echo message="java.home = ${java.home}"/>
    <echo message="ant.home = ${ant.home}"/>
    <echo message="jboss.dist = ${jboss.dist}"/>
    <echo message="java.class.path = ${java.class.path}"/>
    <tstamp/>
  </target>

  <!-- Compile all java source under src/java -->
  <target name="compile" depends="init">
    <mkdir dir="${build.classes.dir}"/>
    <javac srcdir="${src.java}"
           destdir="${build.classes.dir}"
           classpathref="${classpath_id}"
           debug="${javac.debug}"
           deprecation="on"
           optimize="${javac.optimize}">
    </javac>
  </target>

  <target name="prnscp-sar" depends="compile">
    <mkdir dir="${build.dir}/prnscp"/>
    <copy file="${src.conf}/prnscp-service.xml" 
          tofile="${build.dir}/prnscp/jboss-service.xml">
      <filterset>
        <filter token="ARCHIVES" value="dcm4che.jar"/>
      </filterset>
    </copy>
    <mkdir dir="${build.deploy.dir}"/>
    <jar jarfile="${build.deploy.dir}/prnscp.sar">
      <metainf dir="${build.dir}/prnscp"
               includes="jboss-service.xml"
      />
      <fileset dir="${build.classes.dir}"
               includes="com/tiani/prnscp/**"
      />
    </jar>
  </target>   

  <target name="prnscp-jar" depends="compile">
    <mkdir dir="${build.lib.dir}"/>
    <jar jarfile="${build.lib.dir}/prnscp.jar">
      <fileset dir="${build.classes.dir}"
               includes="com/tiani/prnscp/**"
      />
    </jar>
    <mkdir dir="${build.deploy.dir}"/>
    <copy file="${src.conf}/prnscp-service.xml" 
          todir="${build.deploy.dir}">
      <filterset>
        <filter token="ARCHIVES" value="dcm4che.jar,prnscp.jar"/>
      </filterset>
    </copy>
  </target>

  <target name="dcmsrv-sar" depends="compile">
    <mkdir dir="${build.dir}/dcmsrv"/>
    <copy file="${src.conf}/dcmsrv-service.xml" 
          tofile="${build.dir}/dcmsrv/jboss-service.xml">
      <filterset>
        <filter token="ARCHIVES" value="dcm4che.jar"/>
      </filterset>
    </copy>  
    <mkdir dir="${build.deploy.dir}"/>
    <jar jarfile="${build.deploy.dir}/dcmsrv.sar">
      <metainf dir="${build.dir}/dcmsrv"
               includes="jboss-service.xml"
      />
      <fileset dir="${build.classes.dir}"
               includes="org/dcm4chex/service/DcmServer*"
      />
    </jar>
  </target>   

  <target name="dcmsrv-jar" depends="compile">
    <mkdir dir="${build.lib.dir}"/>
    <jar jarfile="${build.lib.dir}/dcmsrv.jar">
      <fileset dir="${build.classes.dir}"
               includes="org/dcm4chex/service/DcmServer*"
      />
    </jar>
    <mkdir dir="${build.deploy.dir}"/>
    <copy file="${src.dir}/conf/dcmsrv-service.xml" 
          todir="${build.deploy.dir}">
      <filterset>
        <filter token="ARCHIVES" value="dcm4che.jar,dcmsrv.jar"/>
      </filterset>
    </copy>
  </target>   

  <target name="build" depends="dcmsrv-sar,prnscp-sar,dcmsrv-jar,prnscp-jar"/>

  <target name="deploy" depends="build">
    <copy todir="${jboss.server}">
      <fileset dir="${src.dir}">
        <include name="conf/annotation/*.adf"/>
        <include name="conf/calibration/**/*.jpg"/>
        <include name="conf/lut/*.lut"/>
      </fileset>
    </copy>

    <copy file="${lib.dir}/dcm4che.jar"
        todir="${jboss.server.lib}" />
        
    <copy file="${build.deploy.dir}/dcmsrv.sar"
        todir="${jboss.server.deploy}" />
        
    <copy file="${build.deploy.dir}/prnscp.sar"
        todir="${jboss.server.deploy}" />
  </target>           

  <target name="undeploy">
    <delete file="${jboss.server.deploy}/dcmsrv.sar" />
    <delete file="${jboss.server.deploy}/prnscp.sar" />
  </target>           

  <target name="release" depends="build">
    <mkdir dir="${dist.dir}/server/default"/>
    <copy todir="${dist.dir}">
      <fileset dir="${jboss.dist}">
        <include name="bin/run.*"/>
        <include name="lib/concurrent.jar"/>        
        <include name="lib/getopt.jar"/>        
        <include name="lib/gnu-regexp.jar"/>        
        <include name="lib/jboss-boot.jar"/>        
        <include name="lib/jboss-common.jar"/>        
        <include name="lib/jboss-jmx.jar"/>
        <include name="lib/jboss-system.jar"/>        
        <include name="lib/log4j-boot.jar"/>
      </fileset>
      <fileset dir="${src.dir}">
        <include name="bin/install_service.bat"/>
        <include name="bin/JavaService.exe"/>
      </fileset>
    </copy>
    <copy todir="${dist.dir}/server/default">
      <fileset dir="${jboss.dist}/server/minimal">
        <include name="conf/*"/>
        <include name="lib/*"/>
      </fileset>
      <fileset dir="${src.dir}">
        <include name="conf/annotation/*.adf"/>
        <include name="conf/calibration/README"/>
        <include name="conf/lut/*.lut"/>
      </fileset>
      <fileset dir="${basedir}">
        <include name="lib/dcm4che.jar"/>
      </fileset>
      <fileset dir="${build.dir}">
        <include name="lib/*"/>
        <include name="conf/*"/>
        <include name="deploy/*.xml"/>
      </fileset>
    </copy>
    <chmod file="${dist.dir}/bin/run.sh" perm="ugo+rx"/>
    <fixcrlf srcdir="${dist.dir}/bin"
         eol="crlf"
         includes="*.bat"
    />
    <zip destfile="${build.dir}/${dist.name}.zip"
         basedir="${dist.dir}"
    />
  </target>
       
  <target name="main" depends="release"/>

  <target name="clean">
    <delete dir="${build.dir}"/>
  </target>

</project>
