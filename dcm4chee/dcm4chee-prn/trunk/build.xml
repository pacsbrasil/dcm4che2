<?xml version="1.0" encoding="UTF-8"?>

<project basedir="." default="main" name="jprint">

  <!-- Allow override from local properties file -->
  <property file="build.properties" />

  <property name="name" value="jprint"/>
  <property name="version" value="1.2.4"/>
  <property name="javac.debug" value="on"/>
  <property name="javac.optimize" value="off"/>

  <!-- Override with your dcm4che14 dist location -->
  <property name="dcm4che.home" value="../dcm4che14/build"/>
  <property name="dcm4che.jar" value="${dcm4che.home}/lib/dcm4che.jar"/>
  
  <!-- Override with your dcm4jboss dist location -->
  <property name="dcm4jboss.home" value="../dcm4jboss/build"/>
  <property name="dcmsrv.jar" value="${dcm4jboss.home}/lib/dcmsrv.jar"/>
  <property name="auditlog.jar" value="${dcm4jboss.home}/lib/auditlog.jar"/>

  <!-- Override with your license dist location -->
  <property name="license.home" value="../license/build"/>
  <property name="check-license.jar" value="${license.home}/lib/check-license.jar"/>

  <!-- Override with your auditrep dist location -->
  <property name="jaudit.home" value="../auditrep/build/jaudit-0.2.1"/>
  
  
  <!-- Override with your JBoss/Web server bundle dist location -->
  <property name="jboss.home" value="${user.home}/jboss-3.2.3"/>
  <property name="jboss.bin" value="${jboss.home}/bin"/>
  <property name="jboss.lib" value="${jboss.home}/lib"/>
  <property name="jboss.client" value="${jboss.home}/client"/>
  <property name="jboss.server" value="${jboss.home}/server/default"/>
  <property name="jboss.server.deploy" value="${jboss.server}/deploy"/>
  <property name="jboss.server.lib" value="${jboss.server}/lib"/>
  <property name="jboss.server.conf" value="${jboss.server}/conf"/>

  <!-- Override with your docbook-xsl dist location -->
  <property name="docbook-xsl.home" value="${user.home}/docbook-xsl-1.65.1"/>
  <property name="docbook-xsl.fo.dir" value="${docbook-xsl.home}/fo"/>

  <!-- Override with your Apache FOP dist location -->
  <property name="fop.home" value="${user.home}/fop-0.20.5"/>
  <property name="fop.jar" value="${fop.home}/build/fop.jar"/>
  
  <property name="doc.dir" value="${basedir}/doc"/>
  <property name="doc.xml" value="${doc.dir}/xml"/>
  <property name="doc.xsl" value="${doc.dir}/xsl"/>
  <property name="doc.img" value="${doc.dir}/img"/>
  <property name="src.dir" value="${basedir}/src"/>
  <property name="src.java" value="${src.dir}/java"/>
  <property name="src.conf" value="${src.dir}/conf"/>
  <property name="src.res" value="${src.dir}/res"/>
  <property name="build.dir" value="${basedir}/build"/>

  <property name="build.classes.dir" value="${build.dir}/classes"/>
  <property name="build.deploy.dir" value="${build.dir}/deploy"/>
  <property name="build.lib.dir" value="${build.dir}/lib"/>
  <property name="build.bin.dir" value="${build.dir}/bin"/>
  <property name="build.doc.dir" value="${build.dir}/doc"/>
  
  <property name="dist.name" value="${name}-${version}"/>
  <property name="dist.dir" value="${build.dir}/${dist.name}"/>
  <property name="dist-with-jaudit.name" value="${name}-with-jaudit-${version}"/>
  <property name="dist-with-jaudit.dir" value="${build.dir}/${dist-with-jaudit.name}"/>

  <path id="fop.path">
    <pathelement location="${fop.jar}"/>
    <fileset dir="${fop.home}/lib">
        <include name="*.jar"/>
    </fileset>
  </path>

  <path id="build.path">
    <pathelement location="${dcm4che.jar}"/>
    <pathelement location="${check-license.jar}"/>
    <pathelement location="${jboss.bin}/run.jar"/>
    <pathelement location="${jboss.lib}/jboss-common.jar"/>
    <pathelement location="${jboss.lib}/jboss-system.jar"/>
    <pathelement location="${jboss.lib}/jboss-jmx.jar"/>
    <pathelement location="${jboss.server.lib}/log4j.jar"/>
    <pathelement location="${jboss.server.lib}/jbosssx.jar"/>
    <pathelement location="${jboss.client}/jmx-rmi-connector-client.jar"/>
    <pathelement location="${build.classes.dir}"/>
  </path>

  <target name="check-env">
    <available property="dcm4che.present" file="${dcm4che.jar}" />
    <antcall target="fail_if_no_dcm4che"/>
    <available property="dcm4jboss.present" file="${dcmsrv.jar}" />
    <antcall target="fail_if_no_dcm4jboss"/>
    <available property="jboss.present" file="${jboss.lib}/jboss-system.jar" />
    <antcall target="fail_if_no_jboss"/>
    <available property="license.present" file="${check-license.jar}" />
    <antcall target="fail_if_no_license"/>
    <available property="fop.present" file="${fop.jar}" />
    <available property="jaudit.present" file="${jaudit.home}" />
  </target>

  <target name="fetch"
          description="Get the latest source from the CVS tree">
    <cvs command="update -APd"/>
  </target>

  <target name="fail_if_no_dcm4che" unless="dcm4che.present">
    <fail message="dcm4che.home=${dcm4che.home} is not a valid dcm4che dist directory"/>
  </target>
  
  <target name="fail_if_no_dcm4jboss" unless="dcm4jboss.present">
    <fail message="dcm4jboss.home=${dcm4jboss.home} is not a valid dcm4jboss dist directory"/>
  </target>
  
  <target name="fail_if_no_jboss" unless="jboss.present">
    <fail message="jboss.home=${jboss.home} is not a valid JBoss dist directory"/>
  </target>
  
  <target name="fail_if_no_license" unless="license.present">
    <fail message="license.home=${license.home} is not a valid License dist directory"/>
  </target>

  <target name="init" depends="check-env">
    <echo message="user.home = ${user.home}"/>
    <echo message="java.home = ${java.home}"/>
    <echo message="ant.home = ${ant.home}"/>
    <echo message="dcm4che.home = ${dcm4che.home}"/>
    <echo message="dcm4jboss.home = ${dcm4jboss.home}"/>
    <echo message="license.home = ${license.home}"/>
    <echo message="jboss.home = ${jboss.home}"/>
    <echo message="fop.home = ${fop.home}"/>
    <echo message="docbook-xsl.home = ${docbook-xsl.home}"/>
    <echo message="java.class.path = ${java.class.path}"/>
    <echo message="dasho.jar = ${dasho.jar}"/>
    <tstamp/>
  </target>

  <!-- Compile all java source under src/java -->
  <target name="compile" depends="init">
    <mkdir dir="${build.classes.dir}"/>
    <javac srcdir="${src.java}"
           destdir="${build.classes.dir}"
           classpathref="build.path"
           debug="${javac.debug}"
           deprecation="on"
           optimize="${javac.optimize}">
    </javac>
  </target>

  <target name="sar" depends="prnscp-sar,printer-sar"/>
  
  <target name="prnscp-sar" depends="compile">
    <mkdir dir="${build.dir}/prnscp"/>
    <copy file="${src.conf}/prnscp-service.xml" 
          tofile="${build.dir}/prnscp/jboss-service.xml">
      <filterset>
        <filter token="ARCHIVES" value="dcm4che.jar,check-license.jar"/>
      </filterset>
    </copy>
    <mkdir dir="${build.deploy.dir}"/>
    <jar jarfile="${build.deploy.dir}/prnscp.sar">
      <metainf dir="${build.dir}/prnscp"
               includes="jboss-service.xml"
      />
      <fileset dir="${build.classes.dir}">
         <include name="com/tiani/prnscp/scp/*"/>
      </fileset>
    </jar>
  </target>   

  <target name="printer-sar" depends="compile">
    <mkdir dir="${build.dir}/printer"/>
    <copy file="${src.conf}/printer-service.xml" 
          tofile="${build.dir}/printer/jboss-service.xml">
      <filterset>
        <filter token="ARCHIVES" value="dcm4che.jar"/>
      </filterset>
    </copy>
    <mkdir dir="${build.deploy.dir}"/>
    <jar jarfile="${build.deploy.dir}/printer.sar">
      <metainf dir="${build.dir}/printer"
               includes="jboss-service.xml"
      />
      <fileset dir="${build.classes.dir}">
         <include name="com/tiani/prnscp/print/*"/>
      </fileset>
    </jar>
  </target>   

  <target name="jar" depends="prnscp-jar, dasho-prnscp-jar, print-image-jar, list-printers-jar, eval-scan-jar, view-plut-jar"/>
  
  <target name="prnscp-jar" depends="compile" unless="dasho.jar">
    <mkdir dir="${build.lib.dir}"/>
    <jar jarfile="${build.lib.dir}/prnscp.jar">
      <fileset dir="${build.classes.dir}">
         <include name="com/tiani/prnscp/print/*"/>
         <include name="com/tiani/prnscp/scp/*"/>
      </fileset>
    </jar>
  </target>

  <target name="print-image-jar" depends="compile">
    <mkdir dir="${build.bin.dir}"/>
    <jar jarfile="${build.bin.dir}/print-image.jar">
        <manifest>
            <attribute
                name="Main-Class"
                value="com.tiani.prnscp.client.PrintImage"
            />
            <attribute
                name="Class-Path"
                value="../lib/getopt.jar ../lib/jboss-jmx.jar ../client/jbossall-client.jar ../server/default/lib/log4j.jar"
            />
        </manifest>
        <fileset
           dir="${build.classes.dir}"
           includes="com/tiani/prnscp/client/PrintImage*"
        />
    </jar>
  </target>
  
  <target name="list-printers-jar" depends="compile">
    <mkdir dir="${build.bin.dir}"/>
    <jar jarfile="${build.bin.dir}/list-printers.jar">
        <manifest>
            <attribute
                name="Main-Class"
                value="com.tiani.prnscp.client.GetAvailablePrinters"
            />
        </manifest>
        <fileset dir="${build.classes.dir}"
               includes="com/tiani/prnscp/client/GetAvailablePrinters*"
      />
    </jar>
  </target>
  
  <target name="view-plut-jar" depends="compile">
    <mkdir dir="${build.bin.dir}"/>
    <jar jarfile="${build.bin.dir}/view-plut.jar">
        <manifest>
            <attribute
                name="Main-Class"
                value="com.tiani.prnscp.client.plutgui.PLutGUIFrame"
            />
            <attribute
                name="Class-Path"
                value="../server/default/lib/dcm4che.jar ../lib/getopt.jar ../lib/jboss-jmx.jar ../client/jbossall-client.jar"
            />
        </manifest>
        <fileset dir="${build.classes.dir}">
            <include name="com/tiani/prnscp/client/plutgui/*"/>
            <include name="com/tiani/prnscp/print/PLutBuilder*"/>
        </fileset>
    </jar>
  </target>
  <target name="eval-scan-jar" depends="compile">
    <mkdir dir="${build.bin.dir}"/>
    <jar jarfile="${build.bin.dir}/view-printerODs.jar">
        <manifest>
            <attribute
                name="Main-Class"
                value="com.tiani.prnscp.client.ddl2odgui.ODCurveGUIFrame"
            />
            <attribute
                name="Class-Path"
                value="../server/default/lib/log4j.jar"
            />
        </manifest>
        <fileset dir="${build.classes.dir}">
            <include name="com/tiani/prnscp/client/ddl2odgui/*"/>
            <include name="com/tiani/prnscp/print/*Curve*"/>
            <include name="com/tiani/prnscp/print/PrinterCalibration*"/>
            <include name="com/tiani/prnscp/print/ScannerCalibration*"/>
            <include name="com/tiani/prnscp/print/CalibrationException*"/>
        </fileset>
    </jar>
  </target>
<!--
  <target name="probescan-jar" depends="compile">
    <mkdir dir="${build.bin.dir}"/>
    <jar jarfile="${build.bin.dir}/probescan.jar">
        <manifest>
            <attribute
                name="Main-Class"
                value="com.tiani.prnscp.print.ScannerCalibration"
            />
            <attribute
                name="Class-Path"
                value="../lib/getopt.jar ../server/default/lib/log4j.jar"
            />
        </manifest>
        <fileset dir="${build.classes.dir}">
            <include name="com/tiani/prnscp/print/ScannerCalibration*"/>
            <include name="com/tiani/prnscp/print/CalibrationException*"/>
        </fileset>
    </jar>
  </target>
  -->
  <target name="dasho-prnscp-jar" depends="compile" if="dasho.jar">
    <copy file="prnscp-${os.name}.dop" todir="${build.dir}">
      <filterset>
        <filter token="lib.dir" value="${lib.dir}"/>
        <filter token="jboss.lib" value="${jboss.lib}"/>
        <filter token="java.home" value="${java.home}"/>
      </filterset>
    </copy>
    <java classname="DashoPro" 
         fork="true"
         dir="${build.dir}"
         failonerror="true"
         maxmemory="128m"
         >
       <arg value="-f"/> 
       <arg value="prnscp-${os.name}.dop"/> 
       <classpath>
         <path refid="build.path" />
         <pathelement location="${dasho.jar}"/>
       </classpath>
    </java>
  </target>
    
  <target name="service-xml">
    <mkdir dir="${build.deploy.dir}"/>
    <copy file="${src.conf}/dcmsrv-service.xml" 
          todir="${build.deploy.dir}">
      <filterset>
        <filter token="ARCHIVES" value="dcm4che.jar,dcmsrv.jar"/>
      </filterset>
    </copy>
    <copy file="${src.conf}/auditlog-service.xml" 
          todir="${build.deploy.dir}">
      <filterset>
        <filter token="ARCHIVES" value="dcm4che.jar,auditlog.jar"/>
        <filter token="DEPENDS" value=""/>
      </filterset>
    </copy>
    <copy file="${src.conf}/prnscp-service.xml" 
          todir="${build.deploy.dir}">
      <filterset>
        <filter token="ARCHIVES" value="dcm4che.jar,prnscp.jar,check-license.jar"/>
      </filterset>
    </copy>
    <copy file="${src.conf}/printer-service.xml" 
          todir="${build.deploy.dir}">
      <filterset>
        <filter token="ARCHIVES" value="dcm4che.jar,prnscp.jar"/>
      </filterset>
    </copy>
  </target>

  <target name="build" depends="sar, jar, service-xml"/>

  <target name="deploy" depends="build">
    <copy todir="${jboss.server}">
        <fileset dir="${dcm4che.home}">
            <include name="lib/dcm4che.jar"/>
        </fileset>
        <fileset dir="${dcm4jboss.home}">
            <include name="lib/auditlog.jar"/>
            <include name="lib/dcmsrv.jar"/>
        </fileset>
        <fileset dir="${license.home}">
            <include name="lib/check-license.jar"/>
        </fileset>
      <fileset dir="${src.dir}">
        <include name="conf/annotation/*.adf"/>
        <include name="conf/calibration/DSI256.ods"/>
        <include name="conf/lut/*.lut"/>
        <include name="conf/cacerts.jks"/>
      </fileset>
        <fileset dir="${build.dir}">
            <include name="deploy/auditlog-service.xml"/>
            <include name="deploy/dcmsrv-service.xml"/>
            <include name="deploy/prnscp.sar"/>
            <include name="deploy/printer.sar"/>
        </fileset>
    </copy>
  </target>           

  <target name="undeploy">
    <delete>
        <fileset dir="${jboss.server}">
            <include name="deploy/auditlog-service.xml"/>
            <include name="deploy/dcmsrv-service.xml"/>
            <include name="deploy/prnscp.sar"/>
            <include name="deploy/printer.sar"/>
        </fileset>
    </delete>
  </target>           
    
  <target name="fail_if_no_docbook_xsl" unless="docbook-xsl.present">
    <fail message="docbook-xsl.dist=${docbook-xsl.dist} is not a valid docbook-xsl dist directory"/>
  </target>

 <target name="check_docbook_xsl">
    <available file="${docbook-xsl.fo.dir}/docbook.xsl"
               type="file"
               property="docbook-xsl.present"
    />
    <ant target="fail_if_no_docbook_xsl"/>
  </target>
   
  <target name="doc" depends="init" if="fop.present">
    <uptodate property="cs_pdf_uptodate"
            srcfile="${doc.xml}/jprint-cs.xml"
            targetfile="${build.doc.dir}/jprint-cs.pdf"/>
    <ant target="gen_cs_pdf"/>
    <uptodate property="sm_pdf_uptodate"
            srcfile="${doc.xml}/jprint-ug.xml"
            targetfile="${build.doc.dir}/jprint-ug.pdf"/>
    <ant target="gen_ug_pdf"/>
  </target>

  <target name="gen_cs_pdf" depends="check_docbook_xsl" unless="cs_pdf_uptodate">
    <mkdir dir="${build.doc.dir}"/>
    <copy file="${doc.img}/draft.gif" todir="${docbook-xsl.fo.dir}"/>
    <copy file="${doc.xsl}/fo/jprint-cs.xsl" todir="${docbook-xsl.fo.dir}">
        <filterset>
          <filter token="DRAFT_IMG_URI" value="file://${docbook-xsl.fo.dir}/draft.gif"/>
        </filterset>
    </copy>
    <java classname="org.apache.fop.apps.Fop"
        classpathref="fop.path"
        fork="yes">
        <arg line="-xml ${doc.xml}/jprint-cs.xml"/>
        <arg line="-xsl ${docbook-xsl.fo.dir}/jprint-cs.xsl"/>
        <arg line="-pdf ${build.doc.dir}/jprint-cs.pdf"/>
    </java>
  </target>

  <target name="gen_ug_pdf" depends="check_docbook_xsl" unless="sm_pdf_uptodate">
    <mkdir dir="${build.doc.dir}"/>
    <copy file="${doc.img}/draft.gif" todir="${docbook-xsl.fo.dir}"/>
    <copy file="${doc.xsl}/fo/jprint-ug.xsl" todir="${docbook-xsl.fo.dir}">
        <filterset>
          <filter token="DRAFT_IMG_URI" value="file://${docbook-xsl.fo.dir}/draft.gif"/>
        </filterset>
    </copy>
    <java classname="org.apache.fop.apps.Fop"
        classpathref="fop.path"
        fork="yes">
        <arg line="-xml ${doc.xml}/jprint-ug.xml"/>
        <arg line="-xsl ${docbook-xsl.fo.dir}/jprint-ug.xsl"/>
        <arg line="-pdf ${build.doc.dir}/jprint-ug.pdf"/>
    </java>
  </target>
  
  <!--target name="release" depends="release-without-jaudit, release-with-jaudit"/-->
  <target name="release" depends="build, doc">
    <copy todir="${dist.dir}">
      <fileset dir="${jboss.home}">
        <include name="bin/run.jar"/>
        <include name="client/jbossall-client.jar"/>
        <include name="lib/concurrent.jar"/>
        <include name="lib/getopt.jar"/>
        <include name="lib/gnu-regexp.jar"/>
        <include name="lib/jboss-boot.jar"/>
        <include name="lib/jboss-common.jar"/>
        <include name="lib/jboss-jmx.jar"/>
        <include name="lib/jboss-system.jar"/>
        <include name="lib/jdom.jar"/>
        <include name="lib/log4j-boot.jar"/>
        <include name="server/default/conf/jndi.properties"/>
        <include name="server/default/conf/xmdesc/*"/>
        <include name="server/default/deploy/jmx-invoker-adaptor-server.sar/**"/>
        <include name="server/default/lib/jmx-adaptor-plugin.jar"/>
        <include name="server/default/lib/jboss-j2ee.jar"/>
        <include name="server/default/lib/jboss-management.jar"/>
        <include name="server/default/lib/jboss-transaction.jar"/>
        <include name="server/default/lib/jboss.jar"/>
        <include name="server/default/lib/jnpserver.jar"/>
        <include name="server/default/lib/log4j.jar"/>
      </fileset>
      <fileset dir="${basedir}">
        <include name="bin/JavaService.exe"/>
        <include name="doc/display-consistency.pdf"/>
        <include name="doc/gsdf_od.xls"/>
        <include name="doc/gsdf_od.sxc"/>
        <include name="images/*.dcm"/>
      </fileset>
      <fileset dir="${build.dir}">
        <include name="bin/*"/>
        <include name="doc/*"/>
      </fileset>
    </copy>
    <copy file="${check-license.jar}" todir="${dist.dir}/bin"/>
    <copy todir="${dist.dir}">
      <filterset>
        <filter token="SERVICE" value="${dist.name}"/>
      </filterset>
      <fileset dir="${src.dir}">
        <include name="bin/*.sh"/>
        <include name="bin/*.bat"/>
      </fileset>
    </copy>
    <copy todir="${dist.dir}/server/default">
        <fileset dir="${dcm4che.home}">
            <include name="lib/dcm4che.jar"/>
        </fileset>
        <fileset dir="${dcm4jboss.home}">
            <include name="lib/auditlog.jar"/>
            <include name="lib/dcmsrv.jar"/>
        </fileset>
        <fileset dir="${license.home}">
            <include name="lib/check-license.jar"/>
        </fileset>
      <fileset dir="${src.dir}">
        <include name="conf/annotation/*.adf"/>
        <include name="conf/annotation/*.jpg"/>
        <include name="conf/calibration/DSI256.ods"/>
        <include name="conf/lut/*.lut"/>
        <include name="conf/cacerts.jks"/>
        <include name="conf/log4j.xml"/>
        <include name="conf/jboss-service.xml"/>
      </fileset>
      <fileset dir="${build.dir}">
        <include name="lib/*"/>
        <include name="conf/*"/>
        <include name="deploy/*.xml"/>
      </fileset>
    </copy>
    <fixcrlf srcdir="${dist.dir}/bin" eol="crlf" includes="*.bat"/>
    <fixcrlf srcdir="${dist.dir}/bin" eol="lf" includes="*.sh"/>
    <chmod dir="${dist.dir}/bin" perm="ugo+rx" includes="*.sh"/>
    <zip destfile="${build.dir}/${dist.name}.zip"
         basedir="${build.dir}"
         includes="${dist.name}/**"
    />
  </target>

  <target name="release-with-jaudit" depends="build, doc" if="jaudit.present">
    <copy todir="${dist-with-jaudit.dir}">
        <fileset dir="${jaudit.home}">
            <exclude name="bin/*"/>
        </fileset>
    </copy>
    <copy todir="${dist-with-jaudit.dir}">
      <fileset dir="${jboss.home}">
        <include name="bin/run.*"/>
        <include name="bin/jboss_init_redhat.sh"/>
        <include name="client/jbossall-client.jar"/>
      </fileset>
      <fileset dir="${basedir}">
        <include name="bin/JavaService.exe"/>
        <include name="doc/display-consistency.pdf"/>
        <include name="doc/gsdf_od.xls"/>
        <include name="images/*.dcm"/>
      </fileset>
      <fileset dir="${build.dir}">
        <include name="bin/*"/>
        <include name="doc/*"/>
      </fileset>
    </copy>
    <copy file="${check-license.jar}" todir="${dist-with-jaudit.dir}/bin"/>
    <copy todir="${dist-with-jaudit.dir}">
      <filterset>
        <filter token="SERVICE" value="${dist-with-jaudit.name}"/>
      </filterset>
      <fileset dir="${src.dir}">
        <include name="bin/*.sh"/>
        <include name="bin/*.bat"/>
      </fileset>
    </copy>
    <copy todir="${dist-with-jaudit.dir}/server/default">
        <fileset dir="${dcm4che.home}">
            <include name="lib/dcm4che.jar"/>
        </fileset>
        <fileset dir="${dcm4jboss.home}">
            <include name="lib/auditlog.jar"/>
            <include name="lib/dcmsrv.jar"/>
        </fileset>
        <fileset dir="${license.home}">
            <include name="lib/check-license.jar"/>
        </fileset>
      <fileset dir="${src.dir}">
        <include name="conf/cacerts.jks"/>
        <include name="conf/annotation/*.adf"/>
        <include name="conf/calibration/DSI256.ods"/>
        <include name="conf/lut/*.lut"/>
      </fileset>
      <fileset dir="${build.dir}">
        <include name="lib/*"/>
        <include name="conf/*"/>
        <include name="deploy/*.xml"/>
        <exclude name="deploy/auditlog-service.xml"/>
      </fileset>
    </copy>
    <copy file="${src.conf}/auditlog-service.xml" 
          todir="${dist-with-jaudit.dir}/server/default/deploy">
      <filterset>
        <filter token="ARCHIVES" value="dcm4che.jar,auditlog.jar"/>
        <filter token="DEPENDS"
            value="--> &lt;depends>dcm4chex:service=AuditRepServer,name=ARR&lt;/depends> &lt;!--"/>
      </filterset>
    </copy>
    <fixcrlf srcdir="${dist-with-jaudit.dir}/bin" eol="crlf" includes="*.bat"/>
    <fixcrlf srcdir="${dist-with-jaudit.dir}/bin" eol="lf" includes="*.sh"/>
    <chmod dir="${dist-with-jaudit.dir}/bin" perm="ugo+rx" includes="*.sh"/>
    <zip destfile="${build.dir}/${dist-with-jaudit.name}.zip"
         basedir="${build.dir}"
         includes="${dist-with-jaudit.name}/**"
    />
  </target>
       
  <target name="main" depends="release"/>

  <target name="clean">
    <delete dir="${build.dir}"/>
  </target>

</project>
