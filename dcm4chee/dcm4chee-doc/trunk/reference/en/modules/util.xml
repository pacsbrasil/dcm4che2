<?xml version="1.0" encoding="UTF-8"?>
<chapter id="dcm4che-utilities" revision="1">
  <title>Using the dcm4che Samples and Utilities</title>

  <sect1 id="utilities-overview" revision="1">
    <title>Overview</title>

    <para>The base dcm4che toolkit contains a number of useful sample
    applications that may be used in conjunction with dcm4chee, with another
    archive application, or to operate on DICOM objects in a stand alone
    fashion.</para>

    <para>The current production version of dcm4che is 1.4.3 within the
    dcm4che14 CVS code line. dcm4che2 is the next generation of the toolkit,
    and although you will see that it is available for download, it is still
    under development and testing. Usage of and feedback for dcm4che2 is
    desired and encouraged, but this document will not cover its usage.</para>

    <para>The dcm4che14 samples are a great place to get started with the
    toolkit if you are interested in writing your own DICOM applications as
    well. They demonstrate most of the operations that you will have need
    of.</para>

    <para>In order to start using the samples, you must first download the
    distribution from SourceForge. dcm4che is included in the dcm4chee
    download, but only in a single JAR format without the sample applications.
    To begin:</para>

    <orderedlist>
      <listitem>
        <para>Download the binary distribution of dcm4che14 from the Files
        page of the dcm4che project page on SourceForge (<literal><ulink
        url="http://sourceforge.net/projects/dcm4che/">http://sourceforge.net/projects/dcm4che/</ulink></literal>).
        The current version available for download is
        <literal>dcm4che-1.4.2.zip</literal>. If you plan on writing your own
        DICOM applications, it is recommended that you download the source
        distribution as well. The source may then be linked in with your IDE
        for debugging and browsing purposes. The API documentation may also be
        useful, but it is not very complete as of this writing.</para>
      </listitem>

      <listitem>
        <para>Unpack the ZIP file to the directory of your choice.</para>
      </listitem>
    </orderedlist>
    
    <para>After unpacking the ZIP file, you should see the following directory structure:</para>
    
    <programlisting><![CDATA[
dcm4che-1.4.x
|
|_bin
|
|_etc
|
|_lib
|
|_licenses
|
|_samples
    |
    |_data
    |
    |_iftm
    |
    |_imageio
    |
    |_imgdisp
    |
    |_media
    |
    |_net
    |
    |_rtf2sr
    |
    |_syslog
    ]]></programlisting>
    
        <para>This directory listing may be described as follows:</para>

        <variablelist spacing="compact">
            <varlistentry>
                <term>dcm4che-1.4.3</term>
                <listitem>
                    <para>
                        This is the root directory, named by the version.  It contains some basic information 
                        (readme and install files), along with license and copyright information for the 
                        toolkit and supporting libraries.  Note that the <literal>CHANGES</literal> file 
                        is not up to date as of this writing.
                    </para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>bin</term>
                <listitem>
                    <para>
                        The <literal>bin</literal> directory contains the sample applications in binary format, configuration files, certificates 
                        needed to use networked utilities with TLS (transport layer security) enabled, and some third
                        party libraries.  Brief descriptions of all of the samples can be seen below.
                    </para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>etc</term>
                <listitem>
                    <para>
                        The <literal>etc</literal> directory currently contains only a single file <literal>NativeMetadataFormat.dtd</literal>.
                        This DTD file describes the metadata format that the dcm4che14 toolkit uses when reading/writing DICOM files as XML.
                    </para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>lib</term>
                <listitem>
                    <para>
                        The <literal>lib</literal> directory contains all of the third party libraries that the toolkit depends upon.
                    </para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>licenses</term>
                <listitem>
                    <para>
                        The <literal>licenses</literal> directory contains the licenses relevant to the toolkit and third party libraries.
                    </para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>samples</term>
                <listitem>
                    <para>
                        The <literal>samples</literal> directory contains source code for all of the sample applications.  These are categorized 
                        within subdirectories by the type of functionality:
                        <itemizedlist>
                            <listitem>data - applications for manipulating and transforming DICOM objects</listitem>
                            <listitem>iftm - a simple GUI application for performing a few DICOM operations.</listitem>
                            <listitem>imageio - applications for manipulating and transforming DICOM pixel data</listitem>
                            <listitem>imgdisp - applications which demonstrate image display</listitem>
                            <listitem>media - an application for the manipulation of a DICOMDIR</listitem>
                            <listitem>net - applications for performing various DICOM network operations</listitem>
                            <listitem>rtf2sr - an application for the transformation of an RTF (Rich Text Format) document to a DICOM SR (Structured Report)</listitem>
                            <listitem>syslog - a sample Syslog writer</listitem>
                        </itemizedlist>
                    </para>
                </listitem>
            </varlistentry>
        </variablelist>

    </sect1>
    
    <sect1 id="utilities-usage" revision="1">
        <title>Basic Usage</title>
        
        <para>Using the dcm4che14 utilities and samples (copied from Thomas Hacklaender's MediaNet Manual).</para>
        
        <sect2 id="dcmdir">
            <title>dcmdir</title>
            <para>
                This application processes DICOM file-sets, as described in part 10 of the DICOM standard.
                Keep in mind that DICOM restricts possible file-names: A file-set must contain one file, with
                name <literal>DICOMDIR</literal>, that contains information concerning the file-set. You can only add files to a
                file-set, which are stored in the directory of the <literal>DICOMDIR</literal> file or in sub-directories up to eight
                levels. The name of such files and directories may only be 8 characters long and the characters
                must be capital letters or numbers. The character <literal>.</literal> is not allowed.
            </para>
            
            <para>
                Using standard CD-writing software it is possible to create a DICOM-CD. Just write the whole
                contents of the directory containing the <literal>DICOMDIR</literal> file and all its subdirectories to a CD.
            </para>
            
            <para>Examples:</para>
            
            <para><computeroutput>java -jar dcmdir.jar -c ./tmp/DICOMDIR</computeroutput></para>
            
            <para>Creates an empty file-set in the subdirectory <literal>tmp</literal>.</para>
            
            <para><computeroutput>java -jar dcmdir.jar -a ./tmp/DICOMDIR ./tmp/SMPTE2</computeroutput></para>
            
            <para>Adds the existing DICOM object <literal>./tmp/SMPTE2</literal> to the existing file-set <literal>./tmp/DICOMDIR</literal>.</para>
            
            <para>java -jar dcmdir.jar -x ./tmp/DICOMDIR --pat 1234567890 ./tmp</para>
            
            <para>Marks all entries in the file-set <literal>./tmp/DICOMDIR</literal> as "<emphasis>not in use</emphasis>", if the referenced files are in
                directory <literal>./tmp</literal> or its subdirectories and have a patient ID equal to <literal>1234567890.</literal>
            </para>
            
            <para><computeroutput>java -jar dcmdir.jar -P ./tmp/DICOMDIR</computeroutput></para>
            
            <para>Marks all entries in the file-set <literal>./tmp/DICOMDIR</literal> as "<emphasis>not in use</emphasis>", if the referenced files are not
            physically present at the referenced position in the filesystem.</para>
            
            <para><computeroutput>java -jar dcmdir.jar -z ./tmp/DICOMDIR</computeroutput></para>
            
            <para>Removes all entries in the file-set <literal>./tmp/DICOMDIR</literal> which are marked as "<emphasis>not in use</emphasis>".</para>
            
            <para>Usage:</para>

            <para><computeroutput>java -jar dcmdir.jar -{tcaxXzP} dir-file [OPTION]... [FILE]...</computeroutput></para>

            <para>Commands:</para>             
            <programlisting><![CDATA[
-c dir-file create new DICOMDIR file with references to files...
-a dir-file add file references to existing DICOMDIR file
-x dir-file remove record(s) from existing DICOMDIR, with specified
--pat id Patient ID
--study uid Study Instance UID
--series uid Series Instance UID
--sop uid SOP Instance UID
[FILE]... referenced files
-X dir-file same as -x dir-file, but also deletes referenced files
-P dir-file purge records from existing DICOMDIR file, with referenced
    files do not exist anymore
-z dir-file compact existing DICOMDIR file by removing inactive records
            ]]></programlisting>

            <para>Options (overrides presets defined in resource <literal>dcmdir.cfg</literal>):</para>
            
            <programlisting><![CDATA[
--id id defines File-set ID of created DICOMDIR file
--uid uid defines SOP Instance UID of created DICOMDIR file
--readme readme-file add README file reference to created DICOMDIR file
--readme-charset code specifies character set used in README file
--grouplen encode with (gggg,0000) group length attributes
--seqlen encode sequence attributes with explicit length
--itemlen encode sequence items with explicit length
--onlyInUse hide inactive records in content list
--maxlen line-len maximal line length in listing; default=79
--vallen val-len displayed value length in listing; default=64
--help display this help and exit
--version output version information and exit            
            ]]></programlisting>
            
        </sect2>
        
        <sect2 id="dcmrcv">
            <title>dcmrcv</title>
            <para>
                This application implements a DICOM server listening on <literal>PORT</literal>. It acts as a Storage SCP. The
                received images are stored to the local file-system or in a DICOM file-set, depending on the
                <literal>dest</literal> option. If the destination is a file-set, the received objects are stored in subdirectories of
                the file-set directory. The names of the subdirectories are derived from the received object: PatientName,
                StudyID and SeriesNumber. The name of the file the object is stored is the InstanceNumber.
                This behavior may be configured by the <literal>fs-file-id</literal> option.
            </para>
            
            <para>Example:</para>
            
            <para><computeroutput>java -jar dcmrcv.jar --dest=./tmp 104</computeroutput></para>
            
            <para>Starts the server, listening on port 104. The received DICOM objects are stored as plain files in
                    the subdirectory <literal>tmp</literal>.</para>
            
            <para>Usage:</para>

            <para><computeroutput>java -jar dcmrcv.jar [OPTION]... PORT</computeroutput></para>

            <para>Options (overrides presets defined in resource <literal>dcmrcv.cfg</literal>):</para>
            
            <programlisting><![CDATA[
--called-aets=AET1,.. only association requests with matching called and
--calling-aets=AET1,.. calling AET will be accepted
--max-pdu-len=LEN set maximal length of receiving PDUs [default=16352]
--max-op-invoked=NUM set maximal number of invoked operations with outstanding response 
--rsp-delay=SEC define additional delay of response (useful for testing async mode)
--dest=DEST define storage destination for received objects, if DEST specifies a DICOMDIR file path (=last component = "DICOMDIR"), the received objects will be stored as DICOM File-set, further specified by
--fs-id=NAME the File-set Identifier [default=<none>],
--fs-uid=UID the File-set SOP Instance UID [default=<auto>],
--fs-file-id=TAG_PATH specifies schema for generated file IDs [default=StudyDate,StudyID,SeriesNumber,InstanceNumber],
--fs-lazy-update defer update of DICOMDIR at association release, instead of immedately at each object receipt.
--set=TAG:VAL Replace value of specified attribute with specified value in received object (e.g.: --set=PatientName:anonymous).
--buf-len=LEN set length byte buffer, used to store data to file
--tls=CIPHERSUITE1,.. accept TLS connection with specified Cipher Suites eg.: SSL_RSA_WITH_NULL_SHA, SSL_RSA_WITH_3DES_EDE_CBC_SHA
--tls-key=KEYSTORE get key from specified resource [default:dcmrcv.key]
--tls-key-passwd=PASS password for keystore and key specified by --tls-key [default: dcm4che]
--tls-cacerts=KEYSTORE read trusted CA Certificats from specified resource [default:cacerts]
--tls-cacerts-passwd=PASS password for keystore specified by --tls-cacerts [default: dcm4che]
--help display this help and exit
--version output version information and exit
            ]]></programlisting>
        </sect2>
        
        <sect2 id="dcmsnd">
            <title>dcmsnd</title>
            <para>
                This application acts as a Storage SCU to send DICOM objects to a Storage SCP. 
                The objects are read from the local file-system and are send to an Storage SCP which is
                defined by <literal>URL</literal>. <literal>FILE</literal> may be the name of a single file, a list of files separated by whitespaces
                or the name of a directory. In the later case all files in the directory and all subdirectories will be
                sent. If <literal>FILE</literal> is omitted, the connection to the remote node will simply be verified by DICOM Echo.
            </para>
            
            <para>Examples:</para>
            
            <para><computeroutput>java -jar dcmsnd.jar dicom://DCMRCV:DCMSND@localhost:104 ./SMPTE</computeroutput></para>
            
            <para>Opens association to local server, listening on port 104, with calling application entity title
                <literal>DCMSND</literal> and called application entity title <literal>DCMRCV</literal>. Sends the DICOM file <literal>./SMPTE</literal> to the
                server.</para>
            
            <para><computeroutput>java -jar dcmsnd.jar dicom://DCMRCV:DCMSND@localhost:104</computeroutput></para>
            
            <para>Opens association to local server, listening on port 104, with calling application entity title
                <literal>DCMSND</literal> and called application entity title <literal>DCMRCV</literal>. Verifies the connection with DICOM Echo.</para>
                
            <para>Usage:</para>

            <para><computeroutput>java -jar dcmsnd.jar [OPTION]... URL [FILE]...</computeroutput></para>
            
            <para>URL Definition:</para>

            <programlisting><![CDATA[
dicom://CALLED[:CALLING]@HOST[:PORT]
CALLED Called AET in association request
CALLING Calling AET in association request [default=ANONYMOUS]
HOST Name or IP address of host, where the server is running
PORT TCP port address, on which the server is listing for incoming TCP Transport Connection Indication [default=104]
            ]]></programlisting>
            
            <para>Options (overrides presets defined in resource <literal>dcmsnd.cfg</literal>):</para>
                <programlisting><![CDATA[
--prior-high HIGH priority of storage requests [default=NORMAL]
--prior-low LOW priority of storage requests [default=NORMAL]
--max-pdu-len=LEN set maximal length of receiving PDUs [default=16352]
--max-op-invoked=NUM set maximal number of invoked operations with outstanding response [default=0 -> unlimited]
--max-pdu-len=LEN maximal length of receiving PDUs [default=16352]
--buf-len=LEN byte buffer length, used to store data to file [default=2048]
--repeat-dimse=NUM Number of times to repeat single request [default=1]
--repeat-assoc=NUM Number of times to repeat whole operation [default=1]
--buf-len=LEN set length byte buffer, used to store data to file
--set=TAG:VAL Replace value of specified attribute with specified value in transmitted object (e.g.: --set=PatientName:anonymous).
--tls=CIPHERSUITE1,.. accept TLS connection with specified Cipher Suites eg.: SSL_RSA_WITH_NULL_SHA, SSL_RSA_WITH_3DES_EDE_CBC_SHA
--tls-key=KEYSTORE get key from specified resource [default:dcmsnd.key]
--tls-key-passwd=PASS password for keystore and key specified by --tls-key [default: dcm4che]
--tls-cacerts=KEYSTORE read trusted CA Certificats from specified resource [default:cacerts]
--tls-cacerts-passwd=PASS password for keystore specified by --tls-cacerts [default: dcm4che]
--poll-dir=DIR Poll the specified directory for DICOM files - e.g. received by application dcmrcv - and forward them to the remote DICOM node. [default: <none>]
--poll-period=PERIOD Poll period in s. The default is 5s.
--poll-retry-open=TIME Retry open connection to remote host with specified time interval. The default is 60s.
--poll-delta-last-modified=TIME Only consider files, which modification time differs with the current time more than the specified value. The default is 3s.
--poll-done-dir=DIR Moves sent files to the specified directory, instead of removing it from poll-dir.
--help display this help and exit
--version output version information and exit
                    ]]></programlisting>
                
        </sect2>
        
    </sect1>
</chapter>