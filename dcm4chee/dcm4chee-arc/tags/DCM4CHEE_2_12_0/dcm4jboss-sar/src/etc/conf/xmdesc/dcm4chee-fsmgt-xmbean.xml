<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mbean PUBLIC "-//JBoss//DTD JBOSS XMBEAN 1.1//EN" "http://www.jboss.org/j2ee/dtd/jboss_xmbean_1_1.dtd">

<mbean>
   <description>File System Management Service. Specifies the location of
file systems in which DICOM objects received from the Store SCP Server 
are stored. You can also set up rules to delete the most infrequently
accessed studies.</description>

   <descriptors>
      <persistence persistPolicy="OnUpdate"/>
      <persistence-manager value="org.jboss.mx.persistence.DelegatingPersistenceManager"/>
   </descriptors>

   <class>org.dcm4chex.archive.mbean.FileSystemMgtService</class>

   <constructor>
      <description>The default constructor</description>
      <name>FileSystemMgtService</name>
   </constructor>

   <!-- Attributes -->
   <attribute access="read-write" 
      getMethod="getRetrieveAET"
      setMethod="setRetrieveAET">
      <description><![CDATA[Retrieve AE title associated with this DICOM Node.<br/>
      There must be at least one configured file system suitable for storage 
      (ONLINE, RW) associated with this AE title.<br/>
      <b>Warning:</b> Changing RetrieveAET here does NOT change any configured filesystem!<br/>
      Use operation switchRetrieveAET instead, wich allows changing this AET 
      with respect of configured filesystems and already stored objects of this node. ]]>
      </description>
      <name>RetrieveAETitle</name>
      <type>java.lang.String</type>
      <descriptors>
         <value value="DCM4CHEE"/>
      </descriptors>
   </attribute>   
   <attribute access="read-write" 
      getMethod="getDefStorageDir"
      setMethod="setDefStorageDir">
      <description><![CDATA[Default Storage Directory, used if there is no
      File system entry configured for given Retrieve AET.
      A relative path name is resolved relative to
      <i>archive-install-directory</i>/server/default/. Use "NONE" to skip the default configuration.]]>
      </description>
      <name>DefaultStorageDirectory</name>
      <type>java.lang.String</type>
      <descriptors>
         <value value="archive"/>
      </descriptors>
   </attribute>
   <attribute access="read-write"
      getMethod="isCheckStorageFileSystemStatus"
      setMethod="setCheckStorageFileSystemStatus">
      <description><![CDATA[Flag indicating if the status and availability
      of the current storage file system is checked before each file storage of
      objects received by the Storage SCP.
      <p>If the update of the status or availability of the file system is only
      performed by invoking operations <i>updateFileSystem</i> or
      <i>updateFileSystemAvailability</i> of this service - in particular,
      if there are no other running dcm4chee applications on other nodes
      (dcm4chee cluster), and File System records in the database will NOT
      be updated by executing SQL statements using some dcm4chee external SQL
      client application - the check can be deactivated to spare the execution
      of one additional SQL statement for each stored object.</p>
      <p>Invoking operation <i>checkStorageFileSystem</i> will force to check
      the status and availability of the current storage file system before
      next file storage, even if this attribute is set to <tt>false</tt>.</p>
      ]]>
      </description>
      <name>CheckStorageFileSystemStatus</name>
      <type>boolean</type>
      <descriptors>
         <value value="true"/>
     </descriptors>
   </attribute> 
   <attribute access="read-write" 
      getMethod="getMinFreeDiskSpace"
      setMethod="setMinFreeDiskSpace">
      <description><![CDATA[Minimum free disk space. If the free available disk space
      on the current storage file system falls below this value, the next
      configured file system becomes the current storage system.
      1MB = 1000000 bytes, 1GB = 1000MB.]]>   
      </description>
      <name>MinimumFreeDiskSpace</name>
      <type>java.lang.String</type>
      <descriptors>
         <value value="50MB"/>
      </descriptors>
   </attribute>
   <attribute access="read-write" 
      getMethod="getDFCommand"
      setMethod="setDFCommand">
      <description><![CDATA[<tt>df</tt> command used on *nix operation 
      systems to assess free available disk space on storage file system(s).<br/>
      You may change the default value to use a different version than the
      first in the system PATH.<br/>
      <p><b>Example:</b> <tt>/usr/xpg4/bin/df</tt><br/>
      <p><b>Default:</b> <tt>df</tt>
      ]]>   
      </description>
      <name>DFCommand</name>
      <type>java.lang.String</type>
      <descriptors>
         <value value="df"/>
      </descriptors>
   </attribute>
   <attribute access="read-write" 
      getMethod="getDFCommandOption"
      setMethod="setDFCommandOption">
      <description><![CDATA[<tt>df</tt> command option used on *nix operation
      systems to assess free available disk space on storage file system(s).<br/>
      If you change the default value for POSIX compliant output, a wrong
      value for the free available disk space may be derived from the command
      output.<br/>
      => Always verify, if <i>freeDiskSpace()</i> (still) returns the correct
      value, after any modification of <i>DFCommandOption</i> or
      <i>DFCommand</i>.<br/>
      Example: <tt>-k</tt><br/>
      Default Value: <tt>-P</tt>]]>   
      </description>
      <name>DFCommandOption</name>
      <type>java.lang.String</type>
      <descriptors>
         <value value="-P"/>
      </descriptors>
   </attribute>
   <attribute access="read-write"
      getMethod="getCheckFreeDiskSpaceMinimalInterval"
      setMethod="setCheckFreeDiskSpaceMinimalInterval">
      <description><![CDATA[Minimal Interval for checking free available disk
      space on current storage file system against minimum value specified by
      <i>MinimumFreeDiskSpace</i>. The current interval (curInterval) is
      calculated by multiplication of this value (minInterval) with the ratio
      of the current free available disk space (curFDS) to the configured
      <i>MinimumFreeDiskSpace</i> (minFDS), but maximal the value specified by
      <i>CheckFreeDiskSpaceMaximalInterval</i> (maxInterval):
      <p>
      <code>curInterval = min(minInterval * curFDS/minFDS, maxInterval)</code>
      <p>Format: ##m (in minutes) | ##s (in seconds).
      ]]>
      </description>
      <name>CheckFreeDiskSpaceMinimalInterval</name>
      <type>java.lang.String</type>
      <descriptors>
         <value value="10s"/>
      </descriptors>
   </attribute>
   <attribute access="read-write"
      getMethod="getCheckFreeDiskSpaceMaximalInterval"
      setMethod="setCheckFreeDiskSpaceMaximalInterval">
      <description><![CDATA[Maximal Interval for checking free available disk
      space on current storage file system against minimum value specified by
      <i>MinimumFreeDiskSpace</i>. Effective as long the current free available
      disk space is greater than <i>MinimumFreeDiskSpace</i> multiplied by the
      ratio of this value and the configured <i>CheckFreeDiskSpaceMinimalInterval</i>.
      Otherwise the interval will be calculated as described above for attribute
      <i>CheckFreeDiskSpaceMinimalInterval</i>. Format: ##m (in minutes) | ##s (in seconds).    
      ]]>
      </description>
      <name>CheckFreeDiskSpaceMaximalInterval</name>
      <type>java.lang.String</type>
      <descriptors>
         <value value="60s"/>
      </descriptors>
   </attribute>
   <attribute access="read-write"
      getMethod="getDeleterThresholds"
      setMethod="setDeleterThresholds">
      <description><![CDATA[Defines thresholds dependent on hour of day, for deleting the most
        infrequently accessed studies. Format: HOUR:##MB or HOUR:##GB or HOUR:##h,
        multiple thresholds with different (start) hour separated by ';'.
        E.g.: 7:1h;19:24h => free space for expected data volume received in 24 hours between
        7pm and 7am. Between 7am and 7pm only delete studies if the available free space falls below
        the expected data volume received in one hour.]]>
      </description>
      <name>DeleterThresholds</name>
      <type>java.lang.String</type>
      <descriptors>
         <value value="7:1h;19:24h"/>
      </descriptors>
   </attribute>
   <attribute access="read-write"
      getMethod="getExpectedDataVolumePerDay"
      setMethod="setExpectedDataVolumePerDay">
      <description><![CDATA[Expected data volume per day. Used to transform time based deleter
      thresholds (s. DeleterThresholds) into disk space size to free.]]>
      </description>
      <name>ExpectedDataVolumePerDay</name>
      <type>java.lang.String</type>
      <descriptors>
         <value value="100MB"/>
      </descriptors>
   </attribute>
   <attribute access="read-write"
      getMethod="isAdjustExpectedDataVolumePerDay"
      setMethod="setAdjustExpectedDataVolumePerDay">
      <description><![CDATA[Update value of attribute ExpectedDataVolumePerDay at midnight,
      if data volume received during last 24 hours exceeds its current value.]]>
      </description>
      <name>AdjustExpectedDataVolumePerDay</name>
      <type>boolean</type>
      <descriptors>
         <value value="true"/>
      </descriptors>
   </attribute>
   <attribute access="read-write"
      getMethod="isFlushStudiesExternalRetrievable"
      setMethod="setFlushStudiesExternalRetrievable">
      <description>Enables deletion of studies in local cache if the studies
      are retrieveable from an external Retrieve AE. Database entries for
      the studies are not removed.
      </description>
      <name>DeleteStudiesExternallyRetrievable</name>
      <type>boolean</type>
      <descriptors>
         <value value="false"/>
      </descriptors>
   </attribute>
   <attribute access="read-write"
      getMethod="isFlushStudiesOnMedia"
      setMethod="setFlushStudiesOnMedia">
      <description>Enables the deletion of studies in local cache that are
      stored on media (offline storage). Database entries for the studies are not
      removed. 
      </description>
      <name>DeleteLocalStudiesStoredOnMedia</name>
      <type>boolean</type>
      <descriptors>
         <value value="false"/>
      </descriptors>
   </attribute>
   <attribute access="read-write"
      getMethod="isFlushOnNearline"
      setMethod="setFlushOnNearline">
      <description>Enables the deletion of studies in local cache that have a valid copy
      stored on a nearline filesystem (even if the filesystem is not read-only).
      Database entries for the studies are not removed.
      </description>
      <name>DeleteLocalStudiesAvailableNearline</name>
      <type>boolean</type>
      <descriptors>
         <value value="false"/>
      </descriptors>
   </attribute>
   <attribute access="read-write"
      getMethod="isFlushOnROFsAvailable"
      setMethod="setFlushOnROFsAvailable">
      <description>Enables the deletion of studies in local cache that have a valid copy
      stored on a read only filesystem. Database entries for the studies are not
      removed. 
      </description>
      <name>DeleteLocalStudiesCopyAvailable</name>
      <type>boolean</type>
      <descriptors>
         <value value="true"/>
      </descriptors>
   </attribute>
   <attribute access="read-write" getMethod="getValidFileStatus" setMethod="setValidFileStatus">
      <description><![CDATA[Defines the 'VALID' File Status if <tt>DeleteLocalStudiesCopyAvailable</tt> is enabled.<p/> 
      		This value is used to check if a valid study copy is available on RO Filesystem.<br/>
      		(all instances of a study must be also stored on a RO filesystem with this filestatus.)
      		<dl>
    		<dt>Use one of the following stati:</dt>
    		<dd>DEFAULT</dd>
    		<dd>TO_ARCHIVE</dd>
    		<dd>ARCHIVED</dd>
    		</dl>
    		]]> 
      </description>
      <name>ValidFileStatus</name>
      <type>java.lang.String</type>
      <descriptors>
         <value value="DEFAULT"/>
      </descriptors>
   </attribute>
   <attribute access="read-write"
      getMethod="isDeleteStudiesStorageNotCommited"
      setMethod="setDeleteStudiesStorageNotCommited">
      <description>Enables deletion of the most infrequently accessed studies for
          which no storage commitment request was received. Enabling this feature
          deletes the studies and the database entries, so the study is completely 
          removed from the system. We recommend extreme caution
          when using this feature.
      </description>
      <name>DeleteStudiesFromSystem</name>
      <type>boolean</type>
      <descriptors>
         <value value="false"/>
      </descriptors>
   </attribute>
   <attribute access="read-write"
      getMethod="isDeleteEmptyPatient"
      setMethod="setDeleteEmptyPatient">
      <description><![CDATA[Enables deletion of <i>empty</i> patients. <br> 
      				This option is only effective, when a study is removed completely 
      				on the basis of <i>DeleteStudiesFromSystem</i> rule.<br/>
      				Only patients with NO studies, MWL, MPPS, GPWL and GPPPS 
      				entries will be deleted! ]]>
      </description>
      <name>DeleteEmptyPatient</name>
      <type>boolean</type>
      <descriptors>
         <value value="false"/>
      </descriptors>
   </attribute>
   <attribute access="read-write"
      getMethod="getStudyCacheTimeout"
      setMethod="setStudyCacheTimeout">
      <description><![CDATA[Defines how long a study is not accessed before it will
      be deleted from cache if it matches one of the configured conditions:
      Delete Studies Externally Retrievable, Delete Studies On Media, or 
      Delete Studies from System.
      <br>Format: 
      <br>##h (in hours) | ##d (in days) | ##w (in weeks) | NEVER
      <br>NEVER = deletion of studies is only triggered by running out of disk space.
      <br>Example:
      <br>52w = any studies that have not been accessed for 52 weeks or more can be
      deleted if they match the preconfigured conditions.]]>
      </description>
      <name>StudyAgeForDeletion</name>
      <type>java.lang.String</type>
      <descriptors>
         <value value="NEVER"/>
      </descriptors>
   </attribute>
   <attribute access="read-write"
      getMethod="getPurgeFilesInterval"
      setMethod="setPurgeFilesInterval">
      <description>Interval in which unreferenced files are deleted. Unreferenced files are the result
      of deleting instances from the web trash folder.
      Format: ##s (in seconds), ##m (in minutes), ##h (in hours)
      NEVER = never delete unreferenced files.
      </description>
      <name>DeleteFilesInterval</name>
      <type>java.lang.String</type>
      <descriptors>
         <value value="1m"/>
      </descriptors>
   </attribute>
   <attribute access="read-write"
      getMethod="getLimitNumberOfFilesPerTask"
      setMethod="setLimitNumberOfFilesPerTask">
      <description>Limit the number of unreferenced files that are deleted in one 
      delete task.</description>
      <name>DeleteFilesLimit</name>
      <type>int</type>
      <descriptors>
         <value value="1000"/>
      </descriptors>
   </attribute>
   
   <attribute access="read-write"
      getMethod="getFreeDiskSpaceInterval"
      setMethod="setFreeDiskSpaceInterval">
      <description>Interval in which free disk space checked to 
      see whether the deletion of the most infrequently accessed
      studies should be triggered.
      Format: ##s (in seconds), ##m (in minutes), ##h (in hours).
      NEVER = do not delete of studies.          
      </description>
      <name>FreeDiskSpaceInterval</name>
      <type>java.lang.String</type>
      <descriptors>
         <value value="5m"/>
      </descriptors>
   </attribute>
   <attribute access="read-write"
      getMethod="isFreeDiskSpaceOnDemand"
      setMethod="setFreeDiskSpaceOnDemand">
      <description>Enables the "free disk space on demand" feature.
    Services such as the StorageSCP use this flag to permit or omit 
    the call of free disk space after their work.
      </description>
      <name>FreeDiskSpaceOnDemand</name>
      <type>boolean</type>
      <descriptors>
         <value value="false"/>
      </descriptors>
   </attribute>
   <attribute access="read-write"
      getMethod="getMountFailedCheckFile"
      setMethod="setMountFailedCheckFile">
      <description>If the specified file exists, this signals a failed mount.
      </description>
      <name>MountFailedCheckFile</name>
      <type>java.lang.String</type>
      <descriptors>
         <value value="NO_MOUNT"/>
      </descriptors>
   </attribute>
   <attribute access="read-write"
      getMethod="isMakeStorageDirectory"
      setMethod="setMakeStorageDirectory">
      <description>Create storage directory, if no one exists.
      </description>
      <name>MakeStorageDirectory</name>
      <type>boolean</type>
      <descriptors>
         <value value="true"/>
      </descriptors>
   </attribute>
   <attribute access="read-write"
      getMethod="isWADOExcludePrivateAttributes"
      setMethod="setWADOExcludePrivateAttributes">
      <description><![CDATA[Excludes private Attributes from Datasets returned
      by WADO Service]]>
      </description>
      <name>WADOExcludePrivateAttributes</name>
      <type>boolean</type>
      <descriptors>
         <value value="false"/>
      </descriptors>
   </attribute>
   <attribute access="read-write"
      getMethod="getOnSwitchStorageFilesystemInvoke"
      setMethod="setOnSwitchStorageFilesystemInvoke">
      <description><![CDATA[Executes specified command when the current
      storage file system becomes full and is switch to the next configured.
      '%1' will be replaced by the directory path of the previous,
      '%2' with the directory path of the new storage file system.
       ]]>
      </description>
      <name>OnSwitchStorageFilesystemInvoke</name>
      <type>java.lang.String</type>
      <descriptors>
         <value value="NONE" />
      </descriptors>
   </attribute>
   <attribute access="read-write"
      getMethod="getOtherServiceAETAttrs"
      setMethod="setOtherServiceAETAttrs">
      <description><![CDATA[List of AE Title attributes of other services
      which are updated by operation updateAETitle.
       ]]>
      </description>
      <name>OtherServiceAETitleAttributesToUpdate</name>
      <type>java.lang.String</type>
      <descriptors>
         <value value="
         dcm4chee.archive:service=AuditLogger#SupressLogForAETitles
         dcm4chee.archive:service=AuditLogger#LocalAETitles
         dcm4chee.archive:service=CheckStudyPatientService#SourceAET
         dcm4chee.archive:service=ContentEditService#CalledAETitle
         dcm4chee.archive:service=ContentEditService#CallingAETitle
         dcm4chee.archive:service=ECHOService#CallingAETitle
         dcm4chee.archive:service=ExportManager#CallingAETitle
         dcm4chee.archive:service=Forward#ForwardModifiedToAETitles
         dcm4chee.archive:service=FileSystemMgt#RetrieveAETitle
         dcm4chee.archive:service=GPWLScp#CalledAETitles
         dcm4chee.archive:service=GPWLScp#CallingAETitles
         dcm4chee.archive:service=GPWLScu#CallingAETitle
         dcm4chee.archive:service=GPWLScu#CalledAETitle
         dcm4chee.archive:service=HPScp#CalledAETitles
         dcm4chee.archive:service=HPScp#CallingAETitles
         dcm4chee.archive:service=IANScu#NotifiedAETitles
         dcm4chee.archive:service=IANScu#CallingAETitle
         dcm4chee.archive:service=MCMScu#CallingAETitle
         dcm4chee.archive:service=MCMScu#RetrieveAETitle
         dcm4chee.archive:service=MCMScu#MoveDestinationAETitle
         dcm4chee.archive:service=MCMScu#McmScpAETitle
         dcm4chee.archive:service=MoveScu#CallingAETitle
         dcm4chee.archive:service=MoveScu#CalledAETitle
         dcm4chee.archive:service=MPPSEmulator#ModalityAETitles
         dcm4chee.archive:service=MPPSEmulator#CalledAETitle
         dcm4chee.archive:service=MPPSScp#CalledAETitles
         dcm4chee.archive:service=MPPSScp#CallingAETitles
         dcm4chee.archive:service=MPPSScu#ForwardAETitles
         dcm4chee.archive:service=MPPSScu#CallingAETitle
         dcm4chee.archive:service=MWLFindScp#CalledAETitles
         dcm4chee.archive:service=MWLFindScp#CallingAETitles
         dcm4chee.archive:service=MWLFindScp#LogAETitles
         dcm4chee.archive:service=MWLScu#CallingAETitle
         dcm4chee.archive:service=MWLScu#CalledAETitle
         dcm4chee.archive:service=PPSScu#DestinationAETitles
         dcm4chee.archive:service=PPSScu#CallingAETitle
         dcm4chee.archive:service=Prefetch#PrefetchSourceAETitle
         dcm4chee.archive:service=Prefetch#DestinationQueryAETitle
         dcm4chee.archive:service=Prefetch#DestinationStorageAETitle
         dcm4chee.archive:service=Prefetch#CallingAETitle
         dcm4chee.archive:service=QueryRetrieveScp#CalledAETitles
         dcm4chee.archive:service=QueryRetrieveScp#CallingAETitles
         dcm4chee.archive:service=QueryRetrieveScp#SendWithDefaultTransferSyntaxToAETitles
         dcm4chee.archive:service=QueryRetrieveScp#SendNoPixelDataToAETitles
         dcm4chee.archive:service=QueryRetrieveScp#IgnoreUnsupportedSOPClassFailures
         dcm4chee.archive:service=QueryRetrieveScp#RequestStorageCommitFromAETitles
         dcm4chee.archive:service=QueryRetrieveScp#LogAETitles
         dcm4chee.archive:service=StgCmtScuScp#CalledAETitles
         dcm4chee.archive:service=StgCmtScuScp#CallingAETitles
         dcm4chee.archive:service=StoreScp#CalledAETitles
         dcm4chee.archive:service=StoreScp#CallingAETitles
         dcm4chee.archive:service=StoreScp#WarnForCoercedAETitles
         dcm4chee.archive:service=StoreScp#IgnorePatientIDAETitles
         dcm4chee.archive:service=StoreScp#LogAETitles
         dcm4chee.archive:service=StudyReconciliation#FindSCPAETitle
         dcm4chee.archive:service=StudyReconciliation#CallingAETitle
         dcm4chee.archive:service=StudyMgtScp#CalledAETitles
         dcm4chee.archive:service=StudyMgtScp#CallingAETitles
         dcm4chee.archive:service=StudyMgtScu#CallingAETitle
         dcm4chee.archive:service=XDS-I#DocRepositoryAET
         " />
      </descriptors>
   </attribute>
   <attribute access="read-write"
      getMethod="isDeleteFilesWhenUnavailable"
      setMethod="setDeleteFilesWhenUnavailable">
      <description><![CDATA[Enable/Disable deletion of files off a filesystem thats availability is changed to UNAVAIL.]]>
      </description>
      <name>DeleteFilesWhenUnavailable</name>
      <type>boolean</type>
      <descriptors>
         <value value="false"/>
      </descriptors>
   </attribute>
   
   <attribute access="read-write"
      getMethod="getRetryIntervalsForJmsOrder"
      setMethod="setRetryIntervalsForJmsOrder">
      <description><![CDATA[Number and interval of retries made for
      failed JMS order, e.g., purgeFile.
      <br>Format:
      <br>Comma separated list of <i>number</i>x<i>interval</i> pairs.
      <br>The interval can be specified in seconds (##s),
      minutes (##m), hours (##h) or days (##d).
      <br>Example: 
      <br>5x1m,10x10m means retry a total of 5 times, one minute
      apart for each retry; then retry a total of 10 times, 10 minutes 
      apart for each retry.]]>
      </description>
      <name>RetryIntervalsForJmsOrder</name>
      <type>java.lang.String</type>
      <descriptors>
         <value value="5x1m,12x5m,24x1h,7x1d" />
      </descriptors>
   </attribute>
   
   <attribute access="read-write"
      getMethod="getBufferSize"
      setMethod="setBufferSize">
      <description>Size of byte buffer used by WADO/RID service for copying data
      from file to TCP channel.
      </description>
      <name>BufferSize</name>
      <type>int</type>
      <descriptors>
         <value value="8192"/>
      </descriptors>
   </attribute>
   <attribute access="read-write"
      getMethod="getTimerIDCheckFilesToPurge"
      setMethod="setTimerIDCheckFilesToPurge">
      <description>Used internally. Do NOT modify.
      </description>
      <name>TimerIDCheckFilesToPurge</name>
      <type>java.lang.String</type>
   </attribute>
   <attribute access="read-write"
      getMethod="getTimerIDCheckFreeDiskSpace"
      setMethod="setTimerIDCheckFreeDiskSpace">
      <description>Used internally. Do NOT modify.
      </description>
      <name>TimerIDCheckFreeDiskSpace</name>
      <type>java.lang.String</type>
   </attribute>
   <attribute access="read-write"
      getMethod="getPurgeStudyQueueName"
      setMethod="setPurgeStudyQueueName">
      <description>Used internally. Do NOT modify.
      </description>
      <name>PurgeStudyQueueName</name>
      <type>java.lang.String</type>
   </attribute>
   <attribute access="read-write"
      getMethod="getTarRetrieverName"
      setMethod="setTarRetrieverName">
      <description>Used internally. Do NOT modify.
      </description>
      <name>TarRetrieverName</name>
      <type>javax.management.ObjectName</type>
   </attribute>
   <attribute access="read-write"
      getMethod="getAEServiceName"
      setMethod="setAEServiceName">
      <description>Used internally. Do NOT modify.
      </description>
      <name>AEServiceName</name>
      <type>javax.management.ObjectName</type>
   </attribute>   
   <attribute access="read-write"
      getMethod="getJmsServiceName"
      setMethod="setJmsServiceName">
      <description>Used internally. Do NOT modify.
      </description>
      <name>JMSServiceName</name>
      <type>javax.management.ObjectName</type>
   </attribute>   
   <attribute access="read-write"
      getMethod="getSchedulerServiceName"
      setMethod="setSchedulerServiceName">
      <description>Used internally. Do NOT modify.
      </description>
      <name>SchedulerServiceName</name>
      <type>javax.management.ObjectName</type>
   </attribute>  
   &defaultAttributes;

   <!-- Operations -->
   &defaultOperations;
   <operation impact="INFO">
      <description>Show all configured file systems.
      </description>
      <name>showAllFileSystems</name>
      <return-type>java.lang.String</return-type>
   </operation>
   <operation impact="INFO">
      <description>Show configured ONLINE,RW file systems.
      </description>
      <name>showOnlineFileSystems</name>
      <return-type>java.lang.String</return-type>
   </operation>
   <operation impact="INFO">
      <description>Show configured NEARLINE,RW file systems.
      </description>
      <name>showNearlineFileSystems</name>
      <return-type>java.lang.String</return-type>
   </operation>
   <operation impact="ACTION">
      <description> Add ONLINE,RW file system to configuration and link it with
      already configured ONLINE,RW file systems.
      </description>
      <name>addOnlineFileSystem</name>
      <parameter>
        <description>Directory/Mount Point of new File System</description>
        <name>dirPath</name>
        <type>java.lang.String</type>
      </parameter>
      <parameter>
        <description>Associated User Info</description>
        <name>user info</name>
        <type>java.lang.String</type>
      </parameter>
      <return-type>java.lang.String</return-type>
   </operation>
   <operation impact="ACTION">
      <description> Add NEARLINE,RW file system to configuration and link it with
      already configured NEARLINE,RW file systems.
      </description>
      <name>addNearlineFileSystem</name>
      <parameter>
        <description>Directory/Mount Point of new File System</description>
        <name>dirPath</name>
        <type>java.lang.String</type>
      </parameter>
      <parameter>
        <description>Associated User Info</description>
        <name>user info</name>
        <type>java.lang.String</type>
      </parameter>
      <return-type>java.lang.String</return-type>
   </operation>
   <operation impact="ACTION">
      <description>Add file system to configuration.
      </description>
      <name>addFileSystem</name>
      <parameter>
        <description>Directory/Mount Point</description>
        <name>dirPath</name>
        <type>java.lang.String</type>
      </parameter>
      <parameter>
        <description>Associated Retrieve AET</description>
        <name>aet</name>
        <type>java.lang.String</type>
      </parameter>
      <parameter>
        <description>Availability (ONLINE | NEARLINE | OFFLINE | UNAVAILABLE)
        </description>
        <name>availability</name>
        <type>java.lang.String</type>
      </parameter>
      <parameter>
        <description>Status (RW+ | RW | RO)
        </description>
        <name>status</name>
        <type>java.lang.String</type>
      </parameter>
      <parameter>
        <description>Associated User Info</description>
        <name>user info</name>
        <type>java.lang.String</type>
      </parameter>
      <return-type>org.dcm4chex.archive.ejb.interfaces.FileSystemDTO</return-type>
   </operation>
   <operation impact="ACTION">
      <description>Update file system configuration.
      </description>
      <name>updateFileSystem</name>
      <parameter>
        <description>Directory/Mount Point</description>
        <name>dirPath</name>
        <type>java.lang.String</type>
      </parameter>
      <parameter>
        <description>Associated Retrieve AET</description>
        <name>aet</name>
        <type>java.lang.String</type>
      </parameter>
      <parameter>
        <description>Availability ONLINE | NEARLINE | OFFLINE | UNAVAILABLE)
        </description>
        <name>availability</name>
        <type>java.lang.String</type>
      </parameter>
      <parameter>
        <description>Status (RW+ | RW | RO)
        </description>
        <name>status</name>
        <type>java.lang.String</type>
      </parameter>
      <parameter>
        <description>Associated User Info</description>
        <name>user info</name>
        <type>java.lang.String</type>
      </parameter>
   </operation>
   <operation impact="ACTION">
      <description> Link 2 File Systems. One file system can be linked
        to several previous, but only to one next file system.
      </description>
      <name>linkFileSystems</name>
      <parameter>
        <description>Directory/Mount Point of previous File System</description>
        <name>prevDirPath</name>
        <type>java.lang.String</type>
      </parameter>
      <parameter>
        <description>Directory/Mount Point of next File System</description>
        <name>nextDirPath</name>
        <type>java.lang.String</type>
      </parameter>
   </operation>
   <operation impact="ACTION">
      <description> Remove file system configuration. Will fail if there
        are already files stored on this file system.
      </description>
      <name>removeFileSystem</name>
      <parameter>
        <description>Directory/Mount Point of the File System</description>
        <name>dirPath</name>
        <type>java.lang.String</type>
      </parameter>
      <return-type>java.lang.String</return-type>
   </operation>
   <operation impact="ACTION">
      <description><![CDATA[Force check of status and free space of the current
        storage file system before the file storage of next object received by
        the Storage SCP - even if <i>CheckStorageFileSystemStatus</i> is
        disabled.]]>
      </description>
      <name>checkStorageFileSystem</name>
      <return-type>void</return-type>
   </operation>
   <operation impact="ACTION">
      <description>Select Storage File System</description>
      <name>selectStorageFileSystem</name>
      <return-type>org.dcm4chex.archive.ejb.interfaces.FileSystemDTO</return-type>
   </operation>
   <operation impact="ACTION">
      <description><![CDATA[Update specified AE Title to new value in AE
        Configuration and in all service attributes listed by attribute
        <b>OtherServiceAETitleAttributesToUpdate</b>. Return number of
        modified service attributes.]]>
      </description>
      <name>updateAETitle</name>
      <parameter>
        <description>AE Title to update.</description>
        <name>prevAET</name>
        <type>java.lang.String</type>
      </parameter>
      <parameter>
        <description>new AE Title.</description>
        <name>newAET</name>
        <type>java.lang.String</type>
      </parameter>
      <return-type>int</return-type>
   </operation>
   <operation impact="ACTION">
      <description><![CDATA[Update retrieve AET of this Node:
      <ol>
      <li>update the retrieve AET of file systems, associated to the current
        retrieve AET of this node</li>
      <li>update retrieveAETs of all instances, series and studies that have
        files on these filesystems</li>
      <li>update the entry for the retrieve AE in the AE Configuration</li>
      <li>update all service attributes listed by attribute
        <b>OtherServiceAETitleAttributesToUpdate</b></li>
      </ol>]]>
      </description>
      <name>updateRetrieveAETitle</name>
      <parameter>
        <description>New Retrieve AET</description>
        <name>retrieveAET</name>
        <type>java.lang.String</type>
      </parameter>
      <return-type>boolean</return-type>
   </operation>
   <operation impact="ACTION">
      <description><![CDATA[Update RetrieveAET of a file system.<br>
      		This method updates the RetrieveAETs of all instances, series and studies that have files on this filesystem!<br>
      		Return true if update was performed (when retrieveAET of FS has been changed)
      			]]>
      </description>
      <name>updateFileSystemRetrieveAET</name>
      <parameter>
        <description>Directory/Mount Point</description>
        <name>dirPath</name>
        <type>java.lang.String</type>
      </parameter>
      <parameter>
        <description>New Retrieve AET</description>
        <name>retrieveAET</name>
        <type>java.lang.String</type>
      </parameter>
      <return-type>boolean</return-type>
   </operation>
   <operation impact="ACTION">
      <description><![CDATA[Update derived fields on given filesystem.<br/>
      			Return number of updated instances.
      			]]>
      </description>
      <name>updateDerivedFields</name>
      <parameter>
        <description>Directory/Mount Point</description>
        <name>dirPath</name>
        <type>java.lang.String</type>
      </parameter>
      <parameter>
        <description>Update Retrieve AETs</description>
        <name>retrieveAET</name>
        <type>boolean</type>
      </parameter>
      <parameter>
        <description>Update Availability</description>
        <name>availability</name>
        <type>boolean</type>
      </parameter>
      <return-type>int</return-type>
   </operation>
   <operation impact="ACTION">
      <description><![CDATA[Update Status of a file system.<br/>
      Return true if the update was performed (= the file system status has 
      been changed)
      ]]>
      </description>
      <name>updateFileSystemStatus</name>
      <parameter>
        <description>Directory/Mount Point</description>
        <name>dirPath</name>
        <type>java.lang.String</type>
      </parameter>
      <parameter>
        <description>New File System Status. Enumerated values: "RW+", "RW", "RO"</description>
        <name>status</name>
        <type>java.lang.String</type>
      </parameter>
      <return-type>boolean</return-type>
   </operation>
   <operation impact="ACTION">
      <description><![CDATA[Update Availability of a file system.<br>
      		This method updates the availability of all instances, series and studies that have files on this filesystem!<br>
      		If DeleteFilesWhenUnavailable is enabled and the filessystem gets UNAVAILABLE, all files of this FS will be deleted!<br>
      		Return true if update/delete was performed (= availability of FS has been changed)
      			]]>
      </description>
      <name>updateFileSystemAvailability</name>
      <parameter>
        <description>Directory/Mount Point</description>
        <name>dirPath</name>
        <type>java.lang.String</type>
      </parameter>
      <parameter>
        <description>Availability of the filesystem. One of "ONLINE", "NEARLINE",
            "OFFLINE" or "UNAVAILABLE"</description>
        <name>availability</name>
        <type>java.lang.String</type>
      </parameter>
      <return-type>boolean</return-type>
   </operation>
   <operation impact="ACTION">
      <description><![CDATA[Delete all files for given (unavailable!) filesystem!<br>
      				Throws an IllegalStateException if filesystems availability is not UNAVAILABLE!
      			]]>
      </description>
      <name>deleteFilesOnFS</name>
      <parameter>
        <description>Directory/Mount Point</description>
        <name>dirPath</name>
        <type>java.lang.String</type>
      </parameter>
      <return-type>void</return-type>
   </operation>
   <operation impact="ACTION">
      <description><![CDATA[Check filesystem if files are available!<br>
      				Return 1 if all files are available, -1 if filesystem is empty and 0 if some files are not available!
      			]]>
      </description>
      <name>checkFilesOnFS</name>
      <parameter>
        <description>Directory/Mount Point</description>
        <name>dirPath</name>
        <type>java.lang.String</type>
      </parameter>
      <return-type>int</return-type>
   </operation>
   
   <operation impact="ACTION">
      <description>Purge unreferenced private Files</description>
      <name>purgePrivateFiles</name>
      <return-type>int</return-type>
   </operation>   
   <operation impact="ACTION">
      <description>Delete unreferenced files on specific directories or mount points.</description>
      <name>purgePrivateFiles</name>
      <parameter>
        <description>Directory path of filesystem.
        			Delete all directories or mount points if the parameter is null.
        </description>
        <name>purgeDirPath</name>
        <type>java.lang.String</type>
      </parameter>
      <return-type>int</return-type>
   </operation>   
   <operation impact="ACTION">
      <description>Delete Whole Study. Remove DB entries and all files (
      				try also deletion from RO Filesystems!)
      				Return number of files.
      </description>
      <name>deleteWholeStudy</name>
      <parameter>
        <description>StudyInstanceUID.
        </description>
        <name>studyIUID</name>
        <type>java.lang.String</type>
      </parameter>
      <parameter>
        <description>Delete empty patient?
        </description>
        <name>deleteEmptyPatient</name>
        <type>boolean</type>
      </parameter>
      <return-type>int</return-type>
   </operation>   
   <operation impact="INFO">
      <description>Locate SOP Instance. Return a File object, if the instance
      is locally available, or the hostname as String object if a file
      of the instance is located on another host.</description>
      <name>locateInstance</name>
      <parameter>
        <description>SOP Instance UID</description>
        <name>iuid</name>
        <type>java.lang.String</type>
      </parameter>
      <return-type>java.lang.Object</return-type>
   </operation>
   <operation impact="INFO">
      <description>Locate SOP Instance. Return a Dataset object, if the instance
      is locally available. The attributes of the dataset are updated with the attributes from database.</description>
      <name>getDatasourceOfInstance</name>
      <parameter>
        <description>SOP Instance UID</description>
        <name>iuid</name>
        <type>java.lang.String</type>
      </parameter>
      <return-type>org.dcm4che.net.DataSource</return-type>
   </operation>
   <operation impact="ACTION">
      <description>Free disk space by deleting old studies.
      Deletes all older files on study level that fullfill the freeDiskSpacePolicy.
      Returns the number of released studies.
      </description>
      <name>freeDiskSpace</name>
      <return-type>void</return-type>
   </operation>   
   <operation impact="ACTION">
      <description>Update value of attribute ExpectedDataVolumePerDay at midnight,
      if data volume received during last 24 hours exceeds its current value.
      </description>
      <name>adjustExpectedDataVolumePerDay</name>
      <return-type>java.lang.String</return-type>
   </operation>
   <operation impact="INFO">
      <description>get file size of study stored on the given file system.
      </description>
      <name>showStudySize</name>
      <parameter>
        <description>Study pk</description>
        <name>studyPk</name>
        <type>java.lang.Long</type>
      </parameter>
      <parameter>
        <description>File System pk</description>
        <name>fileSystemPk</name>
        <type>java.lang.Long</type>
      </parameter>
      <return-type>long</return-type>
   </operation>
   <operation impact="INFO">
      <description>Show total free available disk space on file systems
        associated with this node (Retrieve AET), and configured for
        storage (ONLINE, RW).
      </description>
      <name>showAvailableDiskSpace</name>
      <return-type>java.lang.String</return-type>
   </operation>   
   <operation impact="INFO">
      <description>Used internally.
      </description>
      <name>listLocalOnlineRWFileSystems</name>
      <return-type>[Lorg.dcm4chex.archive.ejb.interfaces.FileSystemDTO;</return-type>
   </operation>
   <operation impact="INFO">
      <description>Show all file systems in unsorted format given the availability and status. Use (-2) to skip the filtering.
      </description>
      <name>showAllFileSystems</name>
      <parameter>
        <description>File System Availability. Availabe availabilities: ONLINE(0), NEARLINE(1), OFFLINE(2), UNAVAILABLE(3). Use (-2) to skip this filter.</description>
        <name>availability</name>
        <type>int</type>
      </parameter>
      <parameter>
        <description>File System Status. Available statuses: PENDING(-1), RW+(0), RW(1), RO(2).Use (-2) to skip this filter.</description>
        <name>status</name>
        <type>int</type>
      </parameter>
      <return-type>java.lang.String</return-type>
   </operation>
</mbean>