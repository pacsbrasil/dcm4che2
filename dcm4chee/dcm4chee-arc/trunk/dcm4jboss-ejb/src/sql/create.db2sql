CREATE TABLE ae (
	aet          	VARCHAR(254) PRIMARY KEY NOT NULL,
	hostname     	VARCHAR(254) NOT NULL,
	port			INTEGER NOT NULL,
	cipher_suites  	VARCHAR(254)
);

CREATE SEQUENCE code_pk_seq;
CREATE TABLE code (
	pk          	INTEGER PRIMARY KEY NOT NULL,
	code_value     	VARCHAR(254) NOT NULL,
	code_designator	VARCHAR(254) NOT NULL,
	code_version   	VARCHAR(254),
	code_meaning   	VARCHAR(254)
);
CREATE INDEX code_value ON code(code_value,code_designator);

CREATE SEQUENCE patient_pk_seq;
CREATE TABLE patient (
	pk          	INTEGER PRIMARY KEY NOT NULL,
	pat_id         	VARCHAR(254),
	pat_id_issuer  	VARCHAR(254),
	pat_name    	VARCHAR(254),
	pat_name_up    	GENERATED ALWAYS AS (UPPER(pat_name)),
	pat_birthdate  	DATE,
	pat_sex		  	VARCHAR(254),
	pat_attrs		BLOB(2000)
);
CREATE INDEX pat_id ON patient(pat_id, pat_id_issuer);
CREATE INDEX pat_name ON patient(pat_name_up);
CREATE INDEX pat_birthdate ON patient(pat_birthdate);
CREATE INDEX pat_sex ON patient(pat_sex);

CREATE SEQUENCE study_pk_seq;
CREATE TABLE study (
	pk              INTEGER PRIMARY KEY  NOT NULL,
	patient_fk      INTEGER,
	study_iuid      VARCHAR(254) NOT NULL,
	study_id        VARCHAR(254),
	study_datetime	TIMESTAMP,
	accession_no	VARCHAR(254),
	ref_physician   VARCHAR(254),
	ref_physician_up GENERATED ALWAYS AS (UPPER(ref_physician)),
	num_series		INTEGER,
	num_instances	INTEGER,
	retrieve_aets	VARCHAR(254),
	study_attrs		BLOB(2000),
FOREIGN KEY (patient_fk) REFERENCES patient(pk)
);
CREATE INDEX patient_fk ON study(patient_fk);
CREATE UNIQUE INDEX study_iuid ON study(study_iuid);
CREATE INDEX study_id ON study(study_id);
CREATE INDEX study_datetime ON study(study_datetime);
CREATE INDEX accession_no ON study(accession_no);
CREATE INDEX ref_physician ON study(ref_physician_up);

CREATE SEQUENCE series_pk_seq;
CREATE TABLE series (
	pk              INTEGER PRIMARY KEY  NOT NULL,
	study_fk		INTEGER,
	series_iuid     VARCHAR(254) NOT NULL,
	series_no		VARCHAR(254),
	modality		VARCHAR(254),
	pps_start		TIMESTAMP,
	num_instances	INTEGER,
	retrieve_aets	VARCHAR(254),
	series_attrs	BLOB(2000),
FOREIGN KEY (study_fk) REFERENCES study(pk)
);
CREATE INDEX study_fk ON series(study_fk);
CREATE UNIQUE INDEX series_iuid ON series(series_iuid);
CREATE INDEX series_no ON series(series_no);
CREATE INDEX modality ON series(modality);
CREATE INDEX pps_datetime ON series(pps_start);

CREATE SEQUENCE instance_pk_seq;
CREATE TABLE instance (
	pk              INTEGER PRIMARY KEY  NOT NULL,
	series_fk		INTEGER,
	srcode_fk		INTEGER,
	sop_iuid		VARCHAR(254) NOT NULL,
	sop_cuid		VARCHAR(254) NOT NULL,
	inst_no			VARCHAR(254),
	sr_complete		VARCHAR(254),
	sr_verified		VARCHAR(254),
	retrieve_aets	VARCHAR(254),
	inst_attrs		BLOB(2000),
FOREIGN KEY (series_fk) REFERENCES series(pk),
FOREIGN KEY (srcode_fk) REFERENCES code(pk)
);
CREATE INDEX series_fk ON instance(series_fk);
CREATE UNIQUE INDEX sop_iuid ON instance(sop_iuid);
CREATE INDEX sop_cuid ON instance(sop_cuid);
CREATE INDEX inst_no ON instance(inst_no);
CREATE INDEX sr_complete ON instance(sr_complete);
CREATE INDEX sr_verified ON instance(sr_verified);




CREATE SEQUENCE file_pk_seq;
CREATE TABLE file (
	pk              INTEGER PRIMARY KEY  NOT NULL,
	instance_fk     INTEGER,
	filepath	VARCHAR(254) NOT NULL,
	file_tsuid      VARCHAR(254) NOT NULL,
	file_md5        VARCHAR(254),
	file_size       INTEGER,
	dirpath		VARCHAR(254) NOT NULL,
	retrieve_aets	VARCHAR(254) NOT NULL,
	
FOREIGN KEY (instance_fk)	REFERENCES instance(pk)

);
CREATE INDEX instance_fk ON file(instance_fk);
