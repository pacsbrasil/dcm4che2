CREATE TABLE uid (
	pk              INTEGER IDENTITY,
	uid             VARCHAR(256) NOT NULL
);
CREATE UNIQUE INDEX uid_uid ON uid(uid);

CREATE TABLE sop (
	pk              INTEGER IDENTITY,
	uid             VARCHAR(256) NOT NULL,
	cuid_fk			INTEGER,
FOREIGN KEY (cuid_fk) REFERENCES uid(pk)
);
CREATE UNIQUE INDEX sop_uid ON sop(uid);

CREATE TABLE patient (
	pk          	INTEGER IDENTITY,
	pid         	VARCHAR(256),
	pat_name    	VARCHAR(256)
);
CREATE INDEX patient_pid ON patient(pid);

CREATE TABLE study (
	pk              INTEGER IDENTITY,
	uid             VARCHAR(256) NOT NULL,
	patient_fk      INTEGER,
FOREIGN KEY (patient_fk) REFERENCES patient(pk)
);
CREATE UNIQUE INDEX study_uid ON study(uid);

CREATE TABLE series (
	pk              INTEGER IDENTITY,
	uid             VARCHAR(256) NOT NULL,
	study_fk		INTEGER,
FOREIGN KEY (study_fk) REFERENCES study(pk)
);
CREATE UNIQUE INDEX series_uid ON series(uid);

CREATE TABLE instance (
	pk              INTEGER IDENTITY,
	sop_fk			INTEGER,
	series_fk		INTEGER,
FOREIGN KEY (sop_fk)	REFERENCES sop(pk),
FOREIGN KEY (series_fk) REFERENCES series(pk)
);

CREATE TABLE media (
	pk              INTEGER IDENTITY,
	uid             VARCHAR(256) NOT NULL,
	label			VARCHAR(256),
	usable          BIGINT,
	used            BIGINT,
	status          INTEGER
);
CREATE UNIQUE INDEX media_uid ON media(uid);
CREATE INDEX media_status ON media(status);

CREATE TABLE file (
	pk              INTEGER IDENTITY,
	aet             VARCHAR(256),
	fpath			VARCHAR(256),
	md5             VARCHAR(256),
	filesize        INTEGER,
	status          INTEGER,
	sop_fk          INTEGER,
	tsuid_fk        INTEGER,
	media_fk        INTEGER,
FOREIGN KEY (sop_fk)	REFERENCES sop(pk),
FOREIGN KEY (tsuid_fk) 	REFERENCES uid(pk),
FOREIGN KEY (media_fk)  REFERENCES media(pk)
);
CREATE UNIQUE INDEX file_aet_fpath ON file(aet,fpath);
CREATE INDEX file_status ON file(status);
