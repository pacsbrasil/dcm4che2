CREATE TABLE ae (
	aet          	TEXT PRIMARY KEY,
	hostname     	TEXT NOT NULL,
	port			INTEGER NOT NULL,
	cipher_suites  	TEXT
);

CREATE TABLE move_order (
	pk          	SERIAL PRIMARY KEY,
	scheduled_time	TIMESTAMP,
	priority		INT NOT NULL,
	retrieve_aet    TEXT NOT NULL,
	move_dest	    TEXT NOT NULL,
	pat_id         	TEXT,
	study_iuids		TEXT,
	series_iuids	TEXT,
	sop_iuids		TEXT,
	failure_count	INT,
	failure_status	INT
);

CREATE TABLE code (
	pk          	SERIAL PRIMARY KEY,
	code_value     	TEXT NOT NULL,
	code_designator	TEXT NOT NULL,
	code_version   	TEXT,
	code_meaning   	TEXT
);
CREATE INDEX code_value ON code(code_value,code_designator);

CREATE TABLE patient (
	pk          	SERIAL PRIMARY KEY,
	pat_id         	TEXT,
	pat_id_issuer  	TEXT,
	pat_name    	TEXT,
	pat_birthdate  	DATE,
	pat_sex		  	TEXT,
	pat_attrs		BYTEA
);
CREATE INDEX pat_id ON patient(pat_id, pat_id_issuer);
CREATE INDEX pat_name ON patient(UPPER(pat_name));
CREATE INDEX pat_birthdate ON patient(pat_birthdate);
CREATE INDEX pat_sex ON patient(pat_sex);

CREATE TABLE study (
	pk              SERIAL PRIMARY KEY,
	patient_fk      INTEGER,
	study_iuid      TEXT NOT NULL,
	study_id        TEXT,
	study_datetime	TIMESTAMP,
	accession_no	TEXT,
	ref_physician   TEXT,
	num_series		INTEGER,
	num_instances	INTEGER,
	retrieve_aets	TEXT,
	study_attrs		BYTEA,
FOREIGN KEY (patient_fk) REFERENCES patient(pk)
);
CREATE INDEX patient_fk ON study(patient_fk);
CREATE UNIQUE INDEX study_iuid ON study(study_iuid);
CREATE INDEX study_id ON study(study_id);
CREATE INDEX study_datetime ON study(study_datetime);
CREATE INDEX accession_no ON study(accession_no);
CREATE INDEX ref_physician ON study(UPPER(ref_physician));

CREATE TABLE series (
	pk              SERIAL PRIMARY KEY,
	study_fk		INTEGER,
	series_iuid     TEXT NOT NULL,
	series_no		TEXT,
	modality		TEXT,
	pps_start		TIMESTAMP,
	num_instances	INTEGER,
	retrieve_aets	TEXT,
	series_attrs	BYTEA,
FOREIGN KEY (study_fk) REFERENCES study(pk)
);
CREATE INDEX study_fk ON series(study_fk);
CREATE UNIQUE INDEX series_iuid ON series(series_iuid);
CREATE INDEX series_no ON series(series_no);
CREATE INDEX modality ON series(modality);
CREATE INDEX pps_datetime ON series(pps_start);

CREATE TABLE instance (
	pk              SERIAL PRIMARY KEY,
	series_fk		INTEGER,
	srcode_fk		INTEGER,
	sop_iuid		TEXT NOT NULL,
	sop_cuid		TEXT NOT NULL,
	inst_no			TEXT,
	sr_complete		TEXT,
	sr_verified		TEXT,
	retrieve_aets	TEXT,
	inst_attrs		BYTEA,
FOREIGN KEY (series_fk) REFERENCES series(pk),
FOREIGN KEY (srcode_fk) REFERENCES code(pk)
);
CREATE INDEX series_fk ON instance(series_fk);
CREATE UNIQUE INDEX sop_iuid ON instance(sop_iuid);
CREATE INDEX sop_cuid ON instance(sop_cuid);
CREATE INDEX inst_no ON instance(inst_no);
CREATE INDEX sr_complete ON instance(sr_complete);
CREATE INDEX sr_verified ON instance(sr_verified);

CREATE TABLE file (
	pk              SERIAL PRIMARY KEY,
	instance_fk     INTEGER,
	retrieve_aets	TEXT NOT NULL,
	dirpath			TEXT NOT NULL,
	filepath		TEXT NOT NULL,
	file_tsuid      TEXT NOT NULL,
	file_md5        TEXT,
	file_size       INTEGER,
FOREIGN KEY (instance_fk)	REFERENCES instance(pk)
);
CREATE INDEX instance_fk ON file(instance_fk);
