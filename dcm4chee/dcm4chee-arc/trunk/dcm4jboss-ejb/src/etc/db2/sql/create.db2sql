CREATE DB tiani;
CONNECT TO tiani;

SET CURRENT SCHEMA TIANI;

CREATE SEQUENCE ae_pk_seq;
CREATE TABLE ae (
	pk          	INTEGER PRIMARY KEY NOT NULL,
	aet          	VARCHAR(254) NOT NULL,
	hostname     	VARCHAR(254) NOT NULL,
	port			INTEGER NOT NULL,
	cipher_suites  	VARCHAR(254)
);
CREATE UNIQUE INDEX aet ON ae(aet);

CREATE SEQUENCE code_pk_seq;
CREATE TABLE code (
	pk          	INTEGER PRIMARY KEY NOT NULL,
	code_value     	VARCHAR(254) NOT NULL,
	code_designator	VARCHAR(254) NOT NULL,
	code_version   	VARCHAR(254),
	code_meaning   	VARCHAR(254)
);
CREATE INDEX code_value ON code(code_value,code_designator);

CREATE SEQUENCE patient_pk_seq;
CREATE TABLE patient (
	pk          	INTEGER PRIMARY KEY NOT NULL,
	merge_fk        INTEGER,
	pat_id         	VARCHAR(254),
	pat_id_issuer  	VARCHAR(254),
	pat_name    	VARCHAR(254),
	pat_name_up    GENERATED ALWAYS AS (UPPER(pat_name)),
	pat_i_name    	VARCHAR(254),
	pat_p_name    	VARCHAR(254),
	pat_birthdate  	DATE,
	pat_sex		  	VARCHAR(254),
	created_time	TIMESTAMP,
	updated_time	TIMESTAMP,
	pat_attrs		BLOB(640000),
FOREIGN KEY (merge_fk) REFERENCES patient(pk)
);
CREATE INDEX pat_merge_fk ON patient(merge_fk);
CREATE UNIQUE INDEX pat_id ON patient(pat_id, pat_id_issuer);
CREATE INDEX pat_name ON patient(pat_name_up);
CREATE INDEX pat_i_name ON patient(pat_i_name);
CREATE INDEX pat_p_name ON patient(pat_p_name);
CREATE INDEX pat_birthdate ON patient(pat_birthdate);
CREATE INDEX pat_sex ON patient(pat_sex);

CREATE SEQUENCE study_pk_seq;
CREATE TABLE study (
	pk              INTEGER PRIMARY KEY  NOT NULL,
	patient_fk      INTEGER,
	study_iuid      VARCHAR(254) NOT NULL,
	study_id        VARCHAR(254),
	study_datetime	TIMESTAMP,
	accession_no	VARCHAR(254),
	ref_physician  VARCHAR(254),
	ref_physician_up GENERATED ALWAYS AS (UPPER(ref_physician)),
	ref_phys_i_name VARCHAR(254),
	ref_phys_p_name VARCHAR(254),
	study_desc      VARCHAR(254),
	study_desc_up   GENERATED ALWAYS AS (UPPER(study_desc)),
	study_status_id VARCHAR(254),
	mods_in_study	VARCHAR(254),
	num_series		INTEGER NOT NULL,
	num_instances	INTEGER NOT NULL,
	ext_retr_aet	VARCHAR(254),
	retrieve_aets	VARCHAR(254),
	fileset_iuid	VARCHAR(254),
	fileset_id		VARCHAR(254),
	availability	INTEGER NOT NULL,
	checked_time	TIMESTAMP,
	created_time	TIMESTAMP,
	updated_time	TIMESTAMP,
	study_attrs		BLOB(640000),
FOREIGN KEY (patient_fk) REFERENCES patient(pk)
);
CREATE INDEX patient_fk ON study(patient_fk);
CREATE UNIQUE INDEX study_iuid ON study(study_iuid);
CREATE INDEX study_id ON study(study_id);
CREATE INDEX study_datetime ON study(study_datetime);
CREATE INDEX accession_no ON study(accession_no);
CREATE INDEX ref_physician ON study(ref_physician_up);
CREATE INDEX ref_phys_i_name ON study(ref_phys_i_name);
CREATE INDEX ref_phys_p_name ON study(ref_phys_p_name);
CREATE INDEX study_desc ON study(study_desc_up);
CREATE INDEX study_status_id ON study(study_status_id);
CREATE INDEX study_checked ON study(checked_time);
CREATE INDEX study_created ON study(created_time);

CREATE TABLE rel_study_pcode (
	study_fk       INTEGER,
	pcode_fk       INTEGER,
FOREIGN KEY (study_fk) REFERENCES study(pk),
FOREIGN KEY (pcode_fk) REFERENCES code(pk)
);
CREATE INDEX pcode_study_fk ON rel_study_pcode(study_fk);
CREATE INDEX study_pcode_fk ON rel_study_pcode(pcode_fk);


CREATE SEQUENCE mpps_pk_seq;
CREATE TABLE mpps (
	pk				INTEGER PRIMARY KEY NOT NULL,
	patient_fk		INTEGER,
	drcode_fk		INTEGER,
	mpps_iuid		VARCHAR(254) NOT NULL,
	pps_start		TIMESTAMP,
	station_aet		VARCHAR(254),
	modality	    VARCHAR(254),
	accession_no    VARCHAR(254),
	mpps_status		INTEGER NOT NULL,
	created_time	TIMESTAMP,
	updated_time	TIMESTAMP,
	mpps_attrs		BLOB(640000),
FOREIGN KEY (patient_fk) REFERENCES patient(pk),
FOREIGN KEY (drcode_fk) REFERENCES code(pk)
);
CREATE UNIQUE INDEX mpps_iuid ON mpps (mpps_iuid);
CREATE INDEX mpps_patient_fk ON mpps(patient_fk);
CREATE INDEX mpps_pps_start ON mpps (pps_start);
CREATE INDEX mpps_station_aet ON mpps (station_aet);
CREATE INDEX mpps_modality ON mpps (modality);
CREATE INDEX mpps_accession_no ON mpps (accession_no);	

CREATE SEQUENCE series_pk_seq;
CREATE TABLE series (
	pk              INTEGER PRIMARY KEY  NOT NULL,
	study_fk		INTEGER,
	mpps_fk			INTEGER,
	series_iuid     VARCHAR(254) NOT NULL,
	series_no		VARCHAR(254),
	modality		VARCHAR(254),
	institution		VARCHAR(254),
	institution_up  GENERATED ALWAYS AS (UPPER(institution)),	
	department		VARCHAR(254),
	department_up   GENERATED ALWAYS AS (UPPER(department)),
	pps_start		TIMESTAMP,
	pps_iuid		VARCHAR(254),
	num_instances	INTEGER,
	src_aet			VARCHAR(254),
	ext_retr_aet	VARCHAR(254),
	retrieve_aets	VARCHAR(254),
	fileset_iuid	VARCHAR(254),
	fileset_id		VARCHAR(254),
	availability	INTEGER NOT NULL,
	created_time	TIMESTAMP,
	updated_time	TIMESTAMP,
	series_attrs	BLOB(640000),
FOREIGN KEY (study_fk) REFERENCES study(pk),
FOREIGN KEY (mpps_fk) REFERENCES mpps(pk)
);
CREATE INDEX study_fk ON series(study_fk);
CREATE INDEX series_mpps_fk ON series(mpps_fk);
CREATE UNIQUE INDEX series_iuid ON series(series_iuid);
CREATE INDEX series_no ON series(series_no);
CREATE INDEX modality ON series(modality);
CREATE INDEX institution ON series(institution_up);
CREATE INDEX department ON series(department);
CREATE INDEX series_pps_start ON series(pps_start);
CREATE INDEX series_pps_iuid ON series(pps_iuid);
CREATE INDEX series_src_aet ON series(src_aet);
CREATE INDEX series_created ON series(created_time);


CREATE SEQUENCE series_req_pk_seq;
CREATE TABLE series_req (
	pk              INTEGER PRIMARY KEY NOT NULL,
	series_fk       INTEGER,
	req_proc_id     VARCHAR(254),
	sps_id          VARCHAR(254),
FOREIGN KEY (series_fk) REFERENCES series(pk)
);
CREATE INDEX ser_req_series_fk ON series_req(series_fk);
CREATE INDEX ser_req_proc_id ON series_req(req_proc_id);
CREATE INDEX ser_req_sps_id ON series_req(sps_id);	

CREATE SEQUENCE media_pk_seq;
CREATE TABLE media (
	pk          		INTEGER PRIMARY KEY NOT NULL,
	fileset_iuid		VARCHAR(254) NOT NULL, 
	fileset_id			VARCHAR(254),
	media_rq_iuid		VARCHAR(254),
	media_status		INTEGER NOT NULL,
	media_status_info	VARCHAR(254),
	media_usage			BIGINT NOT NULL,
	created_time		TIMESTAMP,
	updated_time		TIMESTAMP
);
CREATE UNIQUE INDEX fileset_iuid ON media(fileset_iuid);
CREATE INDEX media_status ON media(media_status);

CREATE SEQUENCE instance_pk_seq;
CREATE TABLE instance (
	pk             		INTEGER PRIMARY KEY  NOT NULL,
	series_fk			INTEGER,
	srcode_fk			INTEGER,
	media_fk			INTEGER,
	sop_iuid			VARCHAR(254) NOT NULL,
	sop_cuid			VARCHAR(254) NOT NULL,
	inst_no				VARCHAR(254),
	content_datetime	TIMESTAMP,
	sr_complete			VARCHAR(254),
	sr_verified			VARCHAR(254),
	ext_retr_aet		VARCHAR(254),
	retrieve_aets		VARCHAR(254),
	availability		INTEGER NOT NULL,
	commitment			SMALLINT NOT NULL,
	created_time		TIMESTAMP,
	updated_time		TIMESTAMP,
	inst_attrs			BLOB(640000),
FOREIGN KEY (series_fk)	REFERENCES series(pk),
FOREIGN KEY (srcode_fk)	REFERENCES code(pk),
FOREIGN KEY (media_fk)	REFERENCES media(pk)
);
CREATE INDEX series_fk ON instance(series_fk);
CREATE INDEX srcode_fk ON instance(srcode_fk);
CREATE INDEX media_fk ON instance(media_fk);
CREATE UNIQUE INDEX sop_iuid ON instance(sop_iuid);
CREATE INDEX sop_cuid ON instance(sop_cuid);
CREATE INDEX inst_no ON instance(inst_no);
CREATE INDEX content_datetime ON instance(content_datetime);
CREATE INDEX sr_complete ON instance(sr_complete);
CREATE INDEX sr_verified ON instance(sr_verified);
CREATE INDEX ext_retr_aet ON instance(ext_retr_aet);
CREATE INDEX commitment ON instance(commitment);


CREATE SEQUENCE filesystem_pk_seq;
CREATE TABLE filesystem (
	pk              INTEGER PRIMARY KEY NOT NULL,
	next_fk         INTEGER,
	dirpath			VARCHAR(254) NOT NULL,
	retrieve_aet	VARCHAR(254) NOT NULL,
	availability	INTEGER NOT NULL,
	fs_status		INTEGER NOT NULL,
	user_info		VARCHAR(254),
FOREIGN KEY (next_fk) REFERENCES filesystem(pk)
);
CREATE UNIQUE INDEX fs_dirpath ON filesystem(dirpath);
CREATE INDEX fs_next_fk ON filesystem(next_fk);
CREATE INDEX fs_retrieve_aet ON filesystem(retrieve_aet);
CREATE INDEX fs_availability ON filesystem(availability);
CREATE INDEX fs_status ON filesystem(fs_status);

CREATE SEQUENCE study_on_fs_pk_seq;
CREATE TABLE study_on_fs (
	pk              INTEGER PRIMARY KEY NOT NULL,
	study_fk		INTEGER,
	filesystem_fk	INTEGER,
	access_time		TIMESTAMP NOT NULL,
FOREIGN KEY (study_fk) REFERENCES study(pk),
FOREIGN KEY (filesystem_fk) REFERENCES filesystem(pk)
);
CREATE UNIQUE INDEX i_study_on_fs ON study_on_fs(study_fk, filesystem_fk);
CREATE INDEX fs_of_study ON study_on_fs(filesystem_fk);
CREATE INDEX access_time ON study_on_fs(access_time);


CREATE SEQUENCE files_pk_seq;
CREATE TABLE files (
	pk              INTEGER PRIMARY KEY  NOT NULL,
	instance_fk     INTEGER,
	filesystem_fk	INTEGER,
	filepath		VARCHAR(254) NOT NULL,
	file_tsuid      VARCHAR(254) NOT NULL,
	file_md5        VARCHAR(254),
	file_size       INTEGER,
	file_status     INTEGER,
	md5_check_time	TIMESTAMP,
	created_time	TIMESTAMP,
FOREIGN KEY (instance_fk)	REFERENCES instance(pk),
FOREIGN KEY (filesystem_fk)	REFERENCES filesystem(pk)
);
CREATE INDEX instance_fk ON files(instance_fk);
CREATE INDEX filesystem_fk ON files(filesystem_fk);
CREATE INDEX file_tsuid ON files(file_tsuid);
CREATE INDEX md5_check_time ON files(md5_check_time);
CREATE INDEX file_created ON files(created_time);
CREATE INDEX file_status ON files(file_status);

CREATE SEQUENCE mwl_item_pk_seq;
CREATE TABLE mwl_item (
	pk          	INTEGER PRIMARY KEY NOT NULL,
	patient_fk      INTEGER,
	sps_status      INTEGER,
	sps_id			VARCHAR(254),
	start_datetime	TIMESTAMP NOT NULL,
	station_aet     VARCHAR(254) NOT NULL,
	modality	    VARCHAR(254) NOT NULL,
	perf_physician VARCHAR(254),
	perf_physician_up GENERATED ALWAYS AS (UPPER(perf_physician)),
	perf_phys_i_name  VARCHAR(254),
	perf_phys_p_name  VARCHAR(254),
	req_proc_id    	VARCHAR(254) NOT NULL,
	accession_no	VARCHAR(254),
	study_iuid      VARCHAR(254) NOT NULL,
	created_time	TIMESTAMP,
	updated_time	TIMESTAMP,
	item_attrs		BLOB(640000),
FOREIGN KEY (patient_fk) REFERENCES patient(pk)
);
CREATE INDEX mwl_patient_fk ON mwl_item(patient_fk);
CREATE INDEX sps_status ON mwl_item(sps_status);
CREATE UNIQUE INDEX mwl_sps_id ON mwl_item(sps_id);
CREATE INDEX mwl_start_time ON mwl_item(start_datetime);
CREATE INDEX mwl_station_aet ON mwl_item(station_aet);
CREATE INDEX mwl_modality ON mwl_item(modality);
CREATE INDEX mwl_perf_physician ON mwl_item(perf_physician_up);
CREATE INDEX mwl_perf_phys_i_name ON mwl_item(perf_phys_i_name);
CREATE INDEX mwl_perf_phys_p_name ON mwl_item(perf_phys_p_name);
CREATE INDEX mwl_req_proc_id ON mwl_item(req_proc_id);
CREATE INDEX mwl_accession_no ON mwl_item(accession_no);
CREATE INDEX mwl_study_iuid ON mwl_item(study_iuid);


CREATE SEQUENCE gpsps_pk_seq;
CREATE TABLE gpsps (
	pk              INTEGER PRIMARY KEY NOT NULL,
	patient_fk      INTEGER,
	code_fk         INTEGER,
	gpsps_iuid      VARCHAR(254) NOT NULL,
	gpsps_tuid      VARCHAR(254),
	start_datetime  TIMESTAMP NOT NULL,
	end_datetime    TIMESTAMP,
	gpsps_status    INTEGER,
	gpsps_prior     INTEGER,
	in_availability INTEGER,
	item_attrs      BLOB(640000),
FOREIGN KEY (patient_fk) REFERENCES patient(pk),
FOREIGN KEY (code_fk) REFERENCES code(pk)
);
CREATE INDEX gpsps_patient_fk ON gpsps(patient_fk);
CREATE INDEX gpsps_code_fk ON gpsps(code_fk);
CREATE UNIQUE INDEX gpsps_iuid ON gpsps(gpsps_iuid);
CREATE INDEX gpsps_tuid ON gpsps(gpsps_tuid);
CREATE INDEX gpsps_start_time ON gpsps(start_datetime);
CREATE INDEX gpsps_end_time ON gpsps(end_datetime);
CREATE INDEX gpsps_status ON gpsps(gpsps_status);
CREATE INDEX gpsps_prior ON gpsps(gpsps_prior);
CREATE INDEX in_availability ON gpsps(in_availability);

CREATE TABLE rel_gpsps_appcode (
	gpsps_fk       INTEGER,
	appcode_fk     INTEGER,
FOREIGN KEY (gpsps_fk) REFERENCES gpsps(pk),
FOREIGN KEY (appcode_fk) REFERENCES code(pk)
);
CREATE INDEX appcode_gpsps_fk ON rel_gpsps_appcode(gpsps_fk);
CREATE INDEX gpsps_appcode_fk ON rel_gpsps_appcode(appcode_fk);

CREATE TABLE rel_gpsps_devname (
	gpsps_fk       INTEGER,
	devname_fk     INTEGER,
FOREIGN KEY (gpsps_fk) REFERENCES gpsps(pk),
FOREIGN KEY (devname_fk) REFERENCES code(pk)
);
CREATE INDEX devname_gpsps_fk ON rel_gpsps_devname(gpsps_fk);
CREATE INDEX gpsps_devname_fk ON rel_gpsps_devname(devname_fk);

CREATE TABLE rel_gpsps_devclass (
	gpsps_fk       INTEGER,
	devclass_fk     INTEGER,
FOREIGN KEY (gpsps_fk) REFERENCES gpsps(pk),
FOREIGN KEY (devclass_fk) REFERENCES code(pk)
);
CREATE INDEX devclass_gpsps_fk ON rel_gpsps_devclass(gpsps_fk);
CREATE INDEX gpsps_devclass_fk ON rel_gpsps_devclass(devclass_fk);

CREATE TABLE rel_gpsps_devloc (
	gpsps_fk       INTEGER,
	devloc_fk  INTEGER,
FOREIGN KEY (gpsps_fk) REFERENCES gpsps(pk),
FOREIGN KEY (devloc_fk) REFERENCES code(pk)
);
CREATE INDEX devloc_gpsps_fk ON rel_gpsps_devloc(gpsps_fk);
CREATE INDEX gpsps_devloc_fk ON rel_gpsps_devloc(devloc_fk);

CREATE SEQUENCE gpsps_perf_pk_seq;
CREATE TABLE gpsps_perf (
	pk                 INTEGER PRIMARY KEY NOT NULL,
	gpsps_fk           INTEGER,
	code_fk            INTEGER,
	human_perf_name     VARCHAR(254),
	human_perf_name_up GENERATED ALWAYS AS (UPPER(human_perf_name)),	
	hum_perf_i_name    VARCHAR(254),
	hum_perf_p_name    VARCHAR(254),
FOREIGN KEY (gpsps_fk) REFERENCES gpsps(pk),
FOREIGN KEY (code_fk) REFERENCES code(pk)
);
CREATE INDEX gpsps_perf_sps_fk ON gpsps_perf(gpsps_fk);
CREATE INDEX gpsps_perf_code_fk ON gpsps_perf(code_fk);
CREATE INDEX gpsps_perf_name ON gpsps_perf(human_perf_name_up);
CREATE INDEX gpsps_perf_i_name ON gpsps_perf(hum_perf_i_name);
CREATE INDEX gpsps_perf_p_name ON gpsps_perf(hum_perf_p_name);

CREATE SEQUENCE gpsps_req_pk_seq;
CREATE TABLE gpsps_req (
	pk          	INTEGER PRIMARY KEY NOT NULL,
	gpsps_fk        INTEGER,
	req_proc_id		VARCHAR(254),
	accession_no	VARCHAR(254),
FOREIGN KEY (gpsps_fk) REFERENCES gpsps(pk)
);
CREATE INDEX gpsps_req_gpsps_fk ON gpsps_req(gpsps_fk);
CREATE INDEX gpsps_req_proc_id ON gpsps_req(req_proc_id);
CREATE INDEX gpsps_req_acc_no ON gpsps_req(accession_no);	

CREATE SEQUENCE hp_pk_seq;
CREATE TABLE hp (
	pk              INTEGER PRIMARY KEY NOT NULL,
	user_fk         INTEGER,
	hp_iuid         VARCHAR(254) NOT NULL,
	hp_cuid         VARCHAR(254),
	hp_name         VARCHAR(254),
	hp_group        VARCHAR(254),
	hp_level        INTEGER,
	num_priors      INTEGER,
	num_screens     INTEGER,
	hp_attrs        BLOB(640000),
FOREIGN KEY (user_fk) REFERENCES code(pk)
);
CREATE INDEX hp_user_fk ON hp(user_fk);
CREATE UNIQUE INDEX hp_iuid ON hp(hp_iuid);
CREATE INDEX hp_cuid ON hp(hp_cuid);
CREATE INDEX hp_name ON hp(hp_name);
CREATE INDEX hp_level ON hp(hp_level);
CREATE INDEX num_priors ON hp(num_priors);
CREATE INDEX num_screens ON hp(num_screens);

CREATE SEQUENCE hpdef_pk_seq;
CREATE TABLE hpdef (
	pk              INTEGER PRIMARY KEY NOT NULL,
	hp_fk           INTEGER,
	modality        VARCHAR(254),
	laterality      VARCHAR(254),
FOREIGN KEY (hp_fk) REFERENCES hp(pk)
);
CREATE INDEX hp_fk ON hpdef(hp_fk);
CREATE INDEX hpdef_modality ON hpdef(modality);
CREATE INDEX hpdef_laterality ON hpdef(laterality);

CREATE TABLE rel_hpdef_region (
	hpdef_fk        INTEGER,
	region_fk       INTEGER,
FOREIGN KEY (hpdef_fk) REFERENCES hpdef(pk),
FOREIGN KEY (region_fk) REFERENCES code(pk)
);
CREATE INDEX region_hpdef_fk ON rel_hpdef_region(hpdef_fk);
CREATE INDEX hpdef_region_fk ON rel_hpdef_region(region_fk);

CREATE TABLE rel_hpdef_proc (
	hpdef_fk        INTEGER,
	proc_fk         INTEGER,
FOREIGN KEY (hpdef_fk) REFERENCES hpdef(pk),
FOREIGN KEY (proc_fk) REFERENCES code(pk)
);
CREATE INDEX proc_hpdef_fk ON rel_hpdef_proc(hpdef_fk);
CREATE INDEX hpdef_proc_fk ON rel_hpdef_proc(proc_fk);

CREATE TABLE rel_hpdef_reason (
	hpdef_fk        INTEGER,
	reason_fk       INTEGER,
FOREIGN KEY (hpdef_fk) REFERENCES hpdef(pk),
FOREIGN KEY (reason_fk) REFERENCES code(pk)
);
CREATE INDEX reason_hpdef_fk ON rel_hpdef_reason(hpdef_fk);
CREATE INDEX hpdef_reason_fk ON rel_hpdef_reason(reason_fk);

CREATE SEQUENCE priv_patient_pk_seq;
CREATE TABLE priv_patient (
	pk          	INTEGER PRIMARY KEY NOT NULL,
	priv_type		INTEGER NOT NULL,
	pat_id         	VARCHAR(254),
	pat_id_issuer  	VARCHAR(254),
	pat_attrs		BLOB(640000)
);
CREATE INDEX priv_pat_id ON priv_patient(pat_id, pat_id_issuer);
CREATE INDEX priv_pat_type ON priv_patient(priv_type);

CREATE SEQUENCE priv_study_pk_seq;
CREATE TABLE priv_study (
	pk              INTEGER PRIMARY KEY NOT NULL,
	patient_fk      INTEGER,
	priv_type		INTEGER NOT NULL,
	study_iuid      VARCHAR(254) NOT NULL,
	study_attrs		BLOB(640000),
FOREIGN KEY (patient_fk) REFERENCES priv_patient(pk)
);
CREATE INDEX priv_patient_fk ON priv_study(patient_fk);
CREATE INDEX priv_study_type ON priv_study(priv_type);
CREATE INDEX priv_study_iuid ON priv_study(study_iuid);

CREATE SEQUENCE priv_series_pk_seq;
CREATE TABLE priv_series (
	pk              INTEGER PRIMARY KEY NOT NULL,
	study_fk		INTEGER,
	priv_type		INTEGER NOT NULL,
	series_iuid     VARCHAR(254) NOT NULL,
	series_attrs	BLOB(640000),
FOREIGN KEY (study_fk) REFERENCES priv_study(pk)
);
CREATE INDEX priv_study_fk ON priv_series(study_fk);
CREATE INDEX priv_series_type ON priv_series(priv_type);
CREATE INDEX priv_series_iuid ON priv_series(series_iuid);


CREATE SEQUENCE priv_instance_pk_seq;
CREATE TABLE priv_instance (
	pk             	INTEGER PRIMARY KEY NOT NULL,
	series_fk		INTEGER,
	priv_type		INTEGER NOT NULL,
	sop_iuid		VARCHAR(254) NOT NULL,
	inst_attrs		BLOB(640000),
FOREIGN KEY (series_fk) REFERENCES priv_series(pk)
);
CREATE INDEX priv_series_fk ON priv_instance(series_fk);
CREATE INDEX priv_inst_type ON priv_instance(priv_type);
CREATE INDEX priv_sop_iuid ON priv_instance(sop_iuid);

CREATE SEQUENCE priv_file_pk_seq;
CREATE TABLE priv_file (
	pk              INTEGER PRIMARY KEY NOT NULL,
	instance_fk     INTEGER,
	filesystem_fk   INTEGER,
	filepath		VARCHAR(254) NOT NULL,
	file_tsuid      VARCHAR(254) NOT NULL,
	file_md5        VARCHAR(254),
	file_size       INTEGER,
	file_status     INTEGER,
FOREIGN KEY (instance_fk)	REFERENCES priv_instance(pk),
FOREIGN KEY (filesystem_fk)	REFERENCES filesystem(pk)
);
CREATE INDEX priv_instance_fk ON priv_file(instance_fk);
CREATE INDEX priv_fs_fk ON priv_file(filesystem_fk);



CREATE SEQUENCE device_pk_seq;
CREATE TABLE device (
	pk          	INTEGER PRIMARY KEY NOT NULL,
	station_name    VARCHAR(254) NOT NULL,
	station_aet     VARCHAR(254) NOT NULL,
	modality		VARCHAR(254) NOT NULL
);
CREATE UNIQUE INDEX station_name ON device(station_name);

CREATE TABLE rel_dev_proto (
	device_fk      INTEGER,
	prcode_fk      INTEGER,
FOREIGN KEY (device_fk) REFERENCES device(pk),
FOREIGN KEY (prcode_fk) REFERENCES code(pk)
);
CREATE INDEX device_fk ON rel_dev_proto(device_fk);
CREATE INDEX prcode_fk ON rel_dev_proto(prcode_fk);

CREATE SEQUENCE audit_record_pk_seq;
CREATE TABLE audit_record(
	pk          	INTEGER PRIMARY KEY  NOT NULL,
	msg_type 		VARCHAR(254),
	host_name 		VARCHAR(254),
	host_name_up    GENERATED ALWAYS AS (UPPER(host_name)),	
	time_stamp 		TIMESTAMP,
	aet 			VARCHAR(254),
	user_name 		VARCHAR(254),
	patient_name	VARCHAR(254),
	patient_name_up GENERATED ALWAYS AS (UPPER(patient_name)),	
	patient_id 		VARCHAR(254),
	xml_data 		CLOB(640000)
);
CREATE INDEX arr_msg_type ON audit_record(msg_type);
CREATE INDEX arr_host_name ON audit_record(host_name_up);
CREATE INDEX arr_time_stamp ON audit_record(time_stamp);
CREATE INDEX arr_aet ON audit_record(aet);
CREATE INDEX arr_user_name ON audit_record(user_name);
CREATE INDEX arr_patient_name ON audit_record(patient_name_up);
CREATE INDEX arr_patient_id ON audit_record(patient_id);

CREATE TABLE users(
	user_id		VARCHAR(254) PRIMARY KEY NOT NULL,
	passwd 		VARCHAR(254)
);
CREATE TABLE roles(
	user_id		VARCHAR(254) NOT NULL,
	roles	 	VARCHAR(254),
FOREIGN KEY (user_id) REFERENCES users(user_id)
);
CREATE INDEX user_id ON roles(user_id);

INSERT INTO users VALUES('admin','admin');
INSERT INTO roles VALUES('admin','JBossAdmin');
INSERT INTO roles VALUES('admin','WebAdmin');
INSERT INTO roles VALUES('admin','WebUser');
INSERT INTO roles VALUES('admin','McmUser');
INSERT INTO roles VALUES('admin','arr-user');

INSERT INTO users VALUES('user','user');
INSERT INTO roles VALUES('user','WebUser');
INSERT INTO roles VALUES('user','McmUser');

INSERT INTO ae (pk,aet,hostname,port)
	VALUES(NEXTVAL FOR ae_pk_seq,'DCM4JBOSS','localhost',11112);
INSERT INTO filesystem (pk,dirpath,retrieve_aet,availability,fs_status)
	VALUES(NEXTVAL FOR filesystem_pk_seq.nextval,'archive','DCM4JBOSS',0,0);

GRANT ALL PRIVILEGES ON TABLE ae TO USER tiani;
GRANT ALL PRIVILEGES ON TABLE code TO USER tiani;
GRANT ALL PRIVILEGES ON TABLE patient TO USER tiani;
GRANT ALL PRIVILEGES ON TABLE study TO USER tiani;
GRANT ALL PRIVILEGES ON TABLE rel_study_pcode TO USER tiani;
GRANT ALL PRIVILEGES ON TABLE mpps TO USER tiani;
GRANT ALL PRIVILEGES ON TABLE series TO USER tiani;
GRANT ALL PRIVILEGES ON TABLE series_req TO USER tiani;
GRANT ALL PRIVILEGES ON TABLE media TO USER tiani;
GRANT ALL PRIVILEGES ON TABLE instance TO USER tiani;
GRANT ALL PRIVILEGES ON TABLE filesystem TO USER tiani;
GRANT ALL PRIVILEGES ON TABLE study_on_fs TO USER tiani;
GRANT ALL PRIVILEGES ON TABLE files TO USER tiani;
GRANT ALL PRIVILEGES ON TABLE mwl_item TO USER tiani;
GRANT ALL PRIVILEGES ON TABLE gpsps TO USER tiani;
GRANT ALL PRIVILEGES ON TABLE rel_gpsps_appcode TO USER tiani;
GRANT ALL PRIVILEGES ON TABLE rel_gpsps_devname TO USER tiani;
GRANT ALL PRIVILEGES ON TABLE rel_gpsps_devclass TO USER tiani;
GRANT ALL PRIVILEGES ON TABLE rel_gpsps_devloc TO USER tiani;
GRANT ALL PRIVILEGES ON TABLE gpsps_perf TO USER tiani;
GRANT ALL PRIVILEGES ON TABLE gpsps_req TO USER tiani;
GRANT ALL PRIVILEGES ON TABLE priv_patient TO USER tiani;
GRANT ALL PRIVILEGES ON TABLE priv_study TO USER tiani;
GRANT ALL PRIVILEGES ON TABLE priv_series TO USER tiani;
GRANT ALL PRIVILEGES ON TABLE priv_instance TO USER tiani;
GRANT ALL PRIVILEGES ON TABLE priv_file TO USER tiani;
GRANT ALL PRIVILEGES ON TABLE device TO USER tiani;
GRANT ALL PRIVILEGES ON TABLE rel_dev_proto TO USER tiani;
GRANT ALL PRIVILEGES ON TABLE audit_record TO USER tiani;
GRANT ALL PRIVILEGES ON TABLE users TO USER tiani;
GRANT ALL PRIVILEGES ON TABLE roles TO USER tiani;

GRANT USAGE ON SEQUENCE ae_pk_seq TO USER tiani;
GRANT USAGE ON SEQUENCE code_pk_seq TO USER tiani;
GRANT USAGE ON SEQUENCE patient_pk_seq TO USER tiani;
GRANT USAGE ON SEQUENCE study_pk_seq TO USER tiani;
GRANT USAGE ON SEQUENCE mpps_pk_seq TO USER tiani;
GRANT USAGE ON SEQUENCE series_pk_seq TO USER tiani;
GRANT USAGE ON SEQUENCE series_req_pk_seq TO USER tiani;
GRANT USAGE ON SEQUENCE media_pk_seq TO USER tiani;
GRANT USAGE ON SEQUENCE instance_pk_seq TO USER tiani;
GRANT USAGE ON SEQUENCE filesystem_pk_seq TO USER tiani;
GRANT USAGE ON SEQUENCE study_on_fs_pk_seq TO USER tiani;
GRANT USAGE ON SEQUENCE files_pk_seq TO USER tiani;
GRANT USAGE ON SEQUENCE mwl_item_pk_seq TO USER tiani;
GRANT USAGE ON SEQUENCE gpsps_pk_seq TO USER tiani;
GRANT USAGE ON SEQUENCE gpsps_perf_pk_seq TO USER tiani;
GRANT USAGE ON SEQUENCE gpsps_req_pk_seq TO USER tiani;
GRANT USAGE ON SEQUENCE priv_patient_pk_seq TO USER tiani;
GRANT USAGE ON SEQUENCE priv_study_pk_seq TO USER tiani;
GRANT USAGE ON SEQUENCE priv_series_pk_seq TO USER tiani;
GRANT USAGE ON SEQUENCE priv_instance_pk_seq TO USER tiani;
GRANT USAGE ON SEQUENCE priv_file_pk_seq TO USER tiani;
GRANT USAGE ON SEQUENCE device_pk_seq TO USER tiani;
GRANT USAGE ON SEQUENCE audit_record_pk_seq TO USER tiani;

UPDATE DB CFG USING APPLHEAPSZ 1536;

TERMINATE;
