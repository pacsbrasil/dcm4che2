CREATE MEMORY TABLE AE(PK INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 0)  NOT NULL PRIMARY KEY,AET VARCHAR(256) NOT NULL,HOSTNAME VARCHAR(256) NOT NULL,PORT INTEGER NOT NULL,CIPHER_SUITES VARCHAR(256))
CREATE UNIQUE INDEX AET ON AE(AET)
CREATE MEMORY TABLE CODE(PK INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 0)  NOT NULL PRIMARY KEY,CODE_VALUE VARCHAR(256) NOT NULL,CODE_DESIGNATOR VARCHAR(256) NOT NULL,CODE_VERSION VARCHAR(256),CODE_MEANING VARCHAR(256))
CREATE INDEX CODE_VALUE ON CODE(CODE_VALUE,CODE_DESIGNATOR)
CREATE MEMORY TABLE PATIENT(PK INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 0)  NOT NULL PRIMARY KEY,MERGE_FK INTEGER,PAT_ID VARCHAR(256),PAT_ID_ISSUER VARCHAR(256),PAT_NAME VARCHAR_IGNORECASE(256),PAT_BIRTHDATE DATE,PAT_SEX VARCHAR(256),HIDDEN BOOLEAN NOT NULL,CREATED_TIME TIMESTAMP,UPDATED_TIME TIMESTAMP,PAT_ATTRS VARBINARY,CONSTRAINT SYS_FK_1 FOREIGN KEY(MERGE_FK) REFERENCES PATIENT(PK))
CREATE INDEX PAT_MERGE_FK ON PATIENT(MERGE_FK)
CREATE INDEX PAT_ID ON PATIENT(PAT_ID,PAT_ID_ISSUER)
CREATE INDEX PAT_NAME ON PATIENT(PAT_NAME)
CREATE INDEX PAT_BIRTHDATE ON PATIENT(PAT_BIRTHDATE)
CREATE INDEX PAT_SEX ON PATIENT(PAT_SEX)
CREATE INDEX PAT_HIDDEN ON PATIENT(HIDDEN)
CREATE MEMORY TABLE STUDY(PK INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 0)  NOT NULL PRIMARY KEY,PATIENT_FK INTEGER,STUDY_IUID VARCHAR(256) NOT NULL,STUDY_ID VARCHAR(256),STUDY_DATETIME TIMESTAMP,ACCESSION_NO VARCHAR(256),REF_PHYSICIAN VARCHAR_IGNORECASE(256),MODS_IN_STUDY VARCHAR(256),NUM_SERIES INTEGER NOT NULL,NUM_INSTANCES INTEGER NOT NULL,EXT_RETR_AET VARCHAR(256),RETRIEVE_AETS VARCHAR(256),FILESET_IUID VARCHAR(256),FILESET_ID VARCHAR(256),AVAILABILITY INTEGER NOT NULL,HIDDEN BOOLEAN NOT NULL,CHECKED_TIME TIMESTAMP,CREATED_TIME TIMESTAMP,UPDATED_TIME TIMESTAMP,STUDY_ATTRS VARBINARY,CONSTRAINT SYS_FK_4 FOREIGN KEY(PATIENT_FK) REFERENCES PATIENT(PK))
CREATE INDEX PATIENT_FK ON STUDY(PATIENT_FK)
CREATE UNIQUE INDEX STUDY_IUID ON STUDY(STUDY_IUID)
CREATE INDEX STUDY_ID ON STUDY(STUDY_ID)
CREATE INDEX STUDY_DATETIME ON STUDY(STUDY_DATETIME)
CREATE INDEX ACCESSION_NO ON STUDY(ACCESSION_NO)
CREATE INDEX REF_PHYSICIAN ON STUDY(REF_PHYSICIAN)
CREATE INDEX STUDY_CHECKED ON STUDY(CHECKED_TIME)
CREATE INDEX STUDY_CREATED ON STUDY(CREATED_TIME)
CREATE INDEX STUDY_HIDDEN ON STUDY(HIDDEN)
CREATE MEMORY TABLE MPPS(PK INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 0)  NOT NULL PRIMARY KEY,PATIENT_FK INTEGER,DRCODE_FK INTEGER,MPPS_IUID VARCHAR(256) NOT NULL,PPS_START TIMESTAMP,STATION_AET VARCHAR(256),MODALITY VARCHAR(256),ACCESSION_NO VARCHAR(256),MPPS_STATUS INTEGER NOT NULL,CREATED_TIME TIMESTAMP,UPDATED_TIME TIMESTAMP,MPPS_ATTRS VARBINARY,CONSTRAINT SYS_FK_7 FOREIGN KEY(PATIENT_FK) REFERENCES PATIENT(PK),CONSTRAINT SYS_FK_8 FOREIGN KEY(DRCODE_FK) REFERENCES CODE(PK))
CREATE UNIQUE INDEX MPPS_IUID ON MPPS(MPPS_IUID)
CREATE INDEX MPPS_PATIENT_FK ON MPPS(PATIENT_FK)
CREATE INDEX MPPS_PPS_START ON MPPS(PPS_START)
CREATE INDEX MPPS_STATION_AET ON MPPS(STATION_AET)
CREATE INDEX MPPS_MODALITY ON MPPS(MODALITY)
CREATE INDEX MPPS_ACCESSION_NO ON MPPS(ACCESSION_NO)
CREATE MEMORY TABLE SERIES(PK INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 0)  NOT NULL PRIMARY KEY,STUDY_FK INTEGER,MPPS_FK INTEGER,SERIES_IUID VARCHAR(256) NOT NULL,SERIES_NO VARCHAR(256),MODALITY VARCHAR(256),PPS_START TIMESTAMP,PPS_IUID VARCHAR(256),NUM_INSTANCES INTEGER NOT NULL,SRC_AET VARCHAR(256),EXT_RETR_AET VARCHAR(256),RETRIEVE_AETS VARCHAR(256),FILESET_IUID VARCHAR(256),FILESET_ID VARCHAR(256),AVAILABILITY INTEGER NOT NULL,HIDDEN BOOLEAN NOT NULL,CREATED_TIME TIMESTAMP,UPDATED_TIME TIMESTAMP,SERIES_ATTRS VARBINARY,CONSTRAINT SYS_FK_13 FOREIGN KEY(STUDY_FK) REFERENCES STUDY(PK),CONSTRAINT SYS_FK_14 FOREIGN KEY(MPPS_FK) REFERENCES MPPS(PK))
CREATE INDEX STUDY_FK ON SERIES(STUDY_FK)
CREATE INDEX SERIES_MPPS_FK ON SERIES(MPPS_FK)
CREATE UNIQUE INDEX SERIES_IUID ON SERIES(SERIES_IUID)
CREATE INDEX SERIES_NO ON SERIES(SERIES_NO)
CREATE INDEX MODALITY ON SERIES(MODALITY)
CREATE INDEX SERIES_PPS_START ON SERIES(PPS_START)
CREATE INDEX SERIES_PPS_IUID ON SERIES(PPS_IUID)
CREATE INDEX SERIES_SRC_AET ON SERIES(SRC_AET)
CREATE INDEX SERIES_CREATED ON SERIES(CREATED_TIME)
CREATE INDEX SERIES_HIDDEN ON SERIES(HIDDEN)
CREATE MEMORY TABLE SERIES_REQ(PK INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 0)  NOT NULL PRIMARY KEY,SERIES_FK INTEGER,REQ_PROC_ID VARCHAR(256),SPS_ID VARCHAR(256),CONSTRAINT SYS_FK_19 FOREIGN KEY(SERIES_FK) REFERENCES SERIES(PK))
CREATE INDEX SER_REQ_SERIES_FK ON SERIES_REQ(SERIES_FK)
CREATE INDEX SER_REQ_PROC_ID ON SERIES_REQ(REQ_PROC_ID)
CREATE INDEX SER_REQ_SPS_ID ON SERIES_REQ(SPS_ID)
CREATE MEMORY TABLE MEDIA(PK INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 0)  NOT NULL PRIMARY KEY,FILESET_IUID VARCHAR(256) NOT NULL,FILESET_ID VARCHAR(256),MEDIA_RQ_IUID VARCHAR(256),MEDIA_STATUS INTEGER NOT NULL,MEDIA_STATUS_INFO VARCHAR(256),MEDIA_USAGE BIGINT NOT NULL,CREATED_TIME TIMESTAMP,UPDATED_TIME TIMESTAMP)
CREATE UNIQUE INDEX FILESET_IUID ON MEDIA(FILESET_IUID)
CREATE INDEX MEDIA_STATUS ON MEDIA(MEDIA_STATUS)
CREATE MEMORY TABLE INSTANCE(PK INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 0)  NOT NULL PRIMARY KEY,SERIES_FK INTEGER,SRCODE_FK INTEGER,MEDIA_FK INTEGER,SOP_IUID VARCHAR(256) NOT NULL,SOP_CUID VARCHAR(256) NOT NULL,INST_NO VARCHAR(256),CONTENT_DATETIME TIMESTAMP,SR_COMPLETE VARCHAR(256),SR_VERIFIED VARCHAR(256),EXT_RETR_AET VARCHAR(256),RETRIEVE_AETS VARCHAR(256),AVAILABILITY INTEGER NOT NULL,COMMITMENT BOOLEAN NOT NULL,HIDDEN BOOLEAN NOT NULL,CREATED_TIME TIMESTAMP,UPDATED_TIME TIMESTAMP,INST_ATTRS VARBINARY,CONSTRAINT SYS_FK_22 FOREIGN KEY(SERIES_FK) REFERENCES SERIES(PK),CONSTRAINT SYS_FK_23 FOREIGN KEY(SRCODE_FK) REFERENCES CODE(PK),CONSTRAINT SYS_FK_24 FOREIGN KEY(MEDIA_FK) REFERENCES MEDIA(PK))
CREATE INDEX SERIES_FK ON INSTANCE(SERIES_FK)
CREATE INDEX SRCODE_FK ON INSTANCE(SRCODE_FK)
CREATE INDEX MEDIA_FK ON INSTANCE(MEDIA_FK)
CREATE UNIQUE INDEX SOP_IUID ON INSTANCE(SOP_IUID)
CREATE INDEX SOP_CUID ON INSTANCE(SOP_CUID)
CREATE INDEX INST_NO ON INSTANCE(INST_NO)
CREATE INDEX CONTENT_DATETIME ON INSTANCE(CONTENT_DATETIME)
CREATE INDEX SR_COMPLETE ON INSTANCE(SR_COMPLETE)
CREATE INDEX SR_VERIFIED ON INSTANCE(SR_VERIFIED)
CREATE INDEX EXT_RETR_AET ON INSTANCE(EXT_RETR_AET)
CREATE INDEX COMMITMENT ON INSTANCE(COMMITMENT)
CREATE INDEX INST_HIDDEN ON INSTANCE(HIDDEN)
CREATE MEMORY TABLE FILESYSTEM(PK INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 0)  NOT NULL PRIMARY KEY,DIRPATH VARCHAR(256) NOT NULL,RETRIEVE_AET VARCHAR(256) NOT NULL)
CREATE UNIQUE INDEX DIRPATH ON FILESYSTEM(DIRPATH)
CREATE INDEX RETRIEVE_AET ON FILESYSTEM(RETRIEVE_AET)
CREATE MEMORY TABLE FILES(PK INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 0)  NOT NULL PRIMARY KEY,INSTANCE_FK INTEGER,FILESYSTEM_FK INTEGER,FILEPATH VARCHAR(256) NOT NULL,FILE_TSUID VARCHAR(256) NOT NULL,FILE_MD5 VARCHAR(256),FILE_SIZE INTEGER,FILE_STATUS INTEGER,MD5_CHECK_TIME TIMESTAMP,CREATED_TIME TIMESTAMP,CONSTRAINT SYS_FK_31 FOREIGN KEY(INSTANCE_FK) REFERENCES INSTANCE(PK),CONSTRAINT SYS_FK_32 FOREIGN KEY(FILESYSTEM_FK) REFERENCES FILESYSTEM(PK))
CREATE INDEX INSTANCE_FK ON FILES(INSTANCE_FK)
CREATE INDEX FILESYSTEM_FK ON FILES(FILESYSTEM_FK)
CREATE INDEX FILE_TSUID ON FILES(FILE_TSUID)
CREATE INDEX MD5_CHECK_TIME ON FILES(MD5_CHECK_TIME)
CREATE INDEX FILE_CREATED ON FILES(CREATED_TIME)
CREATE INDEX FILE_STATUS ON FILES(FILE_STATUS)
CREATE MEMORY TABLE STUDY_ON_FS(PK INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 0)  NOT NULL PRIMARY KEY,STUDY_FK INTEGER,FILESYSTEM_FK INTEGER,ACCESS_TIME TIMESTAMP NOT NULL,CONSTRAINT SYS_FK_37 FOREIGN KEY(STUDY_FK) REFERENCES STUDY(PK),CONSTRAINT SYS_FK_38 FOREIGN KEY(FILESYSTEM_FK) REFERENCES FILESYSTEM(PK))
CREATE UNIQUE INDEX I_STUDY_ON_FS ON STUDY_ON_FS(FILESYSTEM_FK,STUDY_FK)
CREATE MEMORY TABLE MWL_ITEM(PK INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 0)  NOT NULL PRIMARY KEY,PATIENT_FK INTEGER,SPS_STATUS INTEGER,SPS_ID VARCHAR(256),START_DATETIME TIMESTAMP NOT NULL,STATION_AET VARCHAR(256) NOT NULL,MODALITY VARCHAR(256) NOT NULL,PERF_PHYSICIAN VARCHAR_IGNORECASE(256),REQ_PROC_ID VARCHAR(256) NOT NULL,ACCESSION_NO VARCHAR(256),CREATED_TIME TIMESTAMP,UPDATED_TIME TIMESTAMP,ITEM_ATTRS VARBINARY,CONSTRAINT SYS_FK_43 FOREIGN KEY(PATIENT_FK) REFERENCES PATIENT(PK))
CREATE INDEX MWL_PATIENT_FK ON MWL_ITEM(PATIENT_FK)
CREATE INDEX SPS_STATUS ON MWL_ITEM(SPS_STATUS)
CREATE UNIQUE INDEX MWL_SPS_ID ON MWL_ITEM(SPS_ID)
CREATE INDEX MWL_START_TIME ON MWL_ITEM(START_DATETIME)
CREATE INDEX MWL_STATION_AET ON MWL_ITEM(STATION_AET)
CREATE INDEX MWL_MODALITY ON MWL_ITEM(MODALITY)
CREATE INDEX MWL_PERF_PHYSICIAN ON MWL_ITEM(PERF_PHYSICIAN)
CREATE INDEX MWL_REQ_PROC_ID ON MWL_ITEM(REQ_PROC_ID)
CREATE INDEX MWL_ACCESSION_NO ON MWL_ITEM(ACCESSION_NO)
CREATE MEMORY TABLE GPSPS(PK INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 0)  NOT NULL PRIMARY KEY,PATIENT_FK INTEGER,CODE_FK INTEGER,GPSPS_IUID VARCHAR(256) NOT NULL,GPSPS_TUID VARCHAR(256),START_DATETIME TIMESTAMP NOT NULL,END_DATETIME TIMESTAMP,GPSPS_STATUS INTEGER,GPSPS_PRIOR INTEGER,IN_AVAILABILITY INTEGER,ITEM_ATTRS VARBINARY,CONSTRAINT SYS_FK_46 FOREIGN KEY(PATIENT_FK) REFERENCES PATIENT(PK),CONSTRAINT SYS_FK_47 FOREIGN KEY(CODE_FK) REFERENCES CODE(PK))
CREATE INDEX GPSPS_PATIENT_FK ON GPSPS(PATIENT_FK)
CREATE INDEX GPSPS_CODE_FK ON GPSPS(CODE_FK)
CREATE UNIQUE INDEX GPSPS_IUID ON GPSPS(GPSPS_IUID)
CREATE INDEX GPSPS_TUID ON GPSPS(GPSPS_TUID)
CREATE INDEX GPSPS_START_TIME ON GPSPS(START_DATETIME)
CREATE INDEX GPSPS_END_TIME ON GPSPS(END_DATETIME)
CREATE INDEX GPSPS_STATUS ON GPSPS(GPSPS_STATUS)
CREATE INDEX GPSPS_PRIOR ON GPSPS(GPSPS_PRIOR)
CREATE INDEX IN_AVAILABILITY ON GPSPS(IN_AVAILABILITY)
CREATE MEMORY TABLE REL_GPSPS_APPCODE(GPSPS_FK INTEGER,APPCODE_FK INTEGER,CONSTRAINT SYS_FK_52 FOREIGN KEY(GPSPS_FK) REFERENCES GPSPS(PK),CONSTRAINT SYS_FK_53 FOREIGN KEY(APPCODE_FK) REFERENCES CODE(PK))
CREATE INDEX APPCODE_GPSPS_FK ON REL_GPSPS_APPCODE(GPSPS_FK)
CREATE INDEX GPSPS_APPCODE_FK ON REL_GPSPS_APPCODE(APPCODE_FK)
CREATE MEMORY TABLE REL_GPSPS_DEVNAME(GPSPS_FK INTEGER,DEVNAME_FK INTEGER,CONSTRAINT SYS_FK_58 FOREIGN KEY(GPSPS_FK) REFERENCES GPSPS(PK),CONSTRAINT SYS_FK_59 FOREIGN KEY(DEVNAME_FK) REFERENCES CODE(PK))
CREATE INDEX DEVNAME_GPSPS_FK ON REL_GPSPS_DEVNAME(GPSPS_FK)
CREATE INDEX GPSPS_DEVNAME_FK ON REL_GPSPS_DEVNAME(DEVNAME_FK)
CREATE MEMORY TABLE REL_GPSPS_DEVCLASS(GPSPS_FK INTEGER,DEVCLASS_FK INTEGER,CONSTRAINT SYS_FK_64 FOREIGN KEY(GPSPS_FK) REFERENCES GPSPS(PK),CONSTRAINT SYS_FK_65 FOREIGN KEY(DEVCLASS_FK) REFERENCES CODE(PK))
CREATE INDEX DEVCLASS_GPSPS_FK ON REL_GPSPS_DEVCLASS(GPSPS_FK)
CREATE INDEX GPSPS_DEVCLASS_FK ON REL_GPSPS_DEVCLASS(DEVCLASS_FK)
CREATE MEMORY TABLE REL_GPSPS_DEVLOC(GPSPS_FK INTEGER,DEVLOC_FK INTEGER,CONSTRAINT SYS_FK_70 FOREIGN KEY(GPSPS_FK) REFERENCES GPSPS(PK),CONSTRAINT SYS_FK_71 FOREIGN KEY(DEVLOC_FK) REFERENCES CODE(PK))
CREATE INDEX DEVLOC_GPSPS_FK ON REL_GPSPS_DEVLOC(GPSPS_FK)
CREATE INDEX GPSPS_DEVLOC_FK ON REL_GPSPS_DEVLOC(DEVLOC_FK)
CREATE MEMORY TABLE GPSPS_PERF(PK INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 0)  NOT NULL PRIMARY KEY,GPSPS_FK INTEGER,CODE_FK INTEGER,HUMAN_PERF_NAME VARCHAR_IGNORECASE(256),CONSTRAINT SYS_FK_76 FOREIGN KEY(GPSPS_FK) REFERENCES GPSPS(PK),CONSTRAINT SYS_FK_77 FOREIGN KEY(CODE_FK) REFERENCES CODE(PK))
CREATE INDEX GPSPS_PERF_SPS_FK ON GPSPS_PERF(GPSPS_FK)
CREATE INDEX GPSPS_PERF_CODE_FK ON GPSPS_PERF(CODE_FK)
CREATE INDEX GPSPS_PERF_NAME ON GPSPS_PERF(HUMAN_PERF_NAME)
CREATE MEMORY TABLE GPSPS_REQ(PK INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 0)  NOT NULL PRIMARY KEY,GPSPS_FK INTEGER,REQ_PROC_ID VARCHAR(256),ACCESSION_NO VARCHAR(256),CONSTRAINT SYS_FK_82 FOREIGN KEY(GPSPS_FK) REFERENCES GPSPS(PK))
CREATE INDEX GPSPS_REQ_GPSPS_FK ON GPSPS_REQ(GPSPS_FK)
CREATE INDEX GPSPS_REQ_PROC_ID ON GPSPS_REQ(REQ_PROC_ID)
CREATE INDEX GPSPS_REQ_ACC_NO ON GPSPS_REQ(ACCESSION_NO)
CREATE MEMORY TABLE HP(PK INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 0)  NOT NULL PRIMARY KEY,USER_FK INTEGER,HP_IUID VARCHAR(256) NOT NULL,HP_CUID VARCHAR(256),HP_NAME VARCHAR(256),HP_GROUP VARCHAR(256),HP_LEVEL INTEGER,NUM_PRIORS INTEGER,NUM_SCREENS INTEGER,HP_ATTRS VARBINARY,CONSTRAINT SYS_FK_85 FOREIGN KEY(USER_FK) REFERENCES CODE(PK))
CREATE INDEX HP_USER_FK ON HP(USER_FK)
CREATE UNIQUE INDEX HP_IUID ON HP(HP_IUID)
CREATE INDEX HP_CUID ON HP(HP_CUID)
CREATE INDEX HP_NAME ON HP(HP_NAME)
CREATE INDEX HP_LEVEL ON HP(HP_LEVEL)
CREATE INDEX NUM_SCREENS ON HP(NUM_SCREENS)
CREATE MEMORY TABLE HPDEF(PK INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 0)  NOT NULL PRIMARY KEY,HP_FK INTEGER,MODALITY VARCHAR(256),LATERALITY VARCHAR(256),CONSTRAINT SYS_FK_88 FOREIGN KEY(HP_FK) REFERENCES HP(PK))
CREATE INDEX HP_FK ON HPDEF(HP_FK)
CREATE INDEX HPDEF_MODALITY ON HPDEF(MODALITY)
CREATE INDEX HPDEF_LATERALITY ON HPDEF(LATERALITY)
CREATE MEMORY TABLE REL_HPDEF_REGION(HPDEF_FK INTEGER,REGION_FK INTEGER,CONSTRAINT SYS_FK_91 FOREIGN KEY(HPDEF_FK) REFERENCES HPDEF(PK),CONSTRAINT SYS_FK_92 FOREIGN KEY(REGION_FK) REFERENCES CODE(PK))
CREATE INDEX REGION_HPDEF_FK ON REL_HPDEF_REGION(HPDEF_FK)
CREATE INDEX HPDEF_REGION_FK ON REL_HPDEF_REGION(REGION_FK)
CREATE MEMORY TABLE REL_HPDEF_PROC(HPDEF_FK INTEGER,PROC_FK INTEGER,CONSTRAINT SYS_FK_97 FOREIGN KEY(HPDEF_FK) REFERENCES HPDEF(PK),CONSTRAINT SYS_FK_98 FOREIGN KEY(PROC_FK) REFERENCES CODE(PK))
CREATE INDEX PROC_HPDEF_FK ON REL_HPDEF_PROC(HPDEF_FK)
CREATE INDEX HPDEF_PROC_FK ON REL_HPDEF_PROC(PROC_FK)
CREATE MEMORY TABLE REL_HPDEF_REASON(HPDEF_FK INTEGER,REASON_FK INTEGER,CONSTRAINT SYS_FK_103 FOREIGN KEY(HPDEF_FK) REFERENCES HPDEF(PK),CONSTRAINT SYS_FK_104 FOREIGN KEY(REASON_FK) REFERENCES CODE(PK))
CREATE INDEX REASON_HPDEF_FK ON REL_HPDEF_REASON(HPDEF_FK)
CREATE INDEX HPDEF_REASON_FK ON REL_HPDEF_REASON(REASON_FK)
CREATE MEMORY TABLE DEVICE(PK INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 0)  NOT NULL PRIMARY KEY,STATION_NAME VARCHAR(256) NOT NULL,STATION_AET VARCHAR(256) NOT NULL,MODALITY VARCHAR(256) NOT NULL)
CREATE UNIQUE INDEX STATION_NAME ON DEVICE(STATION_NAME)
CREATE MEMORY TABLE REL_DEV_PROTO(DEVICE_FK INTEGER,PRCODE_FK INTEGER,CONSTRAINT SYS_FK_109 FOREIGN KEY(DEVICE_FK) REFERENCES DEVICE(PK),CONSTRAINT SYS_FK_110 FOREIGN KEY(PRCODE_FK) REFERENCES CODE(PK))
CREATE INDEX DEVICE_FK ON REL_DEV_PROTO(DEVICE_FK)
CREATE INDEX PRCODE_FK ON REL_DEV_PROTO(PRCODE_FK)
CREATE MEMORY TABLE AUDIT_RECORD(PK INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 0)  NOT NULL PRIMARY KEY,MSG_TYPE VARCHAR(256),HOST_NAME VARCHAR_IGNORECASE(256),TIME_STAMP TIMESTAMP,AET VARCHAR(256),USER_NAME VARCHAR(256),PATIENT_NAME VARCHAR_IGNORECASE(256),PATIENT_ID VARCHAR(256),XML_DATA VARCHAR(64000))
CREATE INDEX ARR_MSG_TYPE ON AUDIT_RECORD(MSG_TYPE)
CREATE INDEX ARR_HOST_NAME ON AUDIT_RECORD(HOST_NAME)
CREATE INDEX ARR_TIME_STAMP ON AUDIT_RECORD(TIME_STAMP)
CREATE INDEX ARR_AET ON AUDIT_RECORD(AET)
CREATE INDEX ARR_USER_NAME ON AUDIT_RECORD(USER_NAME)
CREATE INDEX ARR_PATIENT_NAME ON AUDIT_RECORD(PATIENT_NAME)
CREATE INDEX ARR_PATIENT_ID ON AUDIT_RECORD(PATIENT_ID)
CREATE MEMORY TABLE USERS(USER_ID VARCHAR(256) NOT NULL PRIMARY KEY,PASSWD VARCHAR(256))
CREATE MEMORY TABLE ROLES(USER_ID VARCHAR(256),ROLES VARCHAR(256),CONSTRAINT SYS_FK_115 FOREIGN KEY(USER_ID) REFERENCES USERS(USER_ID))
CREATE INDEX USER_ID ON ROLES(USER_ID)
CREATE USER SA PASSWORD "" ADMIN
SET WRITE_DELAY 20
INSERT INTO AE VALUES(0,'PACS_TIANI','localhost',11112,NULL)
INSERT INTO USERS VALUES('admin','admin')
INSERT INTO USERS VALUES('user','user')
INSERT INTO ROLES VALUES('admin','JBossAdmin')
INSERT INTO ROLES VALUES('admin','WebUser')
INSERT INTO ROLES VALUES('admin','WebAdmin')
INSERT INTO ROLES VALUES('admin','McmUser')
INSERT INTO ROLES VALUES('admin','arr-user')
INSERT INTO ROLES VALUES('user','WebUser')
INSERT INTO ROLES VALUES('user','McmUser')
