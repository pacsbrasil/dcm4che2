CREATE TABLE AE(PK INTEGER NOT NULL IDENTITY PRIMARY KEY,AET VARCHAR(256) NOT NULL,HOSTNAME VARCHAR(256) NOT NULL,PORT INTEGER NOT NULL,CIPHER_SUITES VARCHAR(256))
CREATE UNIQUE INDEX AET ON AE(AET)
CREATE TABLE MOVE_ORDER(PK INTEGER NOT NULL IDENTITY PRIMARY KEY,SCHEDULED_TIME TIMESTAMP,PRIORITY INTEGER NOT NULL,RETRIEVE_AET VARCHAR(256) NOT NULL,MOVE_DEST VARCHAR(256) NOT NULL,PAT_ID VARCHAR(256),STUDY_IUIDS VARCHAR(256),SERIES_IUIDS VARCHAR(256),SOP_IUIDS VARCHAR(64000),FAILURE_COUNT INTEGER,FAILURE_STATUS INTEGER)
CREATE INDEX MOVE_ORDER_SCHEDULED_TIME ON MOVE_ORDER(SCHEDULED_TIME)
CREATE TABLE CODE(PK INTEGER NOT NULL IDENTITY PRIMARY KEY,CODE_VALUE VARCHAR(256) NOT NULL,CODE_DESIGNATOR VARCHAR(256) NOT NULL,CODE_VERSION VARCHAR(256),CODE_MEANING VARCHAR(256))
CREATE INDEX CODE_VALUE ON CODE(CODE_VALUE,CODE_DESIGNATOR)
CREATE TABLE PATIENT(PK INTEGER NOT NULL IDENTITY PRIMARY KEY,MERGE_FK INTEGER,PAT_ID VARCHAR(256),PAT_ID_ISSUER VARCHAR(256),PAT_NAME VARCHAR_IGNORECASE(256),PAT_BIRTHDATE DATE,PAT_SEX VARCHAR(256),PAT_ATTRS VARBINARY,CONSTRAINT SYS_FK_1 FOREIGN KEY(MERGE_FK) REFERENCES PATIENT(PK))
CREATE INDEX PAT_MERGE_FK ON PATIENT(MERGE_FK)
CREATE INDEX PAT_ID ON PATIENT(PAT_ID,PAT_ID_ISSUER)
CREATE INDEX PAT_NAME ON PATIENT(PAT_NAME)
CREATE INDEX PAT_BIRTHDATE ON PATIENT(PAT_BIRTHDATE)
CREATE INDEX PAT_SEX ON PATIENT(PAT_SEX)
CREATE TABLE STUDY(PK INTEGER NOT NULL IDENTITY PRIMARY KEY,PATIENT_FK INTEGER,STUDY_IUID VARCHAR(256) NOT NULL,STUDY_ID VARCHAR(256),STUDY_DATETIME TIMESTAMP,ACCESSION_NO VARCHAR(256),REF_PHYSICIAN VARCHAR_IGNORECASE(256),MODS_IN_STUDY VARCHAR(256),NUM_SERIES INTEGER,NUM_INSTANCES INTEGER,RETRIEVE_AETS VARCHAR(256),AVAILABILITY INTEGER,STUDY_ATTRS VARBINARY,CONSTRAINT SYS_FK_4 FOREIGN KEY(PATIENT_FK) REFERENCES PATIENT(PK))
CREATE INDEX PATIENT_FK ON STUDY(PATIENT_FK)
CREATE UNIQUE INDEX STUDY_IUID ON STUDY(STUDY_IUID)
CREATE INDEX STUDY_ID ON STUDY(STUDY_ID)
CREATE INDEX STUDY_DATETIME ON STUDY(STUDY_DATETIME)
CREATE INDEX ACCESSION_NO ON STUDY(ACCESSION_NO)
CREATE INDEX REF_PHYSICIAN ON STUDY(REF_PHYSICIAN)
CREATE INDEX MPPS_PATIENT_FK ON STUDY(PATIENT_FK)
CREATE TABLE MPPS(PK INTEGER NOT NULL IDENTITY PRIMARY KEY,PATIENT_FK INTEGER,DRCODE_FK INTEGER,MPPS_IUID VARCHAR(256) NOT NULL,MPPS_STATUS INTEGER,MPPS_ATTRS VARBINARY,CONSTRAINT SYS_FK_7 FOREIGN KEY(PATIENT_FK) REFERENCES PATIENT(PK),CONSTRAINT SYS_FK_8 FOREIGN KEY(DRCODE_FK) REFERENCES CODE(PK))
CREATE UNIQUE INDEX MPPS_IUID ON MPPS(MPPS_IUID)
CREATE TABLE SERIES(PK INTEGER NOT NULL IDENTITY PRIMARY KEY,STUDY_FK INTEGER,MPPS_FK INTEGER,SERIES_IUID VARCHAR(256) NOT NULL,SERIES_NO VARCHAR(256),MODALITY VARCHAR(256),PPS_START TIMESTAMP,PPS_IUID VARCHAR(256),NUM_INSTANCES INTEGER,RETRIEVE_AETS VARCHAR(256),AVAILABILITY INTEGER,HIDDEN BIT,SERIES_ATTRS VARBINARY,CONSTRAINT SYS_FK_13 FOREIGN KEY(STUDY_FK) REFERENCES STUDY(PK),CONSTRAINT SYS_FK_14 FOREIGN KEY(MPPS_FK) REFERENCES MPPS(PK))
CREATE INDEX STUDY_FK ON SERIES(STUDY_FK)
CREATE INDEX SERIES_MPPS_FK ON SERIES(MPPS_FK)
CREATE UNIQUE INDEX SERIES_IUID ON SERIES(SERIES_IUID)
CREATE INDEX SERIES_NO ON SERIES(SERIES_NO)
CREATE INDEX MODALITY ON SERIES(MODALITY)
CREATE INDEX SERIES_PPS_START ON SERIES(PPS_START)
CREATE INDEX SERIES_PPS_IUID ON SERIES(PPS_IUID)
CREATE TABLE INSTANCE(PK INTEGER NOT NULL IDENTITY PRIMARY KEY,SERIES_FK INTEGER,SRCODE_FK INTEGER,SOP_IUID VARCHAR(256) NOT NULL,SOP_CUID VARCHAR(256) NOT NULL,INST_NO VARCHAR(256),SR_COMPLETE VARCHAR(256),SR_VERIFIED VARCHAR(256),RETRIEVE_AETS VARCHAR(256),AVAILABILITY INTEGER,COMMITMENT BIT,INST_ATTRS VARBINARY,CONSTRAINT SYS_FK_19 FOREIGN KEY(SERIES_FK) REFERENCES SERIES(PK),CONSTRAINT SYS_FK_20 FOREIGN KEY(SRCODE_FK) REFERENCES CODE(PK))
CREATE INDEX SERIES_FK ON INSTANCE(SERIES_FK)
CREATE UNIQUE INDEX SOP_IUID ON INSTANCE(SOP_IUID)
CREATE INDEX SOP_CUID ON INSTANCE(SOP_CUID)
CREATE INDEX INST_NO ON INSTANCE(INST_NO)
CREATE INDEX SR_COMPLETE ON INSTANCE(SR_COMPLETE)
CREATE INDEX SR_VERIFIED ON INSTANCE(SR_VERIFIED)
CREATE TABLE FILES(PK INTEGER NOT NULL IDENTITY PRIMARY KEY,INSTANCE_FK INTEGER,RETRIEVE_AETS VARCHAR(256) NOT NULL,DIRPATH VARCHAR(256) NOT NULL,FILEPATH VARCHAR(256) NOT NULL,FILE_TSUID VARCHAR(256) NOT NULL,FILE_MD5 VARCHAR(256),FILE_SIZE INTEGER,CONSTRAINT SYS_FK_25 FOREIGN KEY(INSTANCE_FK) REFERENCES INSTANCE(PK))
CREATE INDEX INSTANCE_FK ON FILES(INSTANCE_FK)
CREATE TABLE MWL_ITEM(PK INTEGER NOT NULL IDENTITY PRIMARY KEY,SPS_ID VARCHAR(256) NOT NULL,START_DATETIME TIMESTAMP NOT NULL,STATION_AET VARCHAR(256) NOT NULL,MODALITY VARCHAR(256) NOT NULL,PERF_PHYSICIAN VARCHAR_IGNORECASE(256),REQ_PROC_ID VARCHAR(256) NOT NULL,ACCESSION_NO VARCHAR(256),PAT_ID VARCHAR(256) NOT NULL,PAT_NAME VARCHAR_IGNORECASE(256) NOT NULL,ITEM_ATTRS VARBINARY)
CREATE UNIQUE INDEX MWL_SPS_ID ON MWL_ITEM(SPS_ID)
CREATE INDEX MWL_START_TIME ON MWL_ITEM(START_DATETIME)
CREATE INDEX MWL_STATION_AET ON MWL_ITEM(STATION_AET)
CREATE INDEX MWL_MODALITY ON MWL_ITEM(MODALITY)
CREATE INDEX MWL_PERF_PHYSICIAN ON MWL_ITEM(PERF_PHYSICIAN)
CREATE INDEX MWL_REQ_PROC_ID ON MWL_ITEM(REQ_PROC_ID)
CREATE INDEX MWL_ACCESSION_NO ON MWL_ITEM(ACCESSION_NO)
CREATE INDEX MWL_PAT_ID ON MWL_ITEM(PAT_ID)
CREATE INDEX MWL_PAT_NAME ON MWL_ITEM(PAT_NAME)
CREATE TABLE AUDIT_RECORD(PK INTEGER NOT NULL IDENTITY PRIMARY KEY,MSG_TYPE VARCHAR(256),HOST_NAME VARCHAR_IGNORECASE(256),TIME_STAMP TIMESTAMP,AET VARCHAR(256),USER_NAME VARCHAR(256),PATIENT_NAME VARCHAR_IGNORECASE(256),PATIENT_ID VARCHAR(256),XML_DATA VARCHAR(64000))
CREATE INDEX ARR_MSG_TYPE ON AUDIT_RECORD(MSG_TYPE)
CREATE INDEX ARR_HOST_NAME ON AUDIT_RECORD(HOST_NAME)
CREATE INDEX ARR_TIME_STAMP ON AUDIT_RECORD(TIME_STAMP)
CREATE INDEX ARR_AET ON AUDIT_RECORD(AET)
CREATE INDEX ARR_USER_NAME ON AUDIT_RECORD(USER_NAME)
CREATE INDEX ARR_PATIENT_NAME ON AUDIT_RECORD(PATIENT_NAME)
CREATE INDEX ARR_PATIENT_ID ON AUDIT_RECORD(PATIENT_ID)
CREATE TABLE USERS(USER_ID VARCHAR(256) NOT NULL PRIMARY KEY,PASSWD VARCHAR(256))
CREATE TABLE ROLES(USER_ID VARCHAR(256),ROLES VARCHAR(256),CONSTRAINT SYS_FK_28 FOREIGN KEY(USER_ID) REFERENCES USERS(USER_ID))
CREATE INDEX USER_ID ON ROLES(USER_ID)
GRANT ALL ON CLASS "org.hsqldb.Library" TO PUBLIC
GRANT ALL ON CLASS "java.lang.Math" TO PUBLIC
CREATE USER SA PASSWORD "" ADMIN
CREATE ALIAS DAYNAME FOR "org.hsqldb.Library.dayname"
CREATE ALIAS SPACE FOR "org.hsqldb.Library.space"
CREATE ALIAS SUBSTRING FOR "org.hsqldb.Library.substring"
CREATE ALIAS HEXTORAW FOR "org.hsqldb.Library.hexToRaw"
CREATE ALIAS SQRT FOR "java.lang.Math.sqrt"
CREATE ALIAS ABS FOR "org.hsqldb.Library.abs"
CREATE ALIAS POWER FOR "java.lang.Math.pow"
CREATE ALIAS CHAR FOR "org.hsqldb.Library.character"
CREATE ALIAS CONCAT FOR "org.hsqldb.Library.concat"
CREATE ALIAS PI FOR "org.hsqldb.Library.pi"
CREATE ALIAS RAWTOHEX FOR "org.hsqldb.Library.rawToHex"
CREATE ALIAS SECOND FOR "org.hsqldb.Library.second"
CREATE ALIAS TRUNCATE FOR "org.hsqldb.Library.truncate"
CREATE ALIAS MONTH FOR "org.hsqldb.Library.month"
CREATE ALIAS LOWER FOR "org.hsqldb.Library.lcase"
CREATE ALIAS ATAN2 FOR "java.lang.Math.atan2"
CREATE ALIAS REPEAT FOR "org.hsqldb.Library.repeat"
CREATE ALIAS DAYOFMONTH FOR "org.hsqldb.Library.dayofmonth"
CREATE ALIAS TAN FOR "java.lang.Math.tan"
CREATE ALIAS RADIANS FOR "java.lang.Math.toRadians"
CREATE ALIAS FLOOR FOR "java.lang.Math.floor"
CREATE ALIAS NOW FOR "org.hsqldb.Library.now"
CREATE ALIAS ACOS FOR "java.lang.Math.acos"
CREATE ALIAS DAYOFWEEK FOR "org.hsqldb.Library.dayofweek"
CREATE ALIAS CEILING FOR "java.lang.Math.ceil"
CREATE ALIAS DAYOFYEAR FOR "org.hsqldb.Library.dayofyear"
CREATE ALIAS LCASE FOR "org.hsqldb.Library.lcase"
CREATE ALIAS WEEK FOR "org.hsqldb.Library.week"
CREATE ALIAS SOUNDEX FOR "org.hsqldb.Library.soundex"
CREATE ALIAS ASIN FOR "java.lang.Math.asin"
CREATE ALIAS LOCATE FOR "org.hsqldb.Library.locate"
CREATE ALIAS EXP FOR "java.lang.Math.exp"
CREATE ALIAS MONTHNAME FOR "org.hsqldb.Library.monthname"
CREATE ALIAS YEAR FOR "org.hsqldb.Library.year"
CREATE ALIAS LEFT FOR "org.hsqldb.Library.left"
CREATE ALIAS ROUNDMAGIC FOR "org.hsqldb.Library.roundMagic"
CREATE ALIAS BITOR FOR "org.hsqldb.Library.bitor"
CREATE ALIAS LTRIM FOR "org.hsqldb.Library.ltrim"
CREATE ALIAS COT FOR "org.hsqldb.Library.cot"
CREATE ALIAS COS FOR "java.lang.Math.cos"
CREATE ALIAS MOD FOR "org.hsqldb.Library.mod"
CREATE ALIAS SIGN FOR "org.hsqldb.Library.sign"
CREATE ALIAS DEGREES FOR "java.lang.Math.toDegrees"
CREATE ALIAS LOG FOR "java.lang.Math.log"
CREATE ALIAS SIN FOR "java.lang.Math.sin"
CREATE ALIAS CURTIME FOR "org.hsqldb.Library.curtime"
CREATE ALIAS DIFFERENCE FOR "org.hsqldb.Library.difference"
CREATE ALIAS INSERT FOR "org.hsqldb.Library.insert"
CREATE ALIAS SUBSTR FOR "org.hsqldb.Library.substring"
CREATE ALIAS DATABASE FOR "org.hsqldb.Library.database"
CREATE ALIAS MINUTE FOR "org.hsqldb.Library.minute"
CREATE ALIAS HOUR FOR "org.hsqldb.Library.hour"
CREATE ALIAS IDENTITY FOR "org.hsqldb.Library.identity"
CREATE ALIAS QUARTER FOR "org.hsqldb.Library.quarter"
CREATE ALIAS CURDATE FOR "org.hsqldb.Library.curdate"
CREATE ALIAS BITAND FOR "org.hsqldb.Library.bitand"
CREATE ALIAS USER FOR "org.hsqldb.Library.user"
CREATE ALIAS UCASE FOR "org.hsqldb.Library.ucase"
CREATE ALIAS RTRIM FOR "org.hsqldb.Library.rtrim"
CREATE ALIAS LOG10 FOR "org.hsqldb.Library.log10"
CREATE ALIAS RIGHT FOR "org.hsqldb.Library.right"
CREATE ALIAS ATAN FOR "java.lang.Math.atan"
CREATE ALIAS UPPER FOR "org.hsqldb.Library.ucase"
CREATE ALIAS ASCII FOR "org.hsqldb.Library.ascii"
CREATE ALIAS RAND FOR "java.lang.Math.random"
CREATE ALIAS LENGTH FOR "org.hsqldb.Library.length"
CREATE ALIAS ROUND FOR "org.hsqldb.Library.round"
CREATE ALIAS REPLACE FOR "org.hsqldb.Library.replace"
INSERT INTO USERS VALUES('admin','admin')
INSERT INTO ROLES VALUES('admin','JBossAdmin')
INSERT INTO ROLES VALUES('admin','WebAdmin')
INSERT INTO ROLES VALUES('admin','arr-user')
/*C1*/CONNECT USER sa PASSWORD ""
SET AUTOCOMMIT TRUE
SET MAXROWS 100
SET MAXROWS 0
