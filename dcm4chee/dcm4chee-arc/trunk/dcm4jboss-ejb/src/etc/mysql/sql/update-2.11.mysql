-- Update DB from dcm4chee-2.10.x to dcm4chee-2.11.x

ALTER TABLE ae ADD pat_id_issuer VARCHAR(250) BINARY;
ALTER TABLE ae ADD ae_desc VARCHAR(250) BINARY;

ALTER TABLE patient ADD pat_custom1 VARCHAR(250) BINARY;
ALTER TABLE patient ADD pat_custom2 VARCHAR(250) BINARY;
ALTER TABLE patient ADD pat_custom3 VARCHAR(250) BINARY;

CREATE INDEX pat_custom1 ON patient(pat_custom1(64));
CREATE INDEX pat_custom2 ON patient(pat_custom2(64));
CREATE INDEX pat_custom3 ON patient(pat_custom3(64));

ALTER TABLE study ADD study_time TIME;
UPDATE study SET study_time=time(study_datetime) WHERE study_datetime IS NOT NULL;
ALTER TABLE study ADD study_custom1 VARCHAR(250) BINARY;
ALTER TABLE study ADD study_custom2 VARCHAR(250) BINARY;
ALTER TABLE study ADD study_custom3 VARCHAR(250) BINARY;

CREATE INDEX study_time ON study(study_time);
CREATE INDEX study_custom1 ON study(study_custom1(64));
CREATE INDEX study_custom2 ON study(study_custom2(64));
CREATE INDEX study_custom3 ON study(study_custom3(64));

ALTER TABLE series ADD body_part VARCHAR(250) BINARY;
ALTER TABLE series ADD laterality VARCHAR(250) BINARY;
ALTER TABLE series ADD series_desc VARCHAR(250) BINARY;
ALTER TABLE series ADD pps_start_time TIME;
UPDATE series SET pps_start_time=time(pps_start) WHERE pps_start_time IS NOT NULL;
ALTER TABLE series ADD series_custom1 VARCHAR(250) BINARY;
ALTER TABLE series ADD series_custom2 VARCHAR(250) BINARY;
ALTER TABLE series ADD series_custom3 VARCHAR(250) BINARY;

CREATE INDEX body_part ON series(body_part);
CREATE INDEX laterality ON series(laterality);
CREATE INDEX series_desc ON series(series_desc);
CREATE INDEX series_pps_time ON series(pps_start_time);
CREATE INDEX series_custom1 ON series(series_custom1(64));
CREATE INDEX series_custom2 ON series(series_custom2(64));
CREATE INDEX series_custom3 ON series(series_custom3(64));

ALTER TABLE instance ADD content_time TIME;
UPDATE instance SET content_time=time(content_datetime) WHERE content_datetime IS NOT NULL;
CREATE INDEX content_time ON instance(content_time);

ALTER TABLE mwl_item ADD station_name VARCHAR(250) BINARY;
CREATE INDEX mwl_station_name ON mwl_item (station_name(16));

CREATE TABLE other_pid (
	pk          	INTEGER AUTO_INCREMENT NOT NULL PRIMARY KEY,
	pat_id         	VARCHAR(250) BINARY NOT NULL,
	pat_id_issuer  	VARCHAR(250) BINARY NOT NULL
);
CREATE UNIQUE INDEX other_pat_id ON other_pid(pat_id(64), pat_id_issuer(64));

CREATE TABLE rel_pat_other_pid (
	patient_fk      INTEGER,
	other_pid_fk    INTEGER,
FOREIGN KEY (patient_fk) REFERENCES patient(pk),
FOREIGN KEY (other_pid_fk) REFERENCES other_pid(pk)
);
CREATE INDEX other_pid_pat_fk ON rel_pat_other_pid(patient_fk);
CREATE INDEX pat_other_pid_fk ON rel_pat_other_pid(other_pid_fk);


DROP INDEX mwl_sps_id ON mwl_item;
CREATE UNIQUE INDEX mwl_sps_id ON mwl_item(sps_id(16),req_proc_id(16));

-- convert cascaded merge relation to one direct relation:
-- repeat following statement, until no row is affected! 
UPDATE patient a, patient b SET a.merge_fk=b.merge_fk 
    WHERE a.merge_fk = b.pk AND b.merge_fk IS NOT NULL;
