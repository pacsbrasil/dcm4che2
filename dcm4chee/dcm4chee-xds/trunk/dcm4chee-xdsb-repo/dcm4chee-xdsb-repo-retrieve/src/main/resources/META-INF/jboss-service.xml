<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mbean PUBLIC "-//JBoss//DTD JBOSS XMBEAN 1.1//EN" "http://www.jboss.org/j2ee/dtd/jboss_xmbean_1_1.dtd">

<!--  Version $Revision:$ $Date:$ -->
<server>
  <mbean code="org.dcm4chee.xdsb.repository.mbean.XDSbRetrieveService" 
         name="dcm4chee.xds:service=XDSbRetrieveService"
         xmbean-dd="">

    <xmbean>
      <description><![CDATA[<b>XDSbRepository Retrieve MBeanService</b><br/>
		Provides a XDS.b Repository Retrieve Service.<br/>.
		]]> </description>

    <descriptors>
       <persistence persistPolicy="OnUpdate"/>
       <persistence-manager value="org.jboss.mx.persistence.DelegatingPersistenceManager" />
    </descriptors>

    <class>org.dcm4chee.xdsb.repository.mbean.XDSbRetrieveService</class>

    <constructor>
         <description>The default constructor</description>
         <name>XDSbRepositoryRetrieveService</name>
    </constructor>
      
   <attribute access="read-write" getMethod="getExternalRepositories" setMethod="setExternalRepositories">
      <description><![CDATA[ List of remote XDS.b Repositories.<br/>
            Format: &lt;Repository UniqueID&gt;=&lt;RetrieveDocument URI&gt; <br/>
            Use NONE to disable retrieve from remote repositories.
      ]]></description>
      <name>ExternalRepositories</name>
      <type>java.lang.String</type>
      <descriptors>
         <value value="NONE"/>
      </descriptors>
   </attribute>
   <attribute access="read-write" getMethod="getProxyHost" setMethod="setProxyHost">
      <!-- Network -->     
      <description>Proxy host if http access use http proxy. NONE = no proxy.
      </description>
      <name>ProxyHost</name>
      <type>java.lang.String</type>
      <descriptors>
         <value value="NONE"/>
      </descriptors>
   </attribute>
   <attribute access="read-write" getMethod="getProxyPort" setMethod="setProxyPort">
      <!-- Network -->     
      <description>Proxy port if http access use http proxy.
      </description>
      <name>ProxyPort</name>
      <type>int</type>
      <descriptors>
         <value value="3128"/>
      </descriptors>
   </attribute>
   <attribute access="read-write" getMethod="getKeyStoreURL" setMethod="setKeyStoreURL">
      <!-- Security -->     
      <description>URL of keystore containing certificate to identify this Document Source,
         when running in TLS mode.
      </description>
      <name>KeyStoreURL</name>
      <type>java.lang.String</type>
      <descriptors>
         <value value="conf/identity.p12" />
      </descriptors>
   </attribute>
   <attribute access="write-only"
      setMethod="setKeyStorePassword">
      <!-- Security -->     
      <description>The password for access to keystore,
      specified by attribute TrustStoreURL.
      </description>
      <name>KeyStorePassword</name>
      <type>java.lang.String</type>
      <descriptors>
         <value value="secret" />
      </descriptors>
   </attribute>
   <attribute access="read-write" getMethod="getTrustStoreURL" setMethod="setTrustStoreURL">
      <!-- Security -->     
      <description>URL of trust store containing accepted certificates,
         when running in TLS mode.
      </description>
      <name>TrustStoreURL</name>
      <type>java.lang.String</type>
      <descriptors>
         <value value="conf/cacerts.jks" />
      </descriptors>
   </attribute>
   <attribute access="write-only"  setMethod="setTrustStorePassword">
      <!-- Security -->     
      <description>The password for access to trust store,
      specified by attribute TrustStoreURL.
      </description>
      <name>TrustStorePassword</name>
      <type>java.lang.String</type>
      <descriptors>
         <value value="secret" />
      </descriptors>
   </attribute>
   <attribute access="read-write" getMethod="getAllowedUrlHost" setMethod="setAllowedUrlHost">
      <description>URL Hostname for HTTPS Hostname checking. CERT (from Certificate (standard)), 
      		* (no Check), hostname (only this URL Hostname).
      </description>
      <name>AllowedUrlHost</name>
      <type>java.lang.String</type>
      <descriptors>
         <value value="CERT" />
      </descriptors>
   </attribute>
 
   <attribute access="read-write"
      getMethod="isLogRequestMessage"
      setMethod="setLogRequestMessage">
      <description>Enable/Disable logging of Request message (Retrieve Document Set Request).
      </description>
      <name>LogRequestMessage</name>
      <type>boolean</type>
      <descriptors>
         <value value="true" />
      </descriptors>
   </attribute>
   <attribute access="read-write"
      getMethod="isLogResponseMessage"
      setMethod="setLogResponseMessage">
      <description>Enable/Disable logging of Response message (Retrieve Document Set Response). 
      </description>
      <name>LogResponseMessage</name>
      <type>boolean</type>
      <descriptors>
         <value value="false" />
      </descriptors>
   </attribute>
   <attribute access="read-write"
      getMethod="isLogRemoteRequestMessages"
      setMethod="setLogRemoteRequestMessages">
      <description>Enable/Disable logging of Request message sent to remote repositories (Retrieve Document Set Request).
      </description>
      <name>LogRemoteRequestMessages</name>
      <type>boolean</type>
      <descriptors>
         <value value="false" />
      </descriptors>
   </attribute>
   <attribute access="read-write"
      getMethod="isLogRemoteResponseMessages"
      setMethod="setLogRemoteResponseMessages">
      <description>Enable/Disable logging of Response message received from remote repositories (Retrieve Document Set Response). 
      </description>
      <name>LogRemoteResponseMessage</name>
      <type>boolean</type>
      <descriptors>
         <value value="false" />
      </descriptors>
   </attribute>
   <attribute access="read-write"
      getMethod="isIndentXmlLog"
      setMethod="setIndentXmlLog">
      <description>Enable/disable indention of logged XML message.
      </description>
      <name>IndentXmlLog</name>
      <type>boolean</type>
      <descriptors>
         <value value="true" />
      </descriptors>
   </attribute>
   <attribute access="read-write"
      getMethod="isSaveRequestAsFile"
      setMethod="setSaveRequestAsFile">
      <description>Save Provide And Register Document Set Request as file.
      </description>
      <name>SaveRequestAsFile</name>
      <type>boolean</type>
      <descriptors>
         <value value="true" />
      </descriptors>
   </attribute> 
   <attribute access="read-write" getMethod="getDocumentStoreService" setMethod="setDocumentStoreService">
      <description>Used internally - do NOT modify.</description>
      <name>DocumentStoreService</name>
      <type>javax.management.ObjectName</type>
      <descriptors>
         <value value="dcm4chee.xds:service=XDSStoreService"/>
      </descriptors>
   </attribute>

       &defaultAttributes;
       
       <!-- Operations -->
       &defaultOperations;
       
   <operation impact="ACTION">
      <description><![CDATA[ Retrieve Document Set.<br/>
      		]]> </description>
      <name>retrieveDocumentSet</name>
      <parameter>
        <description>The RetrieveDocumentSetRequestType Object</description>
        <name>RetrieveDocumentSetRequestType</name>
        <type>org.dcm4chee.xds.common.infoset.RetrieveDocumentSetRequestType</type>
      </parameter>
      <parameter>
        <description>Repository Unique ID of the local Repository. </description>
        <name>RepositoryUID</name>
        <type>java.lang.String</type>
      </parameter>
      <return-type>org.dcm4chee.xds.common.infoset.RetrieveDocumentSetResponseType</return-type>
   </operation>

    </xmbean>
  </mbean>
</server>