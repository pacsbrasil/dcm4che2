<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mbean PUBLIC "-//JBoss//DTD JBOSS XMBEAN 1.1//EN" "http://www.jboss.org/j2ee/dtd/jboss_xmbean_1_1.dtd">

<!--  Version $Revision:$ $Date:$ -->
<server>
  <mbean code="org.dcm4chee.web.service.MoveScuService" 
         name="dcm4chee.web:service=MoveScu"
         xmbean-dd="">

    <xmbean>
      <description><![CDATA[<b>DICOM Echo Service</b>
		]]> </description>

    <descriptors>
       <persistence persistPolicy="OnUpdate"/>
       <persistence-manager value="org.jboss.mx.persistence.DelegatingPersistenceManager" />
    </descriptors>

    <class>org.dcm4chee.web.service.MoveScuService</class>

    <constructor>
         <description>The default constructor</description>
         <name>MoveScuService</name>
    </constructor>
      
   <attribute access="read-write"
      getMethod="getCallingAET"
      setMethod="setCallingAET">
      <description>Calling AE title of the Move SCU.
      </description>
      <name>CallingAETitle</name>
      <type>java.lang.String</type>
      <descriptors>
         <value value="DCM4CHEE" />
      </descriptors>
   </attribute>

   <attribute access="read-write"
      getMethod="getCalledAET"
      setMethod="setCalledAET">
      <description>Default AE title of the Move SCP. Only effective if retrieveAET is not set in move operation!
      </description>
      <name>CalledAETitle</name>
      <type>java.lang.String</type>
      <descriptors>
         <value value="DCM4CHEE" />
      </descriptors>
   </attribute>

   <attribute access="read-write" getMethod="isRelationQR" setMethod="setRelationQR">
      <description>Enable Relational-query support.</description>
      <name>RelationalQR</name>
      <type>boolean</type>
      <descriptors>
         <value value="true"/>
      </descriptors>
   </attribute>

   <attribute access="read-write" getMethod="getPriority" setMethod="setPriority">
      <description>Priority used in C-MOVE requests.
      Enumerated Values: LOW, MEDIUM, HIGH.
      </description>
      <name>Priority</name>
      <type>java.lang.String</type>
      <descriptors>
         <value value="MEDIUM"/>
      </descriptors>
   </attribute>
   
   <attribute access="read-write"
     getMethod="getConnectTimeout"
     setMethod="setConnectTimeout">
      <description>Connection timeout in ms. 0 = no timeout</description>
      <name>ConnectTimeout</name>
      <type>int</type>
      <descriptors>
         <value value="0"/>
      </descriptors>
   </attribute>
   <attribute access="read-write"
     getMethod="getAcceptTimeout"
     setMethod="setAcceptTimeout">
      <description>A-Associate accept timeout in milliseconds. 0 = no timeout.</description>
      <name>AcceptTimeout</name>
      <type>int</type>
      <descriptors>
         <value value="10000"/>
      </descriptors>
   </attribute>
   <attribute access="read-write" 
     getMethod="getRetrieveRspTimeout"
     setMethod="setRetrieveRspTimeout">
      <description>Timeout in milliseconds for receiving DIMSE-RSP for an open C-MOVE request. 0 = no timeout.
      </description>
      <name>RetrieveRspTimeout</name>
      <type>int</type>
      <descriptors>
         <value value="60000"/>
      </descriptors>
   </attribute>
   <attribute access="read-write"
     getMethod="getReleaseTimeout"
     setMethod="setReleaseTimeout">
      <description>Timeout in ms for receiving A-RELEASE-RP.
      </description>
      <name>ReleaseTimeout</name>
      <type>int</type>
      <descriptors>
         <value value="5000"/>
      </descriptors>
   </attribute>
   <attribute access="read-write"
     getMethod="getSocketCloseDelay"
     setMethod="setSocketCloseDelay">
      <description>Delay in ms for Socket close after sending A-ABORT.
      </description>
      <name>SocketCloseDelay</name>
      <type>int</type>
      <descriptors>
         <value value="50"/>
      </descriptors>
   </attribute>
   <attribute access="read-write"
      getMethod="getMaxPDULengthReceive"
      setMethod="setMaxPDULengthReceive">
      <description>Maximum protocol data unit (PDU) package length for receiving PDUs.
      </description>
      <name>MaximumPDULengthReceive</name>
      <type>int</type>
      <descriptors>
         <value value="16352"/>
      </descriptors>
   </attribute>
   <attribute access="read-write"
      getMethod="getMaxOpsInvoked"
      setMethod="setMaxOpsInvoked">
      <description>Maximum number of outstanding operations this MOVE SCU will invoke on one Association. 0 = no limit
      </description>
      <name>getMaxOpsInvoked</name>
      <type>int</type>
      <descriptors>
         <value value="0"/>
      </descriptors>
   </attribute>
   <attribute access="read-write"
      getMethod="isTcpNoDelay"
      setMethod="setTcpNoDelay">
      <description>Send packets as quickly as possible (Disable Nagle's algorithmn).
      </description>
      <name>TcpNoDelay</name>
      <type>boolean</type>
      <descriptors>
         <value value="true" />
      </descriptors>
   </attribute>
   
   <attribute access="read-write"
      getMethod="getKeyStoreURL"
      setMethod="setKeyStoreURL">
      <description>URL of key store containing key used in SSL handshake,
         when running in TLS mode.
      </description>
      <name>KeyStoreURL</name>
      <type>java.lang.String</type>
      <descriptors>
         <value value="resource:certificates/test_sys_1.p12" />
      </descriptors>
   </attribute>
   <attribute access="write-only"
      setMethod="setKeyStorePassword">
      <description>The password for access to key store,
      specified by attribute KeyStoreURL.
      </description>
      <name>KeyStorePassword</name>
      <type>java.lang.String</type>
      <descriptors>
         <value value="secret" />
      </descriptors>
   </attribute>
   <attribute access="read-write"
      getMethod="getKeyPassword"
      setMethod="setKeyPassword">
      <description>The password for the private key,
      Set NONE to use KeyStorePassword. Note: return ****** for not NONE values!
      </description>
      <name>KeyPassword</name>
      <type>java.lang.String</type>
      <descriptors>
         <value value="NONE" />
      </descriptors>
   </attribute>
   <attribute access="read-write"
      getMethod="getKeyStoreType"
      setMethod="setKeyStoreType">
      <description>Type of KeyStore for private key.
      </description>
      <name>KeyStoreType</name>
      <type>java.lang.String</type>
      <descriptors>
         <value value="PKCS12" />
      </descriptors>
   </attribute>
   <attribute access="read-write"
      getMethod="getTrustStoreURL"
      setMethod="setTrustStoreURL">
      <description>URL of trust store containing accepted certificates,
         when running in TLS mode.
      </description>
      <name>TrustStoreURL</name>
      <type>java.lang.String</type>
      <descriptors>
         <value value="resource:certificates/mesa_certs.jks" />
      </descriptors>
   </attribute>
   <attribute access="write-only"
      setMethod="setTrustStorePassword">
      <description>The password for access to trust store,
      specified by attribute TrustStoreURL.
      </description>
      <name>TrustStorePassword</name>
      <type>java.lang.String</type>
      <descriptors>
         <value value="secret" />
      </descriptors>
   </attribute>
   <attribute access="read-write"
      getMethod="getTrustStoreType"
      setMethod="setTrustStoreType">
      <description>Type of KeyStore for trusted public keys.
      </description>
      <name>TrustStoreType</name>
      <type>java.lang.String</type>
      <descriptors>
         <value value="JKS" />
      </descriptors>
   </attribute>
   <attribute access="read-write"
      getMethod="getTlsProtocol"
      setMethod="setTlsProtocol">
      <!-- Security -->     
      <description><![CDATA[Comma separated list of protocol versions enabled
      for use on this connection. Possible values: TLSv1,SSLv3,SSLv2Hello]]>
      </description>
      <name>TLSProtocols</name>
      <type>java.lang.String</type>
      <descriptors>
         <value value="TLSv1,SSLv3" />
      </descriptors>
   </attribute>
   <attribute access="read-write"
      getMethod="isNeedClientAuth"
      setMethod="setNeedClientAuth">
      <!-- Security -->     
      <description><![CDATA[Set to <tt>true</tt> if client authentication is
      required, or <tt>false</tt> if no client authentication is desired.]]>
      </description>
      <name>NeedClientAuthentication</name>
      <type>boolean</type>
      <descriptors>
         <value value="true" />
      </descriptors>
   </attribute>

   &defaultAttributes;
   
   <!-- Operations -->
   &defaultOperations;

   <operation impact="ACTION">
      <description><![CDATA[ Perform a DICOM C-MOVE to given Application Entity.
      		]]> </description>
      <name>move</name>
      <parameter>
        <description>Application Entity Title of MOVE SCP (retrieve AET)</description>
        <name>retrieveAET</name>
        <type>java.lang.String</type>
      </parameter>
      <parameter>
        <description>Application Entity Title of MOVE destination</description>
        <name>destAET</name>
        <type>java.lang.String</type>
      </parameter>
      <parameter>
        <description>Patient ID</description>
        <name>patID</name>
        <type>java.lang.String</type>
      </parameter>
      <parameter>
        <description>Study Instance UID</description>
        <name>studyIUID</name>
        <type>java.lang.String</type>
      </parameter>
      <parameter>
        <description>Series Instance UID</description>
        <name>seriesIUID</name>
        <type>java.lang.String</type>
      </parameter>
      <return-type>boolean</return-type>
   </operation>
       
   <operation impact="ACTION">
      <description><![CDATA[ Perform a DICOM C-MOVE to given Application Entity.
      		]]> </description>
      <name>move</name>
      <parameter>
        <description>Application Entity Title of MOVE SCP (retrieve AET)</description>
        <name>retrieveAET</name>
        <type>java.lang.String</type>
      </parameter>
      <parameter>
        <description>Application Entity Title of MOVE destination</description>
        <name>destAET</name>
        <type>java.lang.String</type>
      </parameter>
      <parameter>
        <description>Patient ID</description>
        <name>patID</name>
        <type>java.lang.String</type>
      </parameter>
      <parameter>
        <description>Study Instance UIDs</description>
        <name>studyIUIDs</name>
        <type>[Ljava.lang.String;</type>
      </parameter>
      <parameter>
        <description>Series Instance UIDs</description>
        <name>seriesIUIDs</name>
        <type>[Ljava.lang.String;</type>
      </parameter>
      <parameter>
        <description>SOP Instance UIDs</description>
        <name>seriesIUIDs</name>
        <type>[Ljava.lang.String;</type>
      </parameter>
      <parameter>
        <description>DIMSE Response Handler</description>
        <name>rspHandler</name>
        <type>org.dcm4che2.net.DimseRSPHandler</type>
      </parameter>
      <parameter>
        <description>Wait until MOVE Request has finished and close Association. If set to false you have to manage this yourself (DimseRSPHandler)!
        </description>
        <name>waitAndCloseAssoc</name>
        <type>boolean</type>
      </parameter>
      
      <return-type>void</return-type>
   </operation>

   <operation impact="ACTION">
      <description><![CDATA[ Perform a DICOM Echo to given Application Entity.
      		]]> </description>
      <name>echo</name>
      <parameter>
        <description>Application Entity Title</description>
        <name>aet</name>
        <type>java.lang.String</type>
      </parameter>
      <return-type>boolean</return-type>
   </operation>
    </xmbean>
  </mbean>
</server>