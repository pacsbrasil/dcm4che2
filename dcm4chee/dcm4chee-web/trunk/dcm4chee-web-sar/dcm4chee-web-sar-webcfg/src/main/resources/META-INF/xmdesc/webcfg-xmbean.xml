<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mbean PUBLIC "-//JBoss//DTD JBOSS XMBEAN 1.1//EN" "http://www.jboss.org/j2ee/dtd/jboss_xmbean_1_1.dtd">

<!--  Version $Revision:$ $Date:$ -->
<mbean>
      <description><![CDATA[<b>Web3 Configuration Service</b>
		]]> </description>

    <descriptors>
       <persistence persistPolicy="OnUpdate"/>
       <persistence-manager value="org.jboss.mx.persistence.DelegatingPersistenceManager" />
    </descriptors>

    <class>org.dcm4chee.web.service.webcfg.WebCfgService</class>

    <constructor>
         <description>The default constructor</description>
         <name>WebCfgService</name>
    </constructor>

   <attribute access="read-write"
      getMethod="getWebConfigPath"
      setMethod="setWebConfigPath">
      <description><![CDATA[
        Configuration Path for web specific config files.<br/>
        A relative path name is resolved relative to archive-install-directory/server/default/.]]>
      </description>
      <name>WebConfigPath</name>
      <type>java.lang.String</type>
      <descriptors>
         <value value="conf/dcm4chee-web3"/>
      </descriptors>
   </attribute>
   <attribute access="read-write"
      getMethod="getDicomSecurityServletUrl"
      setMethod="setDicomSecurityServletUrl">
      <description><![CDATA[
        URL for the dicom security servlet 
        for web container based sso authentication.]]>
      </description>
      <name>dicomSecurityServletUrl</name>
      <type>java.lang.String</type>
      <descriptors>
         <value value="http://localhost:8080/dcm4chee-web3-dicom/dicom-security-servlet"/>
      </descriptors>
   </attribute>
   <attribute access="read-write"
      getMethod="getWadoBaseURL"
      setMethod="setWadoBaseURL">
      <description><![CDATA[
        WADO Base URL if WADO Service is not in the same WEB container.<br/>
        NONE: WADO service is in same container.]]>
      </description>
      <name>WadoBaseURL</name>
      <type>java.lang.String</type>
      <descriptors>
         <value value="NONE"/>
      </descriptors>
   </attribute>
   <attribute access="read-write"
      getMethod="getRIDBaseURL"
      setMethod="setRIDBaseURL">
      <description><![CDATA[
        Retrieve Information for Display Base URL if RID Service is not in the same WEB container.<br/>
        NONE: RID service is in same container.]]>
      </description>
      <name>RIDBaseURL</name>
      <type>java.lang.String</type>
      <descriptors>
         <value value="NONE"/>
      </descriptors>
   </attribute>
   <attribute access="read-only" getMethod="getInstalledWebViewer" >
      <description>Name(s) of installed WebViewer</description>
      <name>InstalledWebViewer</name>
      <type>java.lang.String</type>
   </attribute>
   <attribute access="read-write"
      getMethod="getWebviewerNames"
      setMethod="setWebviewerNames">
      <description><![CDATA[
        Name(s) of WebViewer that is used to view Dicom Objects separated by newline.<br/>
        If more than one name is configured, the WebViewer link will open a selection of these WebViewers.<br />
        NONE: Do not show WebViewer link in folder.<br />
        ANY:  All installed WebViewers.]]>
      </description>
      <name>WebviewerNames</name>
      <type>java.lang.String</type>
      <descriptors>
         <value value="NONE"/>
      </descriptors>
   </attribute>
   <attribute access="read-write"
      getMethod="getWebviewerBaseUrls"
      setMethod="setWebviewerBaseUrls">
      <description><![CDATA[
        Base URLs to open WebViewer separated by newline or '|'.<br/>
        The order of URLs must be equivalent to the order of WebviewerNames!<br />
        NONE: use default URL of the Web Viewer.<br />
        e.g.: NONE&lt;newline&gt;http://localhost:8080/webviewer&lt;newline&gt;NONE<br />
        use default URL for first and third webviewer and http://localhost:8080/webviewer for second.]]>
      </description>
      <name>WebviewerBaseUrls</name>
      <type>java.lang.String</type>
      <descriptors>
         <value value="NONE"/>
      </descriptors>
   </attribute>
      
   <attribute access="read-write"
      getMethod="getImageCUIDS"
      setMethod="setImageCUIDS">
      <description><![CDATA[
        List of image SOP Classes.
        Use either the SOP Class UID value, or the name specified in 
        DICOM Part 6, Annex A Registry of DICOM unique identifiers,
        concatenating individual words without spaces.]]>
      </description>
      <name>ImageSOPClasses</name>
      <type>java.lang.String</type>
      <descriptors>
         <value value="
           ComputedRadiographyImageStorage
           DigitalXRayImageStorageForPresentation
           DigitalXRayImageStorageForProcessing
           DigitalMammographyXRayImageStorageForPresentation
           DigitalMammographyXRayImageStorageForProcessing
           DigitalIntraoralXRayImageStorageForPresentation
           DigitalIntraoralXRayImageStorageForProcessing
           CTImageStorage
           EnhancedCTImageStorage
           UltrasoundMultiframeImageStorage
           MRImageStorage
           EnhancedMRImageStorage
           UltrasoundImageStorage
           SecondaryCaptureImageStorage
           MultiframeSingleBitSecondaryCaptureImageStorage
           MultiframeGrayscaleByteSecondaryCaptureImageStorage
           MultiframeGrayscaleWordSecondaryCaptureImageStorage
           MultiframeTrueColorSecondaryCaptureImageStorage
           XRayAngiographicImageStorage
           EnhancedXAImageStorage
           XRayRadiofluoroscopicImageStorage
           EnhancedXRFImageStorage
           NuclearMedicineImageStorage
           VLEndoscopicImageStorage
           VLMicroscopicImageStorage
           VLSlideCoordinatesMicroscopicImageStorage
           VLPhotographicImageStorage
           OphthalmicPhotography8BitImageStorage
           OphthalmicPhotography16BitImageStorage
           PositronEmissionTomographyImageStorage
           RTImageStorage
           HardcopyGrayscaleImageStorageSOPClassRetired
           HardcopyColorImageStorageSOPClassRetired
           NuclearMedicineImageStorageRetired
           UltrasoundMultiframeImageStorageRetired
           UltrasoundMultiframeImageStorageRetired
           UltrasoundImageStorageRetired
           XRayAngiographicBiPlaneImageStorageRetired
           VLImageStorageTrialRetired
           VLMultiframeImageStorageTrialRetired
           "/>
      </descriptors>
   </attribute>
   <attribute access="read-write"
      getMethod="getVideoCUIDS"
      setMethod="setVideoCUIDS">
      <description><![CDATA[
        List of Video SOP Classes.
        Use either the SOP Class UID value, or the name specified in 
        DICOM Part 6, Annex A Registry of DICOM unique identifiers,
        concatenating individual words without spaces.]]>
      </description>
      <name>VideoSOPClasses</name>
      <type>java.lang.String</type>
      <descriptors>
         <value value="
           VideoEndoscopicImageStorage
           VideoMicroscopicImageStorage
           VideoPhotographicImageStorage"/>
      </descriptors>
   </attribute>
   <attribute access="read-write"
      getMethod="getWaveformCUIDS"
      setMethod="setWaveformCUIDS">
      <description><![CDATA[
        List of Waveform SOP Classes.
        Use either the SOP Class UID value, or the name specified in 
        DICOM Part 6, Annex A Registry of DICOM unique identifiers,
        concatenating individual words without spaces.]]>
      </description>
      <name>WaveformSOPClasses</name>
      <type>java.lang.String</type>
      <descriptors>
         <value value="
           _12leadECGWaveformStorage
           GeneralECGWaveformStorage
           AmbulatoryECGWaveformStorage
           HemodynamicWaveformStorage
           CardiacElectrophysiologyWaveformStorage
           BasicVoiceAudioWaveformStorage
           "/>
      </descriptors>
   </attribute>
   <attribute access="read-write"
      getMethod="getSrCUIDS"
      setMethod="setSrCUIDS">
      <description><![CDATA[
        List of Structured Report Document SOP Classes.
        Use either the SOP Class UID value, or the name specified in 
        DICOM Part 6, Annex A Registry of DICOM unique identifiers,
        concatenating individual words without spaces.]]>
      </description>
      <name>SRSOPClasses</name>
      <type>java.lang.String</type>
      <descriptors>
         <value value="
           BasicTextSRStorage
           EnhancedSRStorage
           ComprehensiveSRStorage
           ProcedureLogStorage
           MammographyCADSRStorage
           KeyObjectSelectionDocumentStorage
           ChestCADSRStorage
           XRayRadiationDoseSRStorage
           "/>
      </descriptors>
   </attribute>
   <attribute access="read-write"
      getMethod="getEncapsulatedCUIDS"
      setMethod="setEncapsulatedCUIDS">
      <description><![CDATA[
        List of Encapsulated Document SOP Classes.
        Use either the SOP Class UID value, or the name specified in 
        DICOM Part 6, Annex A Registry of DICOM unique identifiers,
        concatenating individual words without spaces.]]>
      </description>
      <name>EncapsulatedCUIDS</name>
      <type>java.lang.String</type>
      <descriptors>
         <value value="
           EncapsulatedPDFStorage
           EncapsulatedCDAStorage
           "/>
      </descriptors>
   </attribute>
   <attribute access="read-write"
      getMethod="getRIDMimeTypes"
      setMethod="setRIDMimeTypes">
      <description><![CDATA[List of mime types for RID retrieve grouped by SOP Class UID groups.<br/>
      	Format: &lt;grp&gt;:&lt;mimeType&gt;[|&lt;mimeType&gt;[|...]]<br/>
      	<dl><dt>Following group names can be used:</dt>
      	<dd>SR :   Structured Report SOP Class UIDs</dd>
      	<dd>ECG:   Waveform SOP Class UIDs</dd>
      	<dd>DOC:   Encapsulated Document Storage SOP Class UIDs  </dd>
      	</dl>
      ]]></description>
      <name>RIDMimeTypes</name>
      <type>java.lang.String</type>
      <descriptors>
         <value value="
         	SR:application/pdf
         	ECG:application/pdf|image/svg+xml
         	DOC:application/pdf
         	"/>
      </descriptors>
   </attribute>
   <attribute access="read-write"
      getMethod="getWindowSizeConfig"
      setMethod="setWindowSizeConfig">
      <description><![CDATA[Window size configuration of modal windows.<br/>
      	Format: &lt;name&gt;:&lt;width&gt;x&lt;height&gt;<br/>
      	<dl><dt>Following window names can be used:</dt>
      	<dd>default:   default size</dd>
      	<dd>export:    Export window in Folder</dd>
      	<dd>dcmEdit:   Dicom Edit window in Folder</dd>
      	<dd>dcmFileDisplay:   Dicom object from file window in Folder</dd>
      	<dd>addStudy:  Add new Study window in Folder</dd>
      	<dd>addSeries: Add new Series window in Folder</dd>
      	<dd>imgSelect: Image selection window</dd>
      	<dd>wado:      WADO image window</dd>
      	<dd>aeEdit:    Edit window in AE Managment</dd>
      	<dd>mpps2mwl:  MPPS to MWL link window</dd>
      	<dd>move:      Move Entities Window</dd>
      	<dd>studyPerm: Study Permission window in Folder</dd>
      	<dd>addDicomRole: Add dicom role window in study permission window</dd>
        <dd>addUser: Add user in User Management</dd>
        <dd>changePassword: Change password in User Management</dd>
        <dd>manageRoles: Manage roles in User Management</dd>
        <dd>editRole: New role and edit role in User Management</dd>
        <dd>webPermissions: Web permissions in User Management</dd>
        <dd>aetGroupAssignment: AET Group assignment in User Management</dd>
        <dd>typeAssignment: Type assignment in User Management</dd>
        <dd>editGroup: Edit group in User Management</dd>
        <dd>editAETGroup: Edit AET group in User Management</dd>
        <dd>aetAssignment: Assign AETs to AET group in User Management</dd>
        <dd>createGroup:   Create report group window in Dashboard</dd>
        <dd>reportDiagram:   size of the report diagram window</dd>
        <dd>reportDiagramImage:   size of the diagram image</dd>
        <dd>reportTable:   size of the report table window</dd>
        <dd>reportTable:   size of the window displaying both diagram image and report table</dd>
        <dd>confirmation:   size of the confirmation window</dd>
      ]]></description>
      <name>WindowSizeConfig</name>
      <type>java.lang.String</type>
      <descriptors>
         <value value="
         	default:800x600
         	export:650x500
         	aeEdit:960x700
         	mwEdit:1024x768
         	mpps2mwl:1024x600
         	move:900x320
            addDicomRole:570x350
            addUser:400x300
            changePassword:400x300
            manageRoles:300x700
            editRole:570x350
            webPermissions:300x700
            aetGroupAssignment:300x700
            typeAssignment:300x700
            editGroup:600x350
            createGroup:400x300
            editReport:850x500
            aetAssignment:300x700
            reportDiagram:1024x768
            reportDiagramImage:800x600
            reportTable:1024x768
            reportDiagramandtable:1024x768
            confirmation:400x300
         	"/>
      </descriptors>
   </attribute>
   <attribute access="read-write"
      getMethod="getModalities"
      setMethod="setModalities">
      <description><![CDATA[List of modalities.<br/>
      	Format: &lt;Modality&gt;[|&lt;Modality&gt[|..]]<br/>
      	NONE is used for an empty list. In this case a getModalityList will trigger updateModalities.
      ]]></description>
      <name>Modalities</name>
      <type>java.lang.String</type>
      <descriptors>
         <value value="NONE"/>
      </descriptors>
   </attribute>
   <attribute access="read-write"
      getMethod="isAutoUpdateModalities"
      setMethod="setAutoUpdateModalities">
      <description><![CDATA[Enable auto update of Modality list at midnight (23:59:59).
      ]]></description>
      <name>AutoUpdateModalities</name>
      <type>boolean</type>
      <descriptors>
         <value value="false"/>
      </descriptors>
   </attribute>
   <attribute access="read-write"
      getMethod="getSourceAETs"
      setMethod="setSourceAETs">
      <description><![CDATA[List of source AETs.<br/>
      	Format: &lt;AET&gt;[|&lt;AET&gt[|..]]<br/>
      	NONE is used for an empty list. In this case a getSourceAETList will trigger updateSourceAETs.
      ]]></description>
      <name>SourceAETs</name>
      <type>java.lang.String</type>
      <descriptors>
         <value value="NONE"/>
      </descriptors>
   </attribute>
   <attribute access="read-write"
      getMethod="isAutoUpdateSourceAETs"
      setMethod="setAutoUpdateSourceAETs">
      <description><![CDATA[Enable auto update of Source AET list at midnight(23:59:59).
      ]]></description>
      <name>AutoUpdateSourceAETs</name>
      <type>boolean</type>
      <descriptors>
         <value value="false"/>
      </descriptors>
   </attribute>
   <attribute access="read-write"
      getMethod="getStationAETs"
      setMethod="setStationAETs">
      <description><![CDATA[List of source AETs.<br/>
      	Format: &lt;AET&gt;[|&lt;AET&gt[|..]]<br/>
      	NONE is used for an empty list. In this case a getStationAETList will trigger updateStationAETs.
      ]]></description>
      <name>StationAETs</name>
      <type>java.lang.String</type>
      <descriptors>
         <value value="NONE"/>
      </descriptors>
   </attribute>
   <attribute access="read-write"
      getMethod="isAutoUpdateStationAETs"
      setMethod="setAutoUpdateStationAETs">
      <description><![CDATA[Enable auto update of Station AET list at midnight(23:59:59).
      ]]></description>
      <name>AutoUpdateStationAETs</name>
      <type>boolean</type>
      <descriptors>
         <value value="false"/>
      </descriptors>
   </attribute>
   <attribute access="read-write"
      getMethod="getStationNames"
      setMethod="setStationNames">
      <description><![CDATA[List of source AETs.<br/>
      	Format: &lt;AET&gt;[|&lt;AET&gt[|..]]<br/>
      	NONE is used for an empty list. In this case a getStationNameList will trigger updateStationNames.
      ]]></description>
      <name>StationNames</name>
      <type>java.lang.String</type>
      <descriptors>
         <value value="NONE"/>
      </descriptors>
   </attribute>
   <attribute access="read-write"
      getMethod="isAutoUpdateStationNames"
      setMethod="setAutoUpdateStationNames">
      <description><![CDATA[Enable auto update of Station Name list at midnight(23:59:59).
      ]]></description>
      <name>AutoUpdateStationNames</name>
      <type>boolean</type>
      <descriptors>
         <value value="false"/>
      </descriptors>
   </attribute>

   <attribute access="read-write"
      getMethod="getPagesizes"
      setMethod="setPagesizes">
      <description><![CDATA[List of Pagesizes.<br/>
      	This list is used in folder and worklist console to provide a choice how many results are shown in one page.
      ]]></description>
      <name>Pagesizes</name>
      <type>java.lang.String</type>
      <descriptors>
         <value value="
         	10
         	25
         	50
         	100
			"/>
      </descriptors>
   </attribute>
   <attribute access="read-write"
      getMethod="getDefaultFolderPagesize"
      setMethod="setDefaultFolderPagesize">
      <description>Default pagesize in folder.</description>
      <name>DefaultFolderPagesize</name>
      <type>int</type>
      <descriptors>
         <value value="10"/>
      </descriptors>
   </attribute>
   <attribute access="read-write"
      getMethod="getDefaultMWLPagesize"
      setMethod="setDefaultMWLPagesize">
      <description>Default pagesize in worklist console.</description>
      <name>DefaultMWLPagesize</name>
      <type>int</type>
      <descriptors>
         <value value="10"/>
      </descriptors>
   </attribute>
   <attribute access="read-write"
      getMethod="isQueryAfterPagesizeChange"
      setMethod="setQueryAfterPagesizeChange">
      <description>If enabled a query will be initiated when the page size has changed.</description>
      <name>QueryAfterPagesizeChange</name>
      <type>boolean</type>
      <descriptors>
         <value value="true"/>
      </descriptors>
   </attribute>

   <attribute access="read-write"
      getMethod="isUseFamilyAndGivenNameQueryFields"
      setMethod="setUseFamilyAndGivenNameQueryFields">
      <description><![CDATA[Enable query of Patient Name with separate family and given name fields.<br/>
      		If disabled the query for patient name components is 
      		'&lt;familyname&gt;^&lt;givenname&lt;^&lt;middlename&lt;^&lt;prefix&lt;^&lt;suffix&lt;^&lt;degree&lt;.
      ]]></description>
      <name>useFamilyAndGivenNameQueryFields</name>
      <type>boolean</type>
      <descriptors>
         <value value="false"/>
      </descriptors>
   </attribute>

   <attribute access="read-write"
      getMethod="isForcePatientExpandableForPatientQuery"
      setMethod="setForcePatientExpandableForPatientQuery">
      <description><![CDATA[Force that patients are expandable after patient query.<br/>
      		true...Avoid additional queries (count studies for patient)<br />
      		false..Patients are only expandable if patient has at least one viewable study. 
      ]]></description>
      <name>forcePatientExpandableForPatientQuery</name>
      <type>boolean</type>
      <descriptors>
         <value value="false"/>
      </descriptors>
   </attribute>

   <attribute access="read-write"
      getMethod="getMpps2mwlPresetPatientname"
      setMethod="setMpps2mwlPresetPatientname">
      <description><![CDATA[Preset Value of Patient name searchfiled in MPPS to MWL Link dialog.<br/>
      	<dl><dt>The value can be:</dt>
      	<dd>delete...Delete the input field.</dd>
      	<dd>*........Use full patient name of MPPS.</dd>
      	<dd>&lt;num&gt;....Number of leading chars of MPPS patient name. (e.g. 3: 'Caliskan' --&gt; 'Cal')</dd></dl> 
      ]]></description>
      <name>Mpps2mwlPresetPatientname</name>
      <type>java.lang.String</type>
      <descriptors>
         <value value="3"/>
      </descriptors>
   </attribute>
   <attribute access="read-write"
      getMethod="getMpps2mwlPresetModality"
      setMethod="setMpps2mwlPresetModality">
      <description><![CDATA[Preset Value of Modality searchfiled in MPPS to MWL Link dialog.<br/>
      	<dl><dt>The value can be:</dt>
      	<dd>delete...Delete the input field.</dd>
      	<dd>mpps.....Modality of MPPS.</dd>
      ]]></description>
      <name>Mpps2mwlPresetModality</name>
      <type>java.lang.String</type>
      <descriptors>
         <value value="mpps"/>
      </descriptors>
   </attribute>
   <attribute access="read-write"
      getMethod="getMpps2mwlPresetStartDate"
      setMethod="setMpps2mwlPresetStartDate">
      <description><![CDATA[Preset Value of Start Date searchfiled in MPPS to MWL Link dialog.<br/>
      	<dl><dt>The value can be:</dt>
      	<dd>delete..........................Delete the input field.</dd>
      	<dd>mpps[(startOffset,endOffset)]...Use day of startdate of MPPS.</dd>
      	<dd>today[(startOffset,endOffset]...Use current day.</dd>
      	</dl>
      	The optional (startOffset,endOffset) can be used to extend/move the search date range.<br />
      	e.g. mpps(-1,2): Date range is: one day before PPS Start date and 2 days after.<br />
      	'today(0,1)': Date range is: current day and next day.<br />
      	Note: dont use + for positive numbers!
      ]]></description>
      <name>Mpps2mwlPresetStartDate</name>
      <type>java.lang.String</type>
      <descriptors>
         <value value="mpps"/>
      </descriptors>
   </attribute>
   <attribute access="read-write"
      getMethod="isMpps2mwlAutoQuery"
      setMethod="setMpps2mwlAutoQuery">
      <description><![CDATA[Enable auto query if MPPS Link dialog is opened.
      ]]></description>
      <name>Mpps2mwlAutoQuery</name>
      <type>boolean</type>
      <descriptors>
         <value value="false"/>
      </descriptors>
   </attribute>

   <attribute access="read-write"
      getMethod="getMoveScuServiceName"
      setMethod="setMoveScuServiceName">
      <description>Used internally. Do NOT modify.
      </description>
      <name>moveScuServiceName</name>
      <type>javax.management.ObjectName</type>
      <descriptors>
         <value value="dcm4chee.web:service=MoveScu"/>
      </descriptors>
   </attribute>
   <attribute access="read-write"
      getMethod="getAEServiceName"
      setMethod="setAEServiceName">
      <description>Used internally. Do NOT modify.
      </description>
      <name>aeServiceName</name>
      <type>javax.management.ObjectName</type>
      <descriptors>
         <value value="dcm4chee.archive:service=AE"/>
      </descriptors>
   </attribute>
   <attribute access="read-write"
      getMethod="getEchoServiceName"
      setMethod="setEchoServiceName">
      <description>Used internally. Do NOT modify.
      </description>
      <name>echoServiceName</name>
      <type>javax.management.ObjectName</type>
      <descriptors>
         <value value="dcm4chee.web:service=EchoService"/>
      </descriptors>
   </attribute>
   <attribute access="read-write"
      getMethod="getContentEditServiceName"
      setMethod="setContentEditServiceName">
      <description>Used internally. Do NOT modify.
      </description>
      <name>contentEditServiceName</name>
      <type>javax.management.ObjectName</type>
      <descriptors>
         <value value="dcm4chee.web:service=ContentEditService"/>
      </descriptors>
   </attribute>
   <attribute access="read-write"
      getMethod="getStoreBridgeServiceName"
      setMethod="setStoreBridgeServiceName">
      <description>Used internally. Do NOT modify.
      </description>
      <name>storeBridgeServiceName</name>
      <type>javax.management.ObjectName</type>
      <descriptors>
         <value value="dcm4chee.web:service=StoreBridge"/>
      </descriptors>
   </attribute>
   <attribute access="read-write"
      getMethod="getMppsEmulatorServiceName"
      setMethod="setMppsEmulatorServiceName">
      <description>Used internally. Do NOT modify.
      </description>
      <name>mppsEmulatorServiceName</name>
      <type>javax.management.ObjectName</type>
      <descriptors>
         <value value="dcm4chee.archive:service=MPPSEmulator"/>
      </descriptors>
   </attribute>
   <attribute access="read-write"
      getMethod="getTarRetrieveServiceName"
      setMethod="setTarRetrieveServiceName">
      <description>Used internally. Do NOT modify.
      </description>
      <name>tarRetrieveServiceName</name>
      <type>javax.management.ObjectName</type>
      <descriptors>
         <value value="dcm4chee.archive:service=TarRetriever"/>
      </descriptors>
   </attribute>
   <attribute access="read-write"
      getMethod="getLoginAllowedRolename"
      setMethod="setLoginAllowedRolename">
      <description><![CDATA[Rolename for which login is allowed.
      ]]></description>
      <name>loginAllowedRolename</name>
      <type>java.lang.String</type>
      <descriptors>
         <value value="LoginAllowed"/>
      </descriptors>
   </attribute>
   <attribute access="read-write"
      getMethod="getStudyPermissionsAllRolename"
      setMethod="setStudyPermissionsAllRolename">
      <description><![CDATA[Rolename that can manage all study permissions.
      ]]></description>
      <name>studyPermissionsAllRolename</name>
      <type>java.lang.String</type>
      <descriptors>
         <value value="StudyPermissionsAll"/>
      </descriptors>
   </attribute>
   <attribute access="read-write"
      getMethod="getStudyPermissionsOwnRolename"
      setMethod="setStudyPermissionsOwnRolename">
      <description><![CDATA[Rolename that can manage own study permissions.
      ]]></description>
      <name>studyPermissionsOwnRolename</name>
      <type>java.lang.String</type>
      <descriptors>
         <value value="StudyPermissionsOwn"/>
      </descriptors>
   </attribute>
   <attribute access="read-write"
      getMethod="getUserMgtUserRole"
      setMethod="setUserMgtUserRole">
      <description><![CDATA[User Rolename for User Management.
      ]]></description>
      <name>UserMgtUserRole</name>
      <type>java.lang.String</type>
      <descriptors>
         <value value="WebUser"/>
      </descriptors>
   </attribute>
   <attribute access="read-write"
      getMethod="getUserMgtAdminRole"
      setMethod="setUserMgtAdminRole">
      <description><![CDATA[Admin Rolename for User Management.
      ]]></description>
      <name>UserMgtAdminRole</name>
      <type>java.lang.String</type>
      <descriptors>
         <value value="WebAdmin"/>
      </descriptors>
   </attribute>
   <attribute access="read-write"
      getMethod="isManageUsers"
      setMethod="setManageUsers">
      <description><![CDATA[Manage users in the web application.
      ]]></description>
      <name>manageUsers</name>
      <type>boolean</type>
      <descriptors>
         <value value="true"/>
      </descriptors>
   </attribute>
   <attribute access="read-write"
      getMethod="isManageStudyPermissions"
      setMethod="setManageStudyPermissions">
      <description><![CDATA[Let the web users manage study permissions using the web interface.
      ]]></description>
      <name>manageStudyPermissions</name>
      <type>boolean</type>
      <descriptors>
         <value value="false"/>
      </descriptors>
   </attribute>
   <attribute access="read-write"
      getMethod="isUseStudyPermissions"
      setMethod="setUseStudyPermissions">
      <description><![CDATA[Apply the study permissions to the web application features.
      ]]></description>
      <name>useStudyPermissions</name>
      <type>boolean</type>
      <descriptors>
         <value value="false"/>
      </descriptors>
   </attribute>
   <attribute access="read-write"
      getMethod="getTooOldLimit"
      setMethod="setTooOldLimit">
      <description><![CDATA[The time limit it is possible to edit dicom objects.
      <br>Can be specified in weeks (##w) or days (##d).
      <br>If set to NEVER the feature will not be used.
      ]]></description>
      <name>tooOldLimit</name>
      <type>java.lang.String</type>
      <descriptors>
         <value value="NEVER"/>
      </descriptors>
   </attribute>
   <attribute access="read-write"
      getMethod="getIgnoreEditTimeLimitRolename"
      setMethod="setIgnoreEditTimeLimitRolename">
      <description><![CDATA[Rolename which may ignore the configured edit time limit (tooOldLimit) for dicom objects.
      ]]></description>
      <name>ignoreEditTimeLimitRolename</name>
      <type>java.lang.String</type>
      <descriptors>
         <value value="IgnoreEditTimeLimit"/>
      </descriptors>
   </attribute>

   &defaultAttributes;
   
   <!-- Operations -->
   &defaultOperations;

   <operation impact="ACTION">
      <description><![CDATA[ <dl><dt>Check the type of given SOP Class UID.<dt/>
      			<dd>0...Image</dd>
      			<dd>1...Structured Report</dd>
      			<dd>2...Video</dd>
      			<dd>3...Encapsulated Document</dd>
      			<dd>4...Waveform</dd>
      			<dd>-1..Not classified</dd>
      		]]> </description>
      <name>checkCUID</name>
      <parameter>
        <description>SOP Class UID</description>
        <name>sopClassUID</name>
        <type>java.lang.String</type>
      </parameter>
      <return-type>int</return-type>
   </operation>
   <operation impact="ACTION">
      <description><![CDATA[ Return a list of MIME types that are supported by RID service and viewer according 
            configured RID MIME types.
      		]]> </description>
      <name>getRIDMimeTypesForCuid</name>
      <parameter>
        <description>SOP Class UID</description>
        <name>sopClassUID</name>
        <type>java.lang.String</type>
      </parameter>
      <return-type>java.util.List</return-type>
   </operation>
   <operation impact="ACTION">
      <description>Get window size for given window name. Return an int[] with 0..width and 1..height</description>
      <name>getWindowSize</name>
      <parameter>
        <description>Name of window</description>
        <name>name</name>
        <type>java.lang.String</type>
      </parameter>
      <return-type>[I</return-type>
   </operation>
   <operation impact="ACTION">
      <description>Get List of modalities</description>
      <name>getModalityList</name>
      <return-type>java.util.List</return-type>
   </operation>
   <operation impact="ACTION">
      <description>Get List of source AETs</description>
      <name>getSourceAETList</name>
      <return-type>java.util.List</return-type>
   </operation>
   <operation impact="ACTION">
      <description>Get List of Station AETs</description>
      <name>getStationAETList</name>
      <return-type>java.util.List</return-type>
   </operation>
   <operation impact="ACTION">
      <description>Get List of Station Names</description>
      <name>getStationNameList</name>
      <return-type>java.util.List</return-type>
   </operation>
   <operation impact="ACTION">
      <description>Get List of Page sizes</description>
      <name>getPagesizeList</name>
      <return-type>java.util.List</return-type>
   </operation>
   <operation impact="ACTION">
      <description><![CDATA[Get List of WebViewer names<br />
      	Note: null means ANY and an empty list means NONE
      ]]></description>
      <name>getWebviewerNameList</name>
      <return-type>java.util.List</return-type>
   </operation>
   <operation impact="ACTION">
      <description><![CDATA[Get List of installed WebViewer names<br />
      	Note: null indicates an error.
      ]]></description>
      <name>getInstalledWebViewerNameList</name>
      <return-type>java.util.List</return-type>
   </operation>
   <operation impact="ACTION">
      <description>Get List of WebViewer Base URLs</description>
      <name>getWebviewerBaseUrlList</name>
      <return-type>java.util.List</return-type>
   </operation>
   <operation impact="ACTION">
      <description>Update List of modalities by querying database</description>
      <name>updateModalities</name>
      <return-type>void</return-type>
   </operation>
   <operation impact="ACTION">
      <description>Update List of source AETs by querying database</description>
      <name>updateSourceAETs</name>
      <return-type>void</return-type>
   </operation>
   <operation impact="ACTION">
      <description>Update List of Station AETs by querying database</description>
      <name>updateStationAETs</name>
      <return-type>void</return-type>
   </operation>
   <operation impact="ACTION">
      <description>Update List of Station Names by querying database</description>
      <name>updateStationNames</name>
      <return-type>void</return-type>
   </operation>
   <operation impact="ACTION">
      <description>Synchronize the role table with the assigned dicom roles of the dicom context</description>
      <name>updateDicomRoles</name>
   </operation>
</mbean>