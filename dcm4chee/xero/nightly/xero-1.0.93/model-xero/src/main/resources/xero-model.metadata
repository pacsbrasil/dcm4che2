# Define some meta-data about the dynamic portion of the model

static=${class:org.dcm4chee.xero.metadata.access.MapWithDefaults}
model=${factory:org.dcm4chee.xero.metadata.access.MapWithDefaults}

# Static data is all the data to include both client and server 
model.lazy=${ref:static}

static.nameJSTemplate=${class:org.antlr.stringtemplate.js.NameJSTemplate}

static.shared=${ref:shared}

static.js_static=${class:org.dcm4chee.xero.rhino.JavaScriptMapFactory}
static.js_static.script.inherit=templateGroup
static.js_static.script.model=${ref:static}
static.js_static.script.template=serverjs
static.js_static.modifiable=false

# Define the javascript model
model.js=${class:org.dcm4chee.xero.rhino.JavaScriptMapFactory}
model.js.script=var model=new XeroModel(_SARISSA_IS_IE);
model.js.parentScopeName=js_static
model.js.imported=${class:org.dcm4chee.xero.metadata.access.MapWithDefaults}
model.js.imported._SARISSA_IS_IE=IS_IE

model.layout=${class:org.dcm4chee.xero.rhino.PathInstance}
model.layout.var=js.model.layout

model.findLayout=${class:org.dcm4chee.xero.rhino.PathInstance}
model.findLayout.var=js.model.findLayout

model.layout=${class:org.dcm4chee.xero.rhino.PathInstance}
model.layout.var=js.model.layout

model.searchLayout=${class:org.dcm4chee.xero.rhino.PathInstance}
model.searchLayout.var=js.model.searchLayout

model.queryBox=${class:org.dcm4chee.xero.rhino.PathInstance}
model.queryBox.var=js.model.queryBox

static.i=${class:org.dcm4chee.xero.rhino.PathInstance}
static.i.var=js_static.i

shared=${class:org.dcm4chee.xero.metadata.access.MapWithDefaults}
shared.studyTrayItems=${class:org.dcm4chee.xero.metadata.access.ValueList}

static.scripts=${class:org.dcm4chee.xero.metadata.access.ValueList}
static.scripts.events=js/Events.js
static.scripts.events.priority=900
static.scripts.sarissa=js/sarissa.js
static.scripts.sarissa.priority=1000
static.scripts.xerojs=xerojs.jst

# Define the template group that creates rendered objects such as JavaScript, and later on, views.
# The SAME group is used throughout, only adding new group names to add content.
templateGroup=${class:org.dcm4chee.xero.template.AutoStringTemplateGroup}
templateGroup.refreshInterval=5
templateGroup.attributeRenderersName=js
templateGroup.groupNames=${class:org.dcm4chee.xero.metadata.access.ValueList}
templateGroup.groupNames.xeroModel=xeroModel
templateGroup.groupNames.jstemplate=jstemplate

# Define the JavaScript templates to include to define the xero model data.  
# The order can be set by defining priorities if needed - default priority is MAX_INT, NOT zero,
# and order is increasing priority (highest priority last)
static.xeroModels=${class:org.dcm4chee.xero.metadata.access.ValueList}
static.xeroModels.urlFactory=urlFactory
static.xeroModels.xmlModel=xmlModel
static.xeroModels.xmlModel.priority=75
static.xeroModels.layout=layout/layout
static.xeroModels.layout.priority=100
static.xeroModels.sortPatient=sortPatient
static.xeroModels.imageLayout=layout/imageLayout
static.xeroModels.displayLayout=layout/displayLayout
static.xeroModels.displayLayout.priority=200
static.xeroModels.merged=merged
static.xeroModels.navConversation=navConversation
static.xeroModels.studyData=studyData
static.xeroModels.navigation=navigation
static.xeroModels.tabs=layout/tabs
static.xeroModels.studyTrayItems=model/studyTrayItems
