<x:xsl
   pageConfig="#{ (pageConfig!=null ? pageConfig : metadata.types).typeOutput }"
   xmlns:x="http://www.dcm4che.org/xero/jsf"
   xmlns:ui="http://java.sun.com/jsf/facelets"
   xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
   xmlns:m="http://www.dcm4che.org/xero/metadata/types/typeOutput"
   m:includeXsl="/types/typeOutput.xhtml"
   m:messages.inherit="types.messages"
   xmlns:c="http://java.sun.com/jstl/core"
   m:Name.template="rawConverter"
   m:string.template="rawConverter"
   m:UID.template="rawConverter"
   m:Modality.template="rawConverter"
   m:DateTime.template="rawConverter"
   m:StudySelector.template="studyCheckboxConverter"
   m:PatientSelector.template="patientCheckboxConverter"
   m:PatientName.template="patientNameConverter"
   
>
   
<!-- The raw converter just prints out the raw value, unchanged. -->
<xsl:template name="rawConverter">
   <xsl:param name="value" />
   <xsl:value-of select="$value" />
</xsl:template>

<!-- This input type handles selection of a single study and provides a checkbox to use to select the study. -->
<xsl:template name="studyCheckboxConverter">
  <xsl:param name="value" />
  <input>
     <!-- study is not very informative, but it is short, which is worthwhile in this case. -->
     <xsl:attribute name="name">study</xsl:attribute>
     <xsl:attribute name="type">checkbox</xsl:attribute>
     <xsl:attribute name="value"><xsl:value-of select="$value" /></xsl:attribute>
     <xsl:if test="$selectedStudies[@uid=$value]">
       <xsl:attribute name="checked">true</xsl:attribute>
     </xsl:if> 
  </input>
</xsl:template>

<!--  This input type handles selection of a single patient -->
<xsl:template name="patientCheckboxConverter">
   <xsl:param name="value" />
   <input>
     <xsl:attribute name="name">patient</xsl:attribute>
     <xsl:attribute name="value">
     <xsl:for-each select="$docNode/se:results/se:patient[@PatientIdentifier=$value]">
     	<xsl:value-of select="./se:study/@StudyInstanceUID" />\
     </xsl:for-each></xsl:attribute>
     <xsl:attribute name="type">checkbox</xsl:attribute>
   </input>
</xsl:template>

<!-- This stylesheet defines an output element template that outputs the
     value of the provided item, within the given row.
 -->
<xsl:template name="outputElement">
   <xsl:param name="row" />
   <xsl:param name="type" />
   <xsl:param name="value" />
   <xsl:choose>
      <c:forEach var="converter" items="#{pageConfig}">
        <c:if test="#{converter.value.template!=null}">
          <xsl:when test="$type='#{converter.key}'">
            <xsl:call-template name="#{converter.value.template}">
              <xsl:with-param name="row" select="$row" />
              <xsl:with-param name="value" select="$value" />
            </xsl:call-template>
          </xsl:when>
        </c:if>
      </c:forEach>
      <xsl:otherwise>
        <b>Unknown type:<xsl:value-of select="$type" /> <xsl:value-of select="$value" /></b>
      </xsl:otherwise>
   </xsl:choose>
</xsl:template>

</x:xsl>