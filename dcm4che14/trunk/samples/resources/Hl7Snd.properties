usage=Usage\: java -jar hl7snd.jar [OPTION]... URL [FILE]...\nRead HL7 message from [FILE]... and send them, to the remote HL7 node\n specified by URL, using the Minimal Lower Level Protocol.\n\nUrl\: PROTOCOL\://HOST:PORT\n  PROTOCOL   Specifies protocol. Possible values:\n    mllp            MLLP default (without TLS)\n    mllp-tls        MLLP on TLS (offer DES encryption)\n    mllp-tls.3des   MLLP on TLS (force DES encryption)\n    mllp-tls.nodes  DICOM on TLS (no DES encryption)\n  HOST       Name or IP address of receiver host,\n  PORT       TCP port address, on which the receiver is listing for\n             incoming TCP Transport Connection Indication\n\nOptions (override presets defined in resource hl7snd.cfg)\:\n--ack-timeout=MSEC     time-out waiting for HL7 ACK message,\n                       0 is interpreted as an infinite timeout [default=0].\n--tls-key=KEYSTORE     get key from specified resource [default:test_sys_1.p12]\n--tls-key-passwd=PASS  password for keystore and key specified by --tls-key\n                       [default: iheihe]\n--tls-cacerts=KEYSTORE read trusted CA Certificats from specified resource\n                       [default:cacerts.jks]\n--tls-cacerts-passwd=PASS  password for keystore specified by --tls-cacerts\n                       [default: iheihe]\n--help     display this help and exit\n--version  output version information and exit
version=hl7snd version @VERSION@ compiled on @TODAY@
missing=missing argument
failread=Could not read {0} - {1}
sendDone={0} HL7 messages sent in {1} ms
try=Try 'java -jar hl7snd.jar --help' for more information.

