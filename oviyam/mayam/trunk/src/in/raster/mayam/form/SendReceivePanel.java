/* ***** BEGIN LICENSE BLOCK *****
 * Version: MPL 1.1/GPL 2.0/LGPL 2.1
 *
 * The contents of this file are subject to the Mozilla Public License Version
 * 1.1 (the "License"); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 * http://www.mozilla.org/MPL/
 *
 * Software distributed under the License is distributed on an "AS IS" basis,
 * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
 * for the specific language governing rights and limitations under the
 * License.
 *
 *
 * The Initial Developer of the Original Code is
 * Raster Images
 * Portions created by the Initial Developer are Copyright (C) 2009-2010
 * the Initial Developer. All Rights Reserved.
 *
 * Contributor(s):
 * Babu Hussain A
 * Meer Asgar Hussain B
 * Prakash J
 * Suresh V
 *
 * Alternatively, the contents of this file may be used under the terms of
 * either the GNU General Public License Version 2 or later (the "GPL"), or
 * the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
 * in which case the provisions of the GPL or the LGPL are applicable instead
 * of those above. If you wish to allow use of your version of this file only
 * under the terms of either the GPL or the LGPL, and not to allow others to
 * use your version of this file under the terms of the MPL, indicate your
 * decision by deleting the provisions above and replace them with the notice
 * and other provisions required by the GPL or the LGPL. If you do not delete
 * the provisions above, a recipient may use your version of this file under
 * the terms of any one of the MPL, the GPL or the LGPL.
 *
 * ***** END LICENSE BLOCK ***** */
package in.raster.mayam.form;

import in.raster.mayam.model.table.renderer.CellRenderer;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.Font;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author  BabuHussain
 * @version 0.5
 *
 */
public class SendReceivePanel extends javax.swing.JPanel {

    /** Creates new form SendReceivePanel */
    public static DefaultTableModel receiveTableModel;
    public static DefaultTableModel sendTableModel;

    public SendReceivePanel() {
        initComponents();
        receiveTableModel = (DefaultTableModel) this.receiveTable.getModel();

    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        receiveLabel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        receiveTable = new javax.swing.JTable();

        receiveLabel.setBackground(new java.awt.Color(0, 0, 0));
        receiveLabel.setFont(new java.awt.Font("Lucida Grande", 1, 14));
        receiveLabel.setForeground(new java.awt.Color(250, 138, 0));
        receiveLabel.setText("  Receive");
        receiveLabel.setOpaque(true);

        receiveTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "From", "Patient Id", "Patient Name", "Study Date", "Study Description", "Received", "Available", "Failed", "Last Active", "Message"
            }
        ));
        receiveTable.setDefaultRenderer(Object.class, new CellRenderer());
        //receiveTable.getTableHeader().setPreferredSize(new Dimension(this.getWidth(), 20));
        //Font receiveFont=receiveTable.getTableHeader().getFont();
        //receiveTable.getTableHeader().setFont(new Font(receiveFont.getName(),Font.PLAIN,11));
        //receiveTable.setRowHeight(20);

        receiveTable.getTableHeader().setPreferredSize(new Dimension(this.getWidth(), 23));
        Font f=new Font("Lucida Grande",Font.BOLD,12);
        receiveTable.getTableHeader().setFont(f);
        receiveTable.setRowHeight(23);
        receiveTable.getTableHeader().setForeground(new Color(255,138,0));
        receiveTable.getTableHeader().setBackground(new Color(0,0,0));
        jScrollPane1.setViewportView(receiveTable);

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(receiveLabel, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 719, Short.MAX_VALUE)
            .add(jScrollPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 719, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(receiveLabel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 24, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jScrollPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 298, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel receiveLabel;
    public javax.swing.JTable receiveTable;
    // End of variables declaration//GEN-END:variables
}
