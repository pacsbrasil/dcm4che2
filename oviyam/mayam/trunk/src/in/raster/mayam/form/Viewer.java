/* ***** BEGIN LICENSE BLOCK *****
 * Version: MPL 1.1/GPL 2.0/LGPL 2.1
 *
 * The contents of this file are subject to the Mozilla Public License Version
 * 1.1 (the "License"); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 * http://www.mozilla.org/MPL/
 *
 * Software distributed under the License is distributed on an "AS IS" basis,
 * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
 * for the specific language governing rights and limitations under the
 * License.
 *
 *
 * The Initial Developer of the Original Code is
 * Raster Images
 * Portions created by the Initial Developer are Copyright (C) 2009-2010
 * the Initial Developer. All Rights Reserved.
 *
 * Contributor(s):
 * Babu Hussain A
 * Devishree V
 * Meer Asgar Hussain B
 * Prakash J
 * Suresh V
 *
 * Alternatively, the contents of this file may be used under the terms of
 * either the GNU General Public License Version 2 or later (the "GPL"), or
 * the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
 * in which case the provisions of the GPL or the LGPL are applicable instead
 * of those above. If you wish to allow use of your version of this file only
 * under the terms of either the GPL or the LGPL, and not to allow others to
 * use your version of this file under the terms of the MPL, indicate your
 * decision by deleting the provisions above and replace them with the notice
 * and other provisions required by the GPL or the LGPL. If you do not delete
 * the provisions above, a recipient may use your version of this file under
 * the terms of any one of the MPL, the GPL or the LGPL.
 *
 * ***** END LICENSE BLOCK ***** */
package in.raster.mayam.form;

import in.raster.mayam.context.ApplicationContext;
import in.raster.mayam.form.tab.component.ButtonTabComp;
import java.awt.Toolkit;
import java.util.logging.Level;
import javax.swing.JFrame;
import javax.swing.JTabbedPane;
import javax.swing.SwingUtilities;

/**
 *
 * @author Devishree
 * @version 2.1
 */
public class Viewer extends javax.swing.JFrame {

    /**
     * Creates new form Viewer
     */
    public Viewer() {
        SwingUtilities.updateComponentTreeUI(this);
        initComponents();
        setExtendedState(JFrame.MAXIMIZED_BOTH);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle(ApplicationContext.currentBundle.getString("ImageView.title.text")); // NOI18N
        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("/in/raster/mayam/form/images/fav_mayam.png")));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                viewerWindowClosed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 876, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 542, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void viewerWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_viewerWindowClosed
        // TODO add your handling code here:
        onWindowClose();
    }//GEN-LAST:event_viewerWindowClosed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            ApplicationContext.logger.log(Level.INFO, "Viewer", ex);
        } catch (InstantiationException ex) {
            ApplicationContext.logger.log(Level.INFO, "Viewer", ex);
        } catch (IllegalAccessException ex) {
            ApplicationContext.logger.log(Level.INFO, "Viewer", ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            ApplicationContext.logger.log(Level.INFO, "Viewer", ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Viewer().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTabbedPane jTabbedPane1;
    // End of variables declaration//GEN-END:variables

    public void addNewTab(String patientName, String studyUid, ImagePreviewPanel viewerPreview) {
        ButtonTabComp tabComp = new ButtonTabComp(jTabbedPane1);
        ViewerJPanel viewerPanel = new ViewerJPanel();
        viewerPanel.setName(studyUid);
        viewerPanel.setLeftComponent(viewerPreview);
        jTabbedPane1.add(patientName, viewerPanel);
        jTabbedPane1.setTabComponentAt(jTabbedPane1.getTabCount() - 1, tabComp);
        jTabbedPane1.setSelectedIndex(jTabbedPane1.getTabCount() - 1);
        if (ApplicationContext.tabbedPane == null) {
            ApplicationContext.tabbedPane = (JTabbedPane) tabComp.getTabbedComponent();
        }
    }

    public void onWindowClose() {
        if (ApplicationContext.tabbedPane != null) {
            ImagePanel.setDisplayScout(false);
            for (int tab_iter = 0; tab_iter < ApplicationContext.tabbedPane.getTabCount(); tab_iter++) {
                ViewerJPanel viewerJPanel = (ViewerJPanel) ApplicationContext.tabbedPane.getComponentAt(tab_iter);
                if (!viewerJPanel.isVideoDisplay()) {
                    viewerJPanel.stopAutoPlay();
                    viewerJPanel.saveAnnotations();
                }
            }
            ApplicationContext.viewer = null;
            ApplicationContext.tabbedPane = null;
            if (ApplicationContext.isJnlp) {
                System.exit(0);
            }
        }
    }

    public void applyLocaleChange() {
        setTitle(ApplicationContext.currentBundle.getString("ImageView.title.text"));
        for (int tab_iter = 0; tab_iter < ApplicationContext.tabbedPane.getTabCount(); tab_iter++) {
            ((ViewerJPanel) ApplicationContext.tabbedPane.getComponentAt(tab_iter)).applyLocaleChange();
        }
    }
}
