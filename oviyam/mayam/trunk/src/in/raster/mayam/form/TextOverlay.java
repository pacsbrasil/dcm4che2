/* ***** BEGIN LICENSE BLOCK *****
 * Version: MPL 1.1/GPL 2.0/LGPL 2.1
 *
 * The contents of this file are subject to the Mozilla Public License Version
 * 1.1 (the "License"); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 * http://www.mozilla.org/MPL/
 *
 * Software distributed under the License is distributed on an "AS IS" basis,
 * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
 * for the specific language governing rights and limitations under the
 * License.
 *
 *
 * The Initial Developer of the Original Code is
 * Raster Images
 * Portions created by the Initial Developer are Copyright (C) 2009-2010
 * the Initial Developer. All Rights Reserved.
 *
 * Contributor(s):
 * Babu Hussain A
 * Meer Asgar Hussain B
 * Prakash J
 * Suresh V
 *
 * Alternatively, the contents of this file may be used under the terms of
 * either the GNU General Public License Version 2 or later (the "GPL"), or
 * the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
 * in which case the provisions of the GPL or the LGPL are applicable instead
 * of those above. If you wish to allow use of your version of this file only
 * under the terms of either the GPL or the LGPL, and not to allow others to
 * use your version of this file under the terms of the MPL, indicate your
 * decision by deleting the provisions above and replace them with the notice
 * and other provisions required by the GPL or the LGPL. If you do not delete
 * the provisions above, a recipient may use your version of this file under
 * the terms of any one of the MPL, the GPL or the LGPL.
 *
 * ***** END LICENSE BLOCK ***** */
package in.raster.mayam.form;

import in.raster.mayam.context.ApplicationContext;
import in.raster.mayam.param.TextOverlayParam;
import java.awt.Graphics;

/**
 *
 * @author  BabuHussain
 * @version 0.5
 *
 */
public class TextOverlay extends javax.swing.JPanel {

    /** Creates new form DateFormatPanel */
    private TextOverlayParam textOverlayParam;
    LayeredCanvas layeredCanvas;
    private boolean firstTime = true;
    private boolean textOverlay = true;
    private boolean showProbeFlag = false;

    public TextOverlay(LayeredCanvas l) {
        initComponents();
        textOverlayParam = new TextOverlayParam();
        this.setOpaque(false);
        layeredCanvas = l;
    }

    public void setProbeParameters(String[] probeParameters) {
        textOverlayParam.setProbeParameters(probeParameters);
        this.showProbeFlag = true;
        this.repaint();
    }

    public void setWindowingParameter(String WL, String WW) {
        textOverlayParam.setWindowingParameter(WL, WW);
        this.repaint();
    }

    public TextOverlayParam getTextOverlayParam() {
        return textOverlayParam;
    }

    public void setTextOverlayParam(TextOverlayParam textOverlayParam) {
        this.textOverlayParam = textOverlayParam;
    }

    public void toggleTextOverlay() {
        if (textOverlay) {
            textOverlay = false;
            this.repaint();
        } else {
            textOverlay = true;
            this.repaint();
        }
    }

    public void updateCurrentInstanceNo(int currentInstanceNo) {
        textOverlayParam.setCurrentInstance(currentInstanceNo);
        this.repaint();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        patientNameLabel = new javax.swing.JLabel();
        patientSexLabel = new javax.swing.JLabel();
        patientIDLabel = new javax.swing.JLabel();
        huLabel = new javax.swing.JLabel();
        studyTimeLabel = new javax.swing.JLabel();
        studyDateLabel = new javax.swing.JLabel();
        institutionLabel = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        patientPositionLabel = new javax.swing.JLabel();
        instanceNoLabel = new javax.swing.JLabel();
        windowingLabel = new javax.swing.JLabel();
        slicePositionLabel = new javax.swing.JLabel();
        zoomLabel = new javax.swing.JLabel();
        multiframeStatusText = new javax.swing.JLabel();
        frameNumberText = new javax.swing.JLabel();

        patientNameLabel.setBackground(new java.awt.Color(0, 0, 0));
        patientNameLabel.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        patientNameLabel.setForeground(new java.awt.Color(255, 255, 255));
        patientNameLabel.setText("Name");

        patientSexLabel.setBackground(new java.awt.Color(0, 0, 0));
        patientSexLabel.setFont(new java.awt.Font("Lucida Grande", 0, 14));
        patientSexLabel.setForeground(new java.awt.Color(255, 255, 255));
        patientSexLabel.setText("Sex");

        patientIDLabel.setBackground(new java.awt.Color(0, 0, 0));
        patientIDLabel.setFont(new java.awt.Font("Lucida Grande", 0, 14));
        patientIDLabel.setForeground(new java.awt.Color(255, 255, 255));
        patientIDLabel.setText("ID");

        huLabel.setBackground(new java.awt.Color(0, 0, 0));
        huLabel.setFont(new java.awt.Font("Lucida Grande", 0, 14));
        huLabel.setForeground(new java.awt.Color(255, 255, 255));
        huLabel.setText("hu");

        studyTimeLabel.setBackground(new java.awt.Color(0, 0, 0));
        studyTimeLabel.setFont(new java.awt.Font("Lucida Grande", 0, 14));
        studyTimeLabel.setForeground(new java.awt.Color(255, 255, 255));
        studyTimeLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        studyTimeLabel.setText("Study Time");

        studyDateLabel.setBackground(new java.awt.Color(0, 0, 0));
        studyDateLabel.setFont(new java.awt.Font("Lucida Grande", 0, 14));
        studyDateLabel.setForeground(new java.awt.Color(255, 255, 255));
        studyDateLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        studyDateLabel.setText("Study Date");

        institutionLabel.setBackground(new java.awt.Color(0, 0, 0));
        institutionLabel.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        institutionLabel.setForeground(new java.awt.Color(255, 255, 255));
        institutionLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        institutionLabel.setText("Institution");

        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);

        patientPositionLabel.setBackground(new java.awt.Color(0, 0, 0));
        patientPositionLabel.setFont(new java.awt.Font("Lucida Grande", 0, 14));
        patientPositionLabel.setForeground(new java.awt.Color(255, 255, 255));
        patientPositionLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        patientPositionLabel.setText("Patient Position");

        instanceNoLabel.setBackground(new java.awt.Color(0, 0, 0));
        instanceNoLabel.setFont(new java.awt.Font("Lucida Grande", 0, 14));
        instanceNoLabel.setForeground(new java.awt.Color(255, 255, 255));
        instanceNoLabel.setText("Im");

        windowingLabel.setBackground(new java.awt.Color(0, 0, 0));
        windowingLabel.setFont(new java.awt.Font("Lucida Grande", 0, 14));
        windowingLabel.setForeground(new java.awt.Color(255, 255, 255));
        windowingLabel.setText("Windowing");

        slicePositionLabel.setBackground(new java.awt.Color(0, 0, 0));
        slicePositionLabel.setFont(new java.awt.Font("Lucida Grande", 0, 14));
        slicePositionLabel.setForeground(new java.awt.Color(255, 255, 255));
        slicePositionLabel.setText("Slice Position");

        zoomLabel.setBackground(new java.awt.Color(0, 0, 0));
        zoomLabel.setFont(new java.awt.Font("Lucida Grande", 0, 14));
        zoomLabel.setForeground(new java.awt.Color(255, 255, 255));
        zoomLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        zoomLabel.setText("Zoom");

        multiframeStatusText.setBackground(new java.awt.Color(255, 255, 153));
        multiframeStatusText.setFont(new java.awt.Font("Lucida Grande", 0, 14));
        multiframeStatusText.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        multiframeStatusText.setText("Multiframe");
        multiframeStatusText.setOpaque(true);

        frameNumberText.setFont(new java.awt.Font("Lucida Grande", 0, 14));
        frameNumberText.setForeground(java.awt.Color.white);
        frameNumberText.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        frameNumberText.setText("Frame");

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING, false)
                    .add(org.jdesktop.layout.GroupLayout.LEADING, instanceNoLabel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 178, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(org.jdesktop.layout.GroupLayout.LEADING, layout.createSequentialGroup()
                        .add(patientNameLabel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 167, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 67, Short.MAX_VALUE))
                    .add(org.jdesktop.layout.GroupLayout.LEADING, patientIDLabel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 152, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(org.jdesktop.layout.GroupLayout.LEADING, huLabel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 187, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(org.jdesktop.layout.GroupLayout.LEADING, windowingLabel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 234, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(org.jdesktop.layout.GroupLayout.LEADING, slicePositionLabel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 185, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(org.jdesktop.layout.GroupLayout.LEADING, patientSexLabel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 91, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(jLabel8, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 257, Short.MAX_VALUE)
                    .add(layout.createSequentialGroup()
                        .add(studyDateLabel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 118, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .add(layout.createSequentialGroup()
                        .add(studyTimeLabel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 90, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .add(layout.createSequentialGroup()
                        .add(multiframeStatusText)
                        .addContainerGap())
                    .add(layout.createSequentialGroup()
                        .add(frameNumberText, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 147, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .add(layout.createSequentialGroup()
                        .add(zoomLabel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 95, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .add(layout.createSequentialGroup()
                        .add(patientPositionLabel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 151, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .add(layout.createSequentialGroup()
                        .add(institutionLabel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 237, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(patientNameLabel)
                    .add(institutionLabel))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(patientIDLabel)
                    .add(studyDateLabel))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(patientSexLabel)
                    .add(studyTimeLabel))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 72, Short.MAX_VALUE)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING, false)
                    .add(layout.createSequentialGroup()
                        .add(huLabel)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(instanceNoLabel)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(windowingLabel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 17, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(slicePositionLabel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 17, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(org.jdesktop.layout.GroupLayout.LEADING, layout.createSequentialGroup()
                        .add(jLabel8)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .add(multiframeStatusText)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(frameNumberText)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(zoomLabel)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(patientPositionLabel)
                        .add(8, 8, 8)))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void setTextOverlay() {
        patientNameLabel.setText(" " + textOverlayParam.getPatientName() != null ? textOverlayParam.getPatientName() : "");
        patientIDLabel.setText("" + "ID: " + textOverlayParam.getPatientID());
        if (textOverlayParam.getSex() != null && !textOverlayParam.getSex().equalsIgnoreCase("")) {
            patientSexLabel.setText("Sex: " + textOverlayParam.getSex());
        } else {
            patientSexLabel.setText("");
        }
        patientPositionLabel.setText(textOverlayParam.getPatientPosition() != null ? "Position: " + textOverlayParam.getPatientPosition() : "" + " ");
        studyDateLabel.setText("Study Date: " + textOverlayParam.getStudyDate() != null ? textOverlayParam.getStudyDate() : "" + " ");
        // studyTimeLabel.setText("Study Time: " + textOverlayParam.getStudyTime() != null ? textOverlayParam.getStudyTime() : "" + " ");
        slicePositionLabel.setText(textOverlayParam.getSlicePosition() != null ? " Slice pos: " + textOverlayParam.getSlicePosition() : "");

        if (ImagePanel.isProbeFlag()) {
            huLabel.setText(" " + "X:  " + textOverlayParam.getXPosition() + "  Y:  " + textOverlayParam.getYPosition() + "  Px:  " + textOverlayParam.getPxValue());
        } else {
            huLabel.setText("");
        }
        int currentInstanceNo;
        if (!ApplicationContext.databaseRef.getMultiframeStatus()) {
            currentInstanceNo = (textOverlayParam.getCurrentInstance() != 0) ? textOverlayParam.getCurrentInstance() : 1;
        } else {
            currentInstanceNo = textOverlayParam.getCurrentInstance() + 1;
        }
        int totalNo = Integer.parseInt(textOverlayParam.getTotalInstance());
        instanceNoLabel.setText(" " + "Im :" + currentInstanceNo + "/" + totalNo);
        institutionLabel.setText(textOverlayParam.getInstitutionName() != null ? textOverlayParam.getInstitutionName() : "" + " ");
        windowingLabel.setText(" " + "W " + textOverlayParam.getWindowWidth() + "/ C " + textOverlayParam.getWindowLevel());
        zoomLabel.setText(textOverlayParam.getZoomLevel());
        if (!textOverlayParam.getFramePosition().equalsIgnoreCase("")) {
            frameNumberText.setText("Frame: " + textOverlayParam.getFramePosition());
        } else {
            frameNumberText.setText("");
        }
    }

    private void setTextOverlayToNull() {
        patientNameLabel.setText("");
        patientIDLabel.setText("");
        patientSexLabel.setText("");
        patientPositionLabel.setText("");
        studyDateLabel.setText("");
        studyTimeLabel.setText("");
        slicePositionLabel.setText("");
        huLabel.setText("");
        instanceNoLabel.setText("");
        institutionLabel.setText("");
        windowingLabel.setText("");
        zoomLabel.setText("");

    }

    public void resizeHandler() {
        firstTime = true;
        repaint();
    }

    public void multiframeStatusDisplay(boolean status) {
        multiframeStatusText.setVisible(status);
    }

    @Override
    public void paint(Graphics g) {
        super.paint(g);
        if (textOverlay) {
            setTextOverlay();
        } else {
            setTextOverlayToNull();
        }
        if (firstTime) {
            this.setSize(layeredCanvas.getSize().width, layeredCanvas.getSize().height);
            firstTime = false;
            setTextOverlayToNull();
            repaint();
        }
        showProbeFlag = false;
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel frameNumberText;
    private javax.swing.JLabel huLabel;
    private javax.swing.JLabel instanceNoLabel;
    private javax.swing.JLabel institutionLabel;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel multiframeStatusText;
    private javax.swing.JLabel patientIDLabel;
    private javax.swing.JLabel patientNameLabel;
    private javax.swing.JLabel patientPositionLabel;
    private javax.swing.JLabel patientSexLabel;
    private javax.swing.JLabel slicePositionLabel;
    private javax.swing.JLabel studyDateLabel;
    private javax.swing.JLabel studyTimeLabel;
    private javax.swing.JLabel windowingLabel;
    private javax.swing.JLabel zoomLabel;
    // End of variables declaration//GEN-END:variables
}
